//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8800
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Traverse_Returns_Addon {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("PRPDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class PRPDataSet1 : global::System.Data.DataSet {
        
        private lkpArCustDataTable tablelkpArCust;
        
        private qryArPRPHistoryDataTable tableqryArPRPHistory;
        
        private lkpArHistHeaderDataTable tablelkpArHistHeader;
        
        private tblInPRPReturnsCodesDataTable tabletblInPRPReturnsCodes;
        
        private tblInPRPReturnsHeaderDataTable tabletblInPRPReturnsHeader;
        
        private lkpSmCompIDDataTable tablelkpSmCompID;
        
        private lkpInItemDataTable tablelkpInItem;
        
        private tblInPRPReturnsDetCdDataTable tabletblInPRPReturnsDetCd;
        
        private lkpInPRPReturnsDetailDataTable tablelkpInPRPReturnsDetail;
        
        private lkpInPRPReturnsHeaderDataTable tablelkpInPRPReturnsHeader;
        
        private stpSmLookupDataTable tablestpSmLookup;
        
        private stpSmLookupHeaderDataTable tablestpSmLookupHeader;
        
        private tblInPRPReturnsHistDataTable tabletblInPRPReturnsHist;
        
        private tblInPRPReturnsDetailDataTable tabletblInPRPReturnsDetail;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PRPDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected PRPDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["lkpArCust"] != null)) {
                    base.Tables.Add(new lkpArCustDataTable(ds.Tables["lkpArCust"]));
                }
                if ((ds.Tables["qryArPRPHistory"] != null)) {
                    base.Tables.Add(new qryArPRPHistoryDataTable(ds.Tables["qryArPRPHistory"]));
                }
                if ((ds.Tables["lkpArHistHeader"] != null)) {
                    base.Tables.Add(new lkpArHistHeaderDataTable(ds.Tables["lkpArHistHeader"]));
                }
                if ((ds.Tables["tblInPRPReturnsCodes"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsCodesDataTable(ds.Tables["tblInPRPReturnsCodes"]));
                }
                if ((ds.Tables["tblInPRPReturnsHeader"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsHeaderDataTable(ds.Tables["tblInPRPReturnsHeader"]));
                }
                if ((ds.Tables["lkpSmCompID"] != null)) {
                    base.Tables.Add(new lkpSmCompIDDataTable(ds.Tables["lkpSmCompID"]));
                }
                if ((ds.Tables["lkpInItem"] != null)) {
                    base.Tables.Add(new lkpInItemDataTable(ds.Tables["lkpInItem"]));
                }
                if ((ds.Tables["tblInPRPReturnsDetCd"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsDetCdDataTable(ds.Tables["tblInPRPReturnsDetCd"]));
                }
                if ((ds.Tables["lkpInPRPReturnsDetail"] != null)) {
                    base.Tables.Add(new lkpInPRPReturnsDetailDataTable(ds.Tables["lkpInPRPReturnsDetail"]));
                }
                if ((ds.Tables["lkpInPRPReturnsHeader"] != null)) {
                    base.Tables.Add(new lkpInPRPReturnsHeaderDataTable(ds.Tables["lkpInPRPReturnsHeader"]));
                }
                if ((ds.Tables["stpSmLookup"] != null)) {
                    base.Tables.Add(new stpSmLookupDataTable(ds.Tables["stpSmLookup"]));
                }
                if ((ds.Tables["stpSmLookupHeader"] != null)) {
                    base.Tables.Add(new stpSmLookupHeaderDataTable(ds.Tables["stpSmLookupHeader"]));
                }
                if ((ds.Tables["tblInPRPReturnsHist"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsHistDataTable(ds.Tables["tblInPRPReturnsHist"]));
                }
                if ((ds.Tables["tblInPRPReturnsDetail"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsDetailDataTable(ds.Tables["tblInPRPReturnsDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lkpArCustDataTable lkpArCust {
            get {
                return this.tablelkpArCust;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public qryArPRPHistoryDataTable qryArPRPHistory {
            get {
                return this.tableqryArPRPHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lkpArHistHeaderDataTable lkpArHistHeader {
            get {
                return this.tablelkpArHistHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblInPRPReturnsCodesDataTable tblInPRPReturnsCodes {
            get {
                return this.tabletblInPRPReturnsCodes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblInPRPReturnsHeaderDataTable tblInPRPReturnsHeader {
            get {
                return this.tabletblInPRPReturnsHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lkpSmCompIDDataTable lkpSmCompID {
            get {
                return this.tablelkpSmCompID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lkpInItemDataTable lkpInItem {
            get {
                return this.tablelkpInItem;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblInPRPReturnsDetCdDataTable tblInPRPReturnsDetCd {
            get {
                return this.tabletblInPRPReturnsDetCd;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lkpInPRPReturnsDetailDataTable lkpInPRPReturnsDetail {
            get {
                return this.tablelkpInPRPReturnsDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public lkpInPRPReturnsHeaderDataTable lkpInPRPReturnsHeader {
            get {
                return this.tablelkpInPRPReturnsHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stpSmLookupDataTable stpSmLookup {
            get {
                return this.tablestpSmLookup;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public stpSmLookupHeaderDataTable stpSmLookupHeader {
            get {
                return this.tablestpSmLookupHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblInPRPReturnsHistDataTable tblInPRPReturnsHist {
            get {
                return this.tabletblInPRPReturnsHist;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblInPRPReturnsDetailDataTable tblInPRPReturnsDetail {
            get {
                return this.tabletblInPRPReturnsDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            PRPDataSet1 cln = ((PRPDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["lkpArCust"] != null)) {
                    base.Tables.Add(new lkpArCustDataTable(ds.Tables["lkpArCust"]));
                }
                if ((ds.Tables["qryArPRPHistory"] != null)) {
                    base.Tables.Add(new qryArPRPHistoryDataTable(ds.Tables["qryArPRPHistory"]));
                }
                if ((ds.Tables["lkpArHistHeader"] != null)) {
                    base.Tables.Add(new lkpArHistHeaderDataTable(ds.Tables["lkpArHistHeader"]));
                }
                if ((ds.Tables["tblInPRPReturnsCodes"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsCodesDataTable(ds.Tables["tblInPRPReturnsCodes"]));
                }
                if ((ds.Tables["tblInPRPReturnsHeader"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsHeaderDataTable(ds.Tables["tblInPRPReturnsHeader"]));
                }
                if ((ds.Tables["lkpSmCompID"] != null)) {
                    base.Tables.Add(new lkpSmCompIDDataTable(ds.Tables["lkpSmCompID"]));
                }
                if ((ds.Tables["lkpInItem"] != null)) {
                    base.Tables.Add(new lkpInItemDataTable(ds.Tables["lkpInItem"]));
                }
                if ((ds.Tables["tblInPRPReturnsDetCd"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsDetCdDataTable(ds.Tables["tblInPRPReturnsDetCd"]));
                }
                if ((ds.Tables["lkpInPRPReturnsDetail"] != null)) {
                    base.Tables.Add(new lkpInPRPReturnsDetailDataTable(ds.Tables["lkpInPRPReturnsDetail"]));
                }
                if ((ds.Tables["lkpInPRPReturnsHeader"] != null)) {
                    base.Tables.Add(new lkpInPRPReturnsHeaderDataTable(ds.Tables["lkpInPRPReturnsHeader"]));
                }
                if ((ds.Tables["stpSmLookup"] != null)) {
                    base.Tables.Add(new stpSmLookupDataTable(ds.Tables["stpSmLookup"]));
                }
                if ((ds.Tables["stpSmLookupHeader"] != null)) {
                    base.Tables.Add(new stpSmLookupHeaderDataTable(ds.Tables["stpSmLookupHeader"]));
                }
                if ((ds.Tables["tblInPRPReturnsHist"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsHistDataTable(ds.Tables["tblInPRPReturnsHist"]));
                }
                if ((ds.Tables["tblInPRPReturnsDetail"] != null)) {
                    base.Tables.Add(new tblInPRPReturnsDetailDataTable(ds.Tables["tblInPRPReturnsDetail"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablelkpArCust = ((lkpArCustDataTable)(base.Tables["lkpArCust"]));
            if ((initTable == true)) {
                if ((this.tablelkpArCust != null)) {
                    this.tablelkpArCust.InitVars();
                }
            }
            this.tableqryArPRPHistory = ((qryArPRPHistoryDataTable)(base.Tables["qryArPRPHistory"]));
            if ((initTable == true)) {
                if ((this.tableqryArPRPHistory != null)) {
                    this.tableqryArPRPHistory.InitVars();
                }
            }
            this.tablelkpArHistHeader = ((lkpArHistHeaderDataTable)(base.Tables["lkpArHistHeader"]));
            if ((initTable == true)) {
                if ((this.tablelkpArHistHeader != null)) {
                    this.tablelkpArHistHeader.InitVars();
                }
            }
            this.tabletblInPRPReturnsCodes = ((tblInPRPReturnsCodesDataTable)(base.Tables["tblInPRPReturnsCodes"]));
            if ((initTable == true)) {
                if ((this.tabletblInPRPReturnsCodes != null)) {
                    this.tabletblInPRPReturnsCodes.InitVars();
                }
            }
            this.tabletblInPRPReturnsHeader = ((tblInPRPReturnsHeaderDataTable)(base.Tables["tblInPRPReturnsHeader"]));
            if ((initTable == true)) {
                if ((this.tabletblInPRPReturnsHeader != null)) {
                    this.tabletblInPRPReturnsHeader.InitVars();
                }
            }
            this.tablelkpSmCompID = ((lkpSmCompIDDataTable)(base.Tables["lkpSmCompID"]));
            if ((initTable == true)) {
                if ((this.tablelkpSmCompID != null)) {
                    this.tablelkpSmCompID.InitVars();
                }
            }
            this.tablelkpInItem = ((lkpInItemDataTable)(base.Tables["lkpInItem"]));
            if ((initTable == true)) {
                if ((this.tablelkpInItem != null)) {
                    this.tablelkpInItem.InitVars();
                }
            }
            this.tabletblInPRPReturnsDetCd = ((tblInPRPReturnsDetCdDataTable)(base.Tables["tblInPRPReturnsDetCd"]));
            if ((initTable == true)) {
                if ((this.tabletblInPRPReturnsDetCd != null)) {
                    this.tabletblInPRPReturnsDetCd.InitVars();
                }
            }
            this.tablelkpInPRPReturnsDetail = ((lkpInPRPReturnsDetailDataTable)(base.Tables["lkpInPRPReturnsDetail"]));
            if ((initTable == true)) {
                if ((this.tablelkpInPRPReturnsDetail != null)) {
                    this.tablelkpInPRPReturnsDetail.InitVars();
                }
            }
            this.tablelkpInPRPReturnsHeader = ((lkpInPRPReturnsHeaderDataTable)(base.Tables["lkpInPRPReturnsHeader"]));
            if ((initTable == true)) {
                if ((this.tablelkpInPRPReturnsHeader != null)) {
                    this.tablelkpInPRPReturnsHeader.InitVars();
                }
            }
            this.tablestpSmLookup = ((stpSmLookupDataTable)(base.Tables["stpSmLookup"]));
            if ((initTable == true)) {
                if ((this.tablestpSmLookup != null)) {
                    this.tablestpSmLookup.InitVars();
                }
            }
            this.tablestpSmLookupHeader = ((stpSmLookupHeaderDataTable)(base.Tables["stpSmLookupHeader"]));
            if ((initTable == true)) {
                if ((this.tablestpSmLookupHeader != null)) {
                    this.tablestpSmLookupHeader.InitVars();
                }
            }
            this.tabletblInPRPReturnsHist = ((tblInPRPReturnsHistDataTable)(base.Tables["tblInPRPReturnsHist"]));
            if ((initTable == true)) {
                if ((this.tabletblInPRPReturnsHist != null)) {
                    this.tabletblInPRPReturnsHist.InitVars();
                }
            }
            this.tabletblInPRPReturnsDetail = ((tblInPRPReturnsDetailDataTable)(base.Tables["tblInPRPReturnsDetail"]));
            if ((initTable == true)) {
                if ((this.tabletblInPRPReturnsDetail != null)) {
                    this.tabletblInPRPReturnsDetail.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "PRPDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/PRPDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablelkpArCust = new lkpArCustDataTable();
            base.Tables.Add(this.tablelkpArCust);
            this.tableqryArPRPHistory = new qryArPRPHistoryDataTable();
            base.Tables.Add(this.tableqryArPRPHistory);
            this.tablelkpArHistHeader = new lkpArHistHeaderDataTable();
            base.Tables.Add(this.tablelkpArHistHeader);
            this.tabletblInPRPReturnsCodes = new tblInPRPReturnsCodesDataTable();
            base.Tables.Add(this.tabletblInPRPReturnsCodes);
            this.tabletblInPRPReturnsHeader = new tblInPRPReturnsHeaderDataTable();
            base.Tables.Add(this.tabletblInPRPReturnsHeader);
            this.tablelkpSmCompID = new lkpSmCompIDDataTable();
            base.Tables.Add(this.tablelkpSmCompID);
            this.tablelkpInItem = new lkpInItemDataTable();
            base.Tables.Add(this.tablelkpInItem);
            this.tabletblInPRPReturnsDetCd = new tblInPRPReturnsDetCdDataTable();
            base.Tables.Add(this.tabletblInPRPReturnsDetCd);
            this.tablelkpInPRPReturnsDetail = new lkpInPRPReturnsDetailDataTable();
            base.Tables.Add(this.tablelkpInPRPReturnsDetail);
            this.tablelkpInPRPReturnsHeader = new lkpInPRPReturnsHeaderDataTable();
            base.Tables.Add(this.tablelkpInPRPReturnsHeader);
            this.tablestpSmLookup = new stpSmLookupDataTable();
            base.Tables.Add(this.tablestpSmLookup);
            this.tablestpSmLookupHeader = new stpSmLookupHeaderDataTable();
            base.Tables.Add(this.tablestpSmLookupHeader);
            this.tabletblInPRPReturnsHist = new tblInPRPReturnsHistDataTable();
            base.Tables.Add(this.tabletblInPRPReturnsHist);
            this.tabletblInPRPReturnsDetail = new tblInPRPReturnsDetailDataTable();
            base.Tables.Add(this.tabletblInPRPReturnsDetail);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelkpArCust() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeqryArPRPHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelkpArHistHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblInPRPReturnsCodes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblInPRPReturnsHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelkpSmCompID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelkpInItem() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblInPRPReturnsDetCd() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelkpInPRPReturnsDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializelkpInPRPReturnsHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestpSmLookup() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializestpSmLookupHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblInPRPReturnsHist() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblInPRPReturnsDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            PRPDataSet1 ds = new PRPDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void lkpArCustRowChangeEventHandler(object sender, lkpArCustRowChangeEvent e);
        
        public delegate void qryArPRPHistoryRowChangeEventHandler(object sender, qryArPRPHistoryRowChangeEvent e);
        
        public delegate void lkpArHistHeaderRowChangeEventHandler(object sender, lkpArHistHeaderRowChangeEvent e);
        
        public delegate void tblInPRPReturnsCodesRowChangeEventHandler(object sender, tblInPRPReturnsCodesRowChangeEvent e);
        
        public delegate void tblInPRPReturnsHeaderRowChangeEventHandler(object sender, tblInPRPReturnsHeaderRowChangeEvent e);
        
        public delegate void lkpSmCompIDRowChangeEventHandler(object sender, lkpSmCompIDRowChangeEvent e);
        
        public delegate void lkpInItemRowChangeEventHandler(object sender, lkpInItemRowChangeEvent e);
        
        public delegate void tblInPRPReturnsDetCdRowChangeEventHandler(object sender, tblInPRPReturnsDetCdRowChangeEvent e);
        
        public delegate void lkpInPRPReturnsDetailRowChangeEventHandler(object sender, lkpInPRPReturnsDetailRowChangeEvent e);
        
        public delegate void lkpInPRPReturnsHeaderRowChangeEventHandler(object sender, lkpInPRPReturnsHeaderRowChangeEvent e);
        
        public delegate void stpSmLookupRowChangeEventHandler(object sender, stpSmLookupRowChangeEvent e);
        
        public delegate void stpSmLookupHeaderRowChangeEventHandler(object sender, stpSmLookupHeaderRowChangeEvent e);
        
        public delegate void tblInPRPReturnsHistRowChangeEventHandler(object sender, tblInPRPReturnsHistRowChangeEvent e);
        
        public delegate void tblInPRPReturnsDetailRowChangeEventHandler(object sender, tblInPRPReturnsDetailRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lkpArCustDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustId;
            
            private global::System.Data.DataColumn columnCustName;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnAddr1;
            
            private global::System.Data.DataColumn columnAddr2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnPostalCode;
            
            private global::System.Data.DataColumn columnShipZone;
            
            private global::System.Data.DataColumn columnIntlPrefix;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnAttn;
            
            private global::System.Data.DataColumn columnClassId;
            
            private global::System.Data.DataColumn columnSalesRepId1;
            
            private global::System.Data.DataColumn columnSalesRepId2;
            
            private global::System.Data.DataColumn columnRep1PctInvc;
            
            private global::System.Data.DataColumn columnRep2PctInvc;
            
            private global::System.Data.DataColumn columnTermsCode;
            
            private global::System.Data.DataColumn columnPmtMethod;
            
            private global::System.Data.DataColumn columnCcNum;
            
            private global::System.Data.DataColumn columnCcName;
            
            private global::System.Data.DataColumn columnCcExpire;
            
            private global::System.Data.DataColumn columnGroupCode;
            
            private global::System.Data.DataColumn columnStmtInvcCode;
            
            private global::System.Data.DataColumn columnAcctType;
            
            private global::System.Data.DataColumn columnPriceCode;
            
            private global::System.Data.DataColumn columnDistCode;
            
            private global::System.Data.DataColumn columnCalcFinch;
            
            private global::System.Data.DataColumn columnCreditLimit;
            
            private global::System.Data.DataColumn columnCreditHold;
            
            private global::System.Data.DataColumn columnPartialShip;
            
            private global::System.Data.DataColumn columnAutoCreditHold;
            
            private global::System.Data.DataColumn columnTaxLocId;
            
            private global::System.Data.DataColumn columnTaxable;
            
            private global::System.Data.DataColumn columnTaxExemptId;
            
            private global::System.Data.DataColumn columnCurrencyId;
            
            private global::System.Data.DataColumn columnTerrId;
            
            private global::System.Data.DataColumn columnCcCompYn;
            
            private global::System.Data.DataColumn columnCustLevel;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnInternet;
            
            private global::System.Data.DataColumn columnNewFinch;
            
            private global::System.Data.DataColumn columnUnpaidFinch;
            
            private global::System.Data.DataColumn columnCurAmtDue;
            
            private global::System.Data.DataColumn columnCurAmtDueFgn;
            
            private global::System.Data.DataColumn columnBalAge1;
            
            private global::System.Data.DataColumn columnBalAge2;
            
            private global::System.Data.DataColumn columnBalAge3;
            
            private global::System.Data.DataColumn columnBalAge4;
            
            private global::System.Data.DataColumn columnUnapplCredit;
            
            private global::System.Data.DataColumn columnFirstSaleDate;
            
            private global::System.Data.DataColumn columnLastSaleDate;
            
            private global::System.Data.DataColumn columnLastSaleAmt;
            
            private global::System.Data.DataColumn columnLastSaleInvc;
            
            private global::System.Data.DataColumn columnLastPayDate;
            
            private global::System.Data.DataColumn columnLastPayAmt;
            
            private global::System.Data.DataColumn columnLastPayCheckNum;
            
            private global::System.Data.DataColumn columnHighBal;
            
            private global::System.Data.DataColumn columnCreditStatus;
            
            private global::System.Data.DataColumn columnWebDisplInQtyYn;
            
            private global::System.Data.DataColumn columnts;
            
            private global::System.Data.DataColumn columnAllowCharge;
            
            private global::System.Data.DataColumn columnVCode;
            
            private global::System.Data.DataColumn columnEmailStmntYn;
            
            private global::System.Data.DataColumn columnFaxStmntYn;
            
            private global::System.Data.DataColumn columnUsrFld1;
            
            private global::System.Data.DataColumn columnUsrFld2;
            
            private global::System.Data.DataColumn columnUsrFld3;
            
            private global::System.Data.DataColumn columnUsrFld4;
            
            private global::System.Data.DataColumn columnUsrFld5;
            
            private global::System.Data.DataColumn columnUsrFld6;
            
            private global::System.Data.DataColumn columnUsrFld7;
            
            private global::System.Data.DataColumn columnUsrFld8;
            
            private global::System.Data.DataColumn columnUsrFld9;
            
            private global::System.Data.DataColumn columnUsrFld10;
            
            private global::System.Data.DataColumn columnUsrFld11;
            
            private global::System.Data.DataColumn columnUsrFld12;
            
            private global::System.Data.DataColumn columnUsrFld13;
            
            private global::System.Data.DataColumn columnUsrFld14;
            
            private global::System.Data.DataColumn columnUsrFld15;
            
            private global::System.Data.DataColumn columnUsrFld16;
            
            private global::System.Data.DataColumn columnUsrFld17;
            
            private global::System.Data.DataColumn columnUsrFld18;
            
            private global::System.Data.DataColumn columnUsrFld19;
            
            private global::System.Data.DataColumn columnUsrFld20;
            
            private global::System.Data.DataColumn columnSchoolYn;
            
            private global::System.Data.DataColumn columnInactiveYn;
            
            private global::System.Data.DataColumn columnMobile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustDataTable() {
                this.TableName = "lkpArCust";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpArCustDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lkpArCustDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustIdColumn {
                get {
                    return this.columnCustId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustNameColumn {
                get {
                    return this.columnCustName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Addr1Column {
                get {
                    return this.columnAddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Addr2Column {
                get {
                    return this.columnAddr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostalCodeColumn {
                get {
                    return this.columnPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipZoneColumn {
                get {
                    return this.columnShipZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IntlPrefixColumn {
                get {
                    return this.columnIntlPrefix;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttnColumn {
                get {
                    return this.columnAttn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassIdColumn {
                get {
                    return this.columnClassId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRepId1Column {
                get {
                    return this.columnSalesRepId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesRepId2Column {
                get {
                    return this.columnSalesRepId2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1PctInvcColumn {
                get {
                    return this.columnRep1PctInvc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep2PctInvcColumn {
                get {
                    return this.columnRep2PctInvc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsCodeColumn {
                get {
                    return this.columnTermsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PmtMethodColumn {
                get {
                    return this.columnPmtMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CcNumColumn {
                get {
                    return this.columnCcNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CcNameColumn {
                get {
                    return this.columnCcName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CcExpireColumn {
                get {
                    return this.columnCcExpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GroupCodeColumn {
                get {
                    return this.columnGroupCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StmtInvcCodeColumn {
                get {
                    return this.columnStmtInvcCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcctTypeColumn {
                get {
                    return this.columnAcctType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceCodeColumn {
                get {
                    return this.columnPriceCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistCodeColumn {
                get {
                    return this.columnDistCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CalcFinchColumn {
                get {
                    return this.columnCalcFinch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditLimitColumn {
                get {
                    return this.columnCreditLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditHoldColumn {
                get {
                    return this.columnCreditHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartialShipColumn {
                get {
                    return this.columnPartialShip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AutoCreditHoldColumn {
                get {
                    return this.columnAutoCreditHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxLocIdColumn {
                get {
                    return this.columnTaxLocId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableColumn {
                get {
                    return this.columnTaxable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxExemptIdColumn {
                get {
                    return this.columnTaxExemptId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyIdColumn {
                get {
                    return this.columnCurrencyId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TerrIdColumn {
                get {
                    return this.columnTerrId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CcCompYnColumn {
                get {
                    return this.columnCcCompYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustLevelColumn {
                get {
                    return this.columnCustLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InternetColumn {
                get {
                    return this.columnInternet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NewFinchColumn {
                get {
                    return this.columnNewFinch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnpaidFinchColumn {
                get {
                    return this.columnUnpaidFinch;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurAmtDueColumn {
                get {
                    return this.columnCurAmtDue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurAmtDueFgnColumn {
                get {
                    return this.columnCurAmtDueFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalAge1Column {
                get {
                    return this.columnBalAge1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalAge2Column {
                get {
                    return this.columnBalAge2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalAge3Column {
                get {
                    return this.columnBalAge3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalAge4Column {
                get {
                    return this.columnBalAge4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnapplCreditColumn {
                get {
                    return this.columnUnapplCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstSaleDateColumn {
                get {
                    return this.columnFirstSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastSaleDateColumn {
                get {
                    return this.columnLastSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastSaleAmtColumn {
                get {
                    return this.columnLastSaleAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastSaleInvcColumn {
                get {
                    return this.columnLastSaleInvc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPayDateColumn {
                get {
                    return this.columnLastPayDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPayAmtColumn {
                get {
                    return this.columnLastPayAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastPayCheckNumColumn {
                get {
                    return this.columnLastPayCheckNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HighBalColumn {
                get {
                    return this.columnHighBal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditStatusColumn {
                get {
                    return this.columnCreditStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WebDisplInQtyYnColumn {
                get {
                    return this.columnWebDisplInQtyYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tsColumn {
                get {
                    return this.columnts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllowChargeColumn {
                get {
                    return this.columnAllowCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VCodeColumn {
                get {
                    return this.columnVCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailStmntYnColumn {
                get {
                    return this.columnEmailStmntYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxStmntYnColumn {
                get {
                    return this.columnFaxStmntYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld1Column {
                get {
                    return this.columnUsrFld1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld2Column {
                get {
                    return this.columnUsrFld2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld3Column {
                get {
                    return this.columnUsrFld3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld4Column {
                get {
                    return this.columnUsrFld4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld5Column {
                get {
                    return this.columnUsrFld5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld6Column {
                get {
                    return this.columnUsrFld6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld7Column {
                get {
                    return this.columnUsrFld7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld8Column {
                get {
                    return this.columnUsrFld8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld9Column {
                get {
                    return this.columnUsrFld9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld10Column {
                get {
                    return this.columnUsrFld10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld11Column {
                get {
                    return this.columnUsrFld11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld12Column {
                get {
                    return this.columnUsrFld12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld13Column {
                get {
                    return this.columnUsrFld13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld14Column {
                get {
                    return this.columnUsrFld14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld15Column {
                get {
                    return this.columnUsrFld15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld16Column {
                get {
                    return this.columnUsrFld16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld17Column {
                get {
                    return this.columnUsrFld17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld18Column {
                get {
                    return this.columnUsrFld18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld19Column {
                get {
                    return this.columnUsrFld19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsrFld20Column {
                get {
                    return this.columnUsrFld20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolYnColumn {
                get {
                    return this.columnSchoolYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InactiveYnColumn {
                get {
                    return this.columnInactiveYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustRow this[int index] {
                get {
                    return ((lkpArCustRow)(this.Rows[index]));
                }
            }
            
            public event lkpArCustRowChangeEventHandler lkpArCustRowChanging;
            
            public event lkpArCustRowChangeEventHandler lkpArCustRowChanged;
            
            public event lkpArCustRowChangeEventHandler lkpArCustRowDeleting;
            
            public event lkpArCustRowChangeEventHandler lkpArCustRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlkpArCustRow(lkpArCustRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustRow AddlkpArCustRow(
                        string CustId, 
                        string CustName, 
                        string Contact, 
                        string Addr1, 
                        string Addr2, 
                        string City, 
                        string Region, 
                        string Country, 
                        string PostalCode, 
                        string ShipZone, 
                        string IntlPrefix, 
                        string Phone, 
                        string Fax, 
                        string Attn, 
                        string ClassId, 
                        string SalesRepId1, 
                        string SalesRepId2, 
                        decimal Rep1PctInvc, 
                        decimal Rep2PctInvc, 
                        string TermsCode, 
                        string PmtMethod, 
                        string CcNum, 
                        string CcName, 
                        System.DateTime CcExpire, 
                        string GroupCode, 
                        byte StmtInvcCode, 
                        byte AcctType, 
                        string PriceCode, 
                        string DistCode, 
                        bool CalcFinch, 
                        decimal CreditLimit, 
                        bool CreditHold, 
                        bool PartialShip, 
                        bool AutoCreditHold, 
                        string TaxLocId, 
                        bool Taxable, 
                        string TaxExemptId, 
                        string CurrencyId, 
                        string TerrId, 
                        bool CcCompYn, 
                        string CustLevel, 
                        string Email, 
                        string Internet, 
                        decimal NewFinch, 
                        decimal UnpaidFinch, 
                        decimal CurAmtDue, 
                        decimal CurAmtDueFgn, 
                        decimal BalAge1, 
                        decimal BalAge2, 
                        decimal BalAge3, 
                        decimal BalAge4, 
                        decimal UnapplCredit, 
                        System.DateTime FirstSaleDate, 
                        System.DateTime LastSaleDate, 
                        decimal LastSaleAmt, 
                        string LastSaleInvc, 
                        System.DateTime LastPayDate, 
                        decimal LastPayAmt, 
                        string LastPayCheckNum, 
                        decimal HighBal, 
                        string CreditStatus, 
                        bool WebDisplInQtyYn, 
                        byte[] ts, 
                        bool AllowCharge, 
                        string VCode, 
                        bool EmailStmntYn, 
                        bool FaxStmntYn, 
                        string UsrFld1, 
                        string UsrFld2, 
                        string UsrFld3, 
                        string UsrFld4, 
                        string UsrFld5, 
                        string UsrFld6, 
                        string UsrFld7, 
                        string UsrFld8, 
                        string UsrFld9, 
                        string UsrFld10, 
                        string UsrFld11, 
                        string UsrFld12, 
                        string UsrFld13, 
                        string UsrFld14, 
                        string UsrFld15, 
                        string UsrFld16, 
                        string UsrFld17, 
                        string UsrFld18, 
                        string UsrFld19, 
                        string UsrFld20, 
                        bool SchoolYn, 
                        bool InactiveYn, 
                        string Mobile) {
                lkpArCustRow rowlkpArCustRow = ((lkpArCustRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustId,
                        CustName,
                        Contact,
                        Addr1,
                        Addr2,
                        City,
                        Region,
                        Country,
                        PostalCode,
                        ShipZone,
                        IntlPrefix,
                        Phone,
                        Fax,
                        Attn,
                        ClassId,
                        SalesRepId1,
                        SalesRepId2,
                        Rep1PctInvc,
                        Rep2PctInvc,
                        TermsCode,
                        PmtMethod,
                        CcNum,
                        CcName,
                        CcExpire,
                        GroupCode,
                        StmtInvcCode,
                        AcctType,
                        PriceCode,
                        DistCode,
                        CalcFinch,
                        CreditLimit,
                        CreditHold,
                        PartialShip,
                        AutoCreditHold,
                        TaxLocId,
                        Taxable,
                        TaxExemptId,
                        CurrencyId,
                        TerrId,
                        CcCompYn,
                        CustLevel,
                        Email,
                        Internet,
                        NewFinch,
                        UnpaidFinch,
                        CurAmtDue,
                        CurAmtDueFgn,
                        BalAge1,
                        BalAge2,
                        BalAge3,
                        BalAge4,
                        UnapplCredit,
                        FirstSaleDate,
                        LastSaleDate,
                        LastSaleAmt,
                        LastSaleInvc,
                        LastPayDate,
                        LastPayAmt,
                        LastPayCheckNum,
                        HighBal,
                        CreditStatus,
                        WebDisplInQtyYn,
                        ts,
                        AllowCharge,
                        VCode,
                        EmailStmntYn,
                        FaxStmntYn,
                        UsrFld1,
                        UsrFld2,
                        UsrFld3,
                        UsrFld4,
                        UsrFld5,
                        UsrFld6,
                        UsrFld7,
                        UsrFld8,
                        UsrFld9,
                        UsrFld10,
                        UsrFld11,
                        UsrFld12,
                        UsrFld13,
                        UsrFld14,
                        UsrFld15,
                        UsrFld16,
                        UsrFld17,
                        UsrFld18,
                        UsrFld19,
                        UsrFld20,
                        SchoolYn,
                        InactiveYn,
                        Mobile};
                rowlkpArCustRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlkpArCustRow);
                return rowlkpArCustRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustRow FindByCustId(string CustId) {
                return ((lkpArCustRow)(this.Rows.Find(new object[] {
                            CustId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lkpArCustDataTable cln = ((lkpArCustDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lkpArCustDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustId = base.Columns["CustId"];
                this.columnCustName = base.Columns["CustName"];
                this.columnContact = base.Columns["Contact"];
                this.columnAddr1 = base.Columns["Addr1"];
                this.columnAddr2 = base.Columns["Addr2"];
                this.columnCity = base.Columns["City"];
                this.columnRegion = base.Columns["Region"];
                this.columnCountry = base.Columns["Country"];
                this.columnPostalCode = base.Columns["PostalCode"];
                this.columnShipZone = base.Columns["ShipZone"];
                this.columnIntlPrefix = base.Columns["IntlPrefix"];
                this.columnPhone = base.Columns["Phone"];
                this.columnFax = base.Columns["Fax"];
                this.columnAttn = base.Columns["Attn"];
                this.columnClassId = base.Columns["ClassId"];
                this.columnSalesRepId1 = base.Columns["SalesRepId1"];
                this.columnSalesRepId2 = base.Columns["SalesRepId2"];
                this.columnRep1PctInvc = base.Columns["Rep1PctInvc"];
                this.columnRep2PctInvc = base.Columns["Rep2PctInvc"];
                this.columnTermsCode = base.Columns["TermsCode"];
                this.columnPmtMethod = base.Columns["PmtMethod"];
                this.columnCcNum = base.Columns["CcNum"];
                this.columnCcName = base.Columns["CcName"];
                this.columnCcExpire = base.Columns["CcExpire"];
                this.columnGroupCode = base.Columns["GroupCode"];
                this.columnStmtInvcCode = base.Columns["StmtInvcCode"];
                this.columnAcctType = base.Columns["AcctType"];
                this.columnPriceCode = base.Columns["PriceCode"];
                this.columnDistCode = base.Columns["DistCode"];
                this.columnCalcFinch = base.Columns["CalcFinch"];
                this.columnCreditLimit = base.Columns["CreditLimit"];
                this.columnCreditHold = base.Columns["CreditHold"];
                this.columnPartialShip = base.Columns["PartialShip"];
                this.columnAutoCreditHold = base.Columns["AutoCreditHold"];
                this.columnTaxLocId = base.Columns["TaxLocId"];
                this.columnTaxable = base.Columns["Taxable"];
                this.columnTaxExemptId = base.Columns["TaxExemptId"];
                this.columnCurrencyId = base.Columns["CurrencyId"];
                this.columnTerrId = base.Columns["TerrId"];
                this.columnCcCompYn = base.Columns["CcCompYn"];
                this.columnCustLevel = base.Columns["CustLevel"];
                this.columnEmail = base.Columns["Email"];
                this.columnInternet = base.Columns["Internet"];
                this.columnNewFinch = base.Columns["NewFinch"];
                this.columnUnpaidFinch = base.Columns["UnpaidFinch"];
                this.columnCurAmtDue = base.Columns["CurAmtDue"];
                this.columnCurAmtDueFgn = base.Columns["CurAmtDueFgn"];
                this.columnBalAge1 = base.Columns["BalAge1"];
                this.columnBalAge2 = base.Columns["BalAge2"];
                this.columnBalAge3 = base.Columns["BalAge3"];
                this.columnBalAge4 = base.Columns["BalAge4"];
                this.columnUnapplCredit = base.Columns["UnapplCredit"];
                this.columnFirstSaleDate = base.Columns["FirstSaleDate"];
                this.columnLastSaleDate = base.Columns["LastSaleDate"];
                this.columnLastSaleAmt = base.Columns["LastSaleAmt"];
                this.columnLastSaleInvc = base.Columns["LastSaleInvc"];
                this.columnLastPayDate = base.Columns["LastPayDate"];
                this.columnLastPayAmt = base.Columns["LastPayAmt"];
                this.columnLastPayCheckNum = base.Columns["LastPayCheckNum"];
                this.columnHighBal = base.Columns["HighBal"];
                this.columnCreditStatus = base.Columns["CreditStatus"];
                this.columnWebDisplInQtyYn = base.Columns["WebDisplInQtyYn"];
                this.columnts = base.Columns["ts"];
                this.columnAllowCharge = base.Columns["AllowCharge"];
                this.columnVCode = base.Columns["VCode"];
                this.columnEmailStmntYn = base.Columns["EmailStmntYn"];
                this.columnFaxStmntYn = base.Columns["FaxStmntYn"];
                this.columnUsrFld1 = base.Columns["UsrFld1"];
                this.columnUsrFld2 = base.Columns["UsrFld2"];
                this.columnUsrFld3 = base.Columns["UsrFld3"];
                this.columnUsrFld4 = base.Columns["UsrFld4"];
                this.columnUsrFld5 = base.Columns["UsrFld5"];
                this.columnUsrFld6 = base.Columns["UsrFld6"];
                this.columnUsrFld7 = base.Columns["UsrFld7"];
                this.columnUsrFld8 = base.Columns["UsrFld8"];
                this.columnUsrFld9 = base.Columns["UsrFld9"];
                this.columnUsrFld10 = base.Columns["UsrFld10"];
                this.columnUsrFld11 = base.Columns["UsrFld11"];
                this.columnUsrFld12 = base.Columns["UsrFld12"];
                this.columnUsrFld13 = base.Columns["UsrFld13"];
                this.columnUsrFld14 = base.Columns["UsrFld14"];
                this.columnUsrFld15 = base.Columns["UsrFld15"];
                this.columnUsrFld16 = base.Columns["UsrFld16"];
                this.columnUsrFld17 = base.Columns["UsrFld17"];
                this.columnUsrFld18 = base.Columns["UsrFld18"];
                this.columnUsrFld19 = base.Columns["UsrFld19"];
                this.columnUsrFld20 = base.Columns["UsrFld20"];
                this.columnSchoolYn = base.Columns["SchoolYn"];
                this.columnInactiveYn = base.Columns["InactiveYn"];
                this.columnMobile = base.Columns["Mobile"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustId = new global::System.Data.DataColumn("CustId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustId);
                this.columnCustName = new global::System.Data.DataColumn("CustName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustName);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnAddr1 = new global::System.Data.DataColumn("Addr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddr1);
                this.columnAddr2 = new global::System.Data.DataColumn("Addr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddr2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnPostalCode = new global::System.Data.DataColumn("PostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostalCode);
                this.columnShipZone = new global::System.Data.DataColumn("ShipZone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipZone);
                this.columnIntlPrefix = new global::System.Data.DataColumn("IntlPrefix", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntlPrefix);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnAttn = new global::System.Data.DataColumn("Attn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttn);
                this.columnClassId = new global::System.Data.DataColumn("ClassId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClassId);
                this.columnSalesRepId1 = new global::System.Data.DataColumn("SalesRepId1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRepId1);
                this.columnSalesRepId2 = new global::System.Data.DataColumn("SalesRepId2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesRepId2);
                this.columnRep1PctInvc = new global::System.Data.DataColumn("Rep1PctInvc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1PctInvc);
                this.columnRep2PctInvc = new global::System.Data.DataColumn("Rep2PctInvc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep2PctInvc);
                this.columnTermsCode = new global::System.Data.DataColumn("TermsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermsCode);
                this.columnPmtMethod = new global::System.Data.DataColumn("PmtMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPmtMethod);
                this.columnCcNum = new global::System.Data.DataColumn("CcNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCcNum);
                this.columnCcName = new global::System.Data.DataColumn("CcName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCcName);
                this.columnCcExpire = new global::System.Data.DataColumn("CcExpire", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCcExpire);
                this.columnGroupCode = new global::System.Data.DataColumn("GroupCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupCode);
                this.columnStmtInvcCode = new global::System.Data.DataColumn("StmtInvcCode", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStmtInvcCode);
                this.columnAcctType = new global::System.Data.DataColumn("AcctType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctType);
                this.columnPriceCode = new global::System.Data.DataColumn("PriceCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceCode);
                this.columnDistCode = new global::System.Data.DataColumn("DistCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistCode);
                this.columnCalcFinch = new global::System.Data.DataColumn("CalcFinch", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalcFinch);
                this.columnCreditLimit = new global::System.Data.DataColumn("CreditLimit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditLimit);
                this.columnCreditHold = new global::System.Data.DataColumn("CreditHold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditHold);
                this.columnPartialShip = new global::System.Data.DataColumn("PartialShip", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartialShip);
                this.columnAutoCreditHold = new global::System.Data.DataColumn("AutoCreditHold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAutoCreditHold);
                this.columnTaxLocId = new global::System.Data.DataColumn("TaxLocId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxLocId);
                this.columnTaxable = new global::System.Data.DataColumn("Taxable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxable);
                this.columnTaxExemptId = new global::System.Data.DataColumn("TaxExemptId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxExemptId);
                this.columnCurrencyId = new global::System.Data.DataColumn("CurrencyId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyId);
                this.columnTerrId = new global::System.Data.DataColumn("TerrId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTerrId);
                this.columnCcCompYn = new global::System.Data.DataColumn("CcCompYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCcCompYn);
                this.columnCustLevel = new global::System.Data.DataColumn("CustLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustLevel);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnInternet = new global::System.Data.DataColumn("Internet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternet);
                this.columnNewFinch = new global::System.Data.DataColumn("NewFinch", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewFinch);
                this.columnUnpaidFinch = new global::System.Data.DataColumn("UnpaidFinch", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnpaidFinch);
                this.columnCurAmtDue = new global::System.Data.DataColumn("CurAmtDue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurAmtDue);
                this.columnCurAmtDueFgn = new global::System.Data.DataColumn("CurAmtDueFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurAmtDueFgn);
                this.columnBalAge1 = new global::System.Data.DataColumn("BalAge1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalAge1);
                this.columnBalAge2 = new global::System.Data.DataColumn("BalAge2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalAge2);
                this.columnBalAge3 = new global::System.Data.DataColumn("BalAge3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalAge3);
                this.columnBalAge4 = new global::System.Data.DataColumn("BalAge4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalAge4);
                this.columnUnapplCredit = new global::System.Data.DataColumn("UnapplCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnapplCredit);
                this.columnFirstSaleDate = new global::System.Data.DataColumn("FirstSaleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstSaleDate);
                this.columnLastSaleDate = new global::System.Data.DataColumn("LastSaleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSaleDate);
                this.columnLastSaleAmt = new global::System.Data.DataColumn("LastSaleAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSaleAmt);
                this.columnLastSaleInvc = new global::System.Data.DataColumn("LastSaleInvc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSaleInvc);
                this.columnLastPayDate = new global::System.Data.DataColumn("LastPayDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPayDate);
                this.columnLastPayAmt = new global::System.Data.DataColumn("LastPayAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPayAmt);
                this.columnLastPayCheckNum = new global::System.Data.DataColumn("LastPayCheckNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastPayCheckNum);
                this.columnHighBal = new global::System.Data.DataColumn("HighBal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighBal);
                this.columnCreditStatus = new global::System.Data.DataColumn("CreditStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditStatus);
                this.columnWebDisplInQtyYn = new global::System.Data.DataColumn("WebDisplInQtyYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWebDisplInQtyYn);
                this.columnts = new global::System.Data.DataColumn("ts", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnts);
                this.columnAllowCharge = new global::System.Data.DataColumn("AllowCharge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowCharge);
                this.columnVCode = new global::System.Data.DataColumn("VCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVCode);
                this.columnEmailStmntYn = new global::System.Data.DataColumn("EmailStmntYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailStmntYn);
                this.columnFaxStmntYn = new global::System.Data.DataColumn("FaxStmntYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaxStmntYn);
                this.columnUsrFld1 = new global::System.Data.DataColumn("UsrFld1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld1);
                this.columnUsrFld2 = new global::System.Data.DataColumn("UsrFld2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld2);
                this.columnUsrFld3 = new global::System.Data.DataColumn("UsrFld3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld3);
                this.columnUsrFld4 = new global::System.Data.DataColumn("UsrFld4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld4);
                this.columnUsrFld5 = new global::System.Data.DataColumn("UsrFld5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld5);
                this.columnUsrFld6 = new global::System.Data.DataColumn("UsrFld6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld6);
                this.columnUsrFld7 = new global::System.Data.DataColumn("UsrFld7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld7);
                this.columnUsrFld8 = new global::System.Data.DataColumn("UsrFld8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld8);
                this.columnUsrFld9 = new global::System.Data.DataColumn("UsrFld9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld9);
                this.columnUsrFld10 = new global::System.Data.DataColumn("UsrFld10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld10);
                this.columnUsrFld11 = new global::System.Data.DataColumn("UsrFld11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld11);
                this.columnUsrFld12 = new global::System.Data.DataColumn("UsrFld12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld12);
                this.columnUsrFld13 = new global::System.Data.DataColumn("UsrFld13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld13);
                this.columnUsrFld14 = new global::System.Data.DataColumn("UsrFld14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld14);
                this.columnUsrFld15 = new global::System.Data.DataColumn("UsrFld15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld15);
                this.columnUsrFld16 = new global::System.Data.DataColumn("UsrFld16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld16);
                this.columnUsrFld17 = new global::System.Data.DataColumn("UsrFld17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld17);
                this.columnUsrFld18 = new global::System.Data.DataColumn("UsrFld18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld18);
                this.columnUsrFld19 = new global::System.Data.DataColumn("UsrFld19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld19);
                this.columnUsrFld20 = new global::System.Data.DataColumn("UsrFld20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsrFld20);
                this.columnSchoolYn = new global::System.Data.DataColumn("SchoolYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolYn);
                this.columnInactiveYn = new global::System.Data.DataColumn("InactiveYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInactiveYn);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCustId}, true));
                this.columnCustId.AllowDBNull = false;
                this.columnCustId.Unique = true;
                this.columnCustId.MaxLength = 10;
                this.columnCustName.MaxLength = 30;
                this.columnContact.MaxLength = 25;
                this.columnAddr1.MaxLength = 30;
                this.columnAddr2.MaxLength = 60;
                this.columnCity.MaxLength = 30;
                this.columnRegion.MaxLength = 10;
                this.columnCountry.MaxLength = 6;
                this.columnPostalCode.MaxLength = 10;
                this.columnShipZone.MaxLength = 2;
                this.columnIntlPrefix.MaxLength = 6;
                this.columnPhone.MaxLength = 15;
                this.columnFax.MaxLength = 15;
                this.columnAttn.MaxLength = 30;
                this.columnClassId.MaxLength = 6;
                this.columnSalesRepId1.MaxLength = 3;
                this.columnSalesRepId2.MaxLength = 3;
                this.columnTermsCode.AllowDBNull = false;
                this.columnTermsCode.MaxLength = 6;
                this.columnPmtMethod.AllowDBNull = false;
                this.columnPmtMethod.MaxLength = 10;
                this.columnCcNum.MaxLength = 20;
                this.columnCcName.MaxLength = 30;
                this.columnGroupCode.MaxLength = 1;
                this.columnPriceCode.MaxLength = 10;
                this.columnDistCode.AllowDBNull = false;
                this.columnDistCode.MaxLength = 6;
                this.columnTaxLocId.AllowDBNull = false;
                this.columnTaxLocId.MaxLength = 10;
                this.columnTaxExemptId.MaxLength = 20;
                this.columnCurrencyId.AllowDBNull = false;
                this.columnCurrencyId.MaxLength = 6;
                this.columnTerrId.MaxLength = 10;
                this.columnCustLevel.MaxLength = 10;
                this.columnEmail.MaxLength = 255;
                this.columnInternet.MaxLength = 255;
                this.columnNewFinch.AllowDBNull = false;
                this.columnUnpaidFinch.AllowDBNull = false;
                this.columnCurAmtDue.AllowDBNull = false;
                this.columnCurAmtDueFgn.AllowDBNull = false;
                this.columnBalAge1.AllowDBNull = false;
                this.columnBalAge2.AllowDBNull = false;
                this.columnBalAge3.AllowDBNull = false;
                this.columnBalAge4.AllowDBNull = false;
                this.columnUnapplCredit.AllowDBNull = false;
                this.columnLastSaleAmt.AllowDBNull = false;
                this.columnLastSaleInvc.MaxLength = 15;
                this.columnLastPayAmt.AllowDBNull = false;
                this.columnLastPayCheckNum.MaxLength = 10;
                this.columnHighBal.AllowDBNull = false;
                this.columnCreditStatus.MaxLength = 12;
                this.columnWebDisplInQtyYn.AllowDBNull = false;
                this.columnts.ReadOnly = true;
                this.columnAllowCharge.AllowDBNull = false;
                this.columnVCode.MaxLength = 4;
                this.columnUsrFld1.MaxLength = 12;
                this.columnUsrFld2.MaxLength = 12;
                this.columnUsrFld3.MaxLength = 12;
                this.columnUsrFld4.MaxLength = 12;
                this.columnUsrFld5.MaxLength = 12;
                this.columnUsrFld6.MaxLength = 12;
                this.columnUsrFld7.MaxLength = 12;
                this.columnUsrFld8.MaxLength = 12;
                this.columnUsrFld9.MaxLength = 12;
                this.columnUsrFld10.MaxLength = 12;
                this.columnUsrFld11.MaxLength = 12;
                this.columnUsrFld12.MaxLength = 12;
                this.columnUsrFld13.MaxLength = 12;
                this.columnUsrFld14.MaxLength = 12;
                this.columnUsrFld15.MaxLength = 12;
                this.columnUsrFld16.MaxLength = 12;
                this.columnUsrFld17.MaxLength = 12;
                this.columnUsrFld18.MaxLength = 12;
                this.columnUsrFld19.MaxLength = 12;
                this.columnUsrFld20.MaxLength = 12;
                this.columnMobile.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustRow NewlkpArCustRow() {
                return ((lkpArCustRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lkpArCustRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lkpArCustRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lkpArCustRowChanged != null)) {
                    this.lkpArCustRowChanged(this, new lkpArCustRowChangeEvent(((lkpArCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lkpArCustRowChanging != null)) {
                    this.lkpArCustRowChanging(this, new lkpArCustRowChangeEvent(((lkpArCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lkpArCustRowDeleted != null)) {
                    this.lkpArCustRowDeleted(this, new lkpArCustRowChangeEvent(((lkpArCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lkpArCustRowDeleting != null)) {
                    this.lkpArCustRowDeleting(this, new lkpArCustRowChangeEvent(((lkpArCustRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelkpArCustRow(lkpArCustRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lkpArCustDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class qryArPRPHistoryDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPostRun;
            
            private global::System.Data.DataColumn columnTransId;
            
            private global::System.Data.DataColumn columnTransType;
            
            private global::System.Data.DataColumn columnBatchId;
            
            private global::System.Data.DataColumn columnCustId;
            
            private global::System.Data.DataColumn columnShipToID;
            
            private global::System.Data.DataColumn columnShipToName;
            
            private global::System.Data.DataColumn columnShipToAddr1;
            
            private global::System.Data.DataColumn columnShipToAddr2;
            
            private global::System.Data.DataColumn columnShipToCity;
            
            private global::System.Data.DataColumn columnShipToRegion;
            
            private global::System.Data.DataColumn columnShipToCountry;
            
            private global::System.Data.DataColumn columnShipToPostalCode;
            
            private global::System.Data.DataColumn columnShipVia;
            
            private global::System.Data.DataColumn columnTermsCode;
            
            private global::System.Data.DataColumn columnTaxableYN;
            
            private global::System.Data.DataColumn columnInvcNum;
            
            private global::System.Data.DataColumn columnCredMemNum;
            
            private global::System.Data.DataColumn columnPackNum;
            
            private global::System.Data.DataColumn columnWhseId;
            
            private global::System.Data.DataColumn columnOrderDate;
            
            private global::System.Data.DataColumn columnShipNum;
            
            private global::System.Data.DataColumn columnShipDate;
            
            private global::System.Data.DataColumn columnInvcDate;
            
            private global::System.Data.DataColumn columnRep1Id;
            
            private global::System.Data.DataColumn columnRep1Pct;
            
            private global::System.Data.DataColumn columnRep2Id;
            
            private global::System.Data.DataColumn columnRep2Pct;
            
            private global::System.Data.DataColumn columnTaxOnFreight;
            
            private global::System.Data.DataColumn columnTaxClassFreight;
            
            private global::System.Data.DataColumn columnTaxClassMisc;
            
            private global::System.Data.DataColumn columnPostDate;
            
            private global::System.Data.DataColumn columnFiscalYear;
            
            private global::System.Data.DataColumn columnGLPeriod;
            
            private global::System.Data.DataColumn columnTaxGrpID;
            
            private global::System.Data.DataColumn columnTaxSubtotal;
            
            private global::System.Data.DataColumn columnNonTaxSubtotal;
            
            private global::System.Data.DataColumn columnSalesTax;
            
            private global::System.Data.DataColumn columnFreight;
            
            private global::System.Data.DataColumn columnMisc;
            
            private global::System.Data.DataColumn columnTotCost;
            
            private global::System.Data.DataColumn columnTotPmtAmt;
            
            private global::System.Data.DataColumn columnTaxSubtotalFgn;
            
            private global::System.Data.DataColumn columnNonTaxSubtotalFgn;
            
            private global::System.Data.DataColumn columnSalesTaxFgn;
            
            private global::System.Data.DataColumn columnFreightFgn;
            
            private global::System.Data.DataColumn columnMiscFgn;
            
            private global::System.Data.DataColumn columnTotCostFgn;
            
            private global::System.Data.DataColumn columnTotPmtAmtFgn;
            
            private global::System.Data.DataColumn columnPrintStatus;
            
            private global::System.Data.DataColumn columnCustPONum;
            
            private global::System.Data.DataColumn columnDistCode;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnExchRate;
            
            private global::System.Data.DataColumn columnDiscDueDate;
            
            private global::System.Data.DataColumn columnNetDueDate;
            
            private global::System.Data.DataColumn columnDiscAmt;
            
            private global::System.Data.DataColumn columnDiscAmtFgn;
            
            private global::System.Data.DataColumn columnSumHistPeriod;
            
            private global::System.Data.DataColumn columnTaxAmtAdj;
            
            private global::System.Data.DataColumn columnTaxAmtAdjFgn;
            
            private global::System.Data.DataColumn columnTaxAdj;
            
            private global::System.Data.DataColumn columnTaxLocAdj;
            
            private global::System.Data.DataColumn columnTaxClassAdj;
            
            private global::System.Data.DataColumn columnCustLevel;
            
            private global::System.Data.DataColumn columnPODate;
            
            private global::System.Data.DataColumn columnReqShipDate;
            
            private global::System.Data.DataColumn columnPickNum;
            
            private global::System.Data.DataColumn columnSource;
            
            private global::System.Data.DataColumn columnBillingPeriodFrom;
            
            private global::System.Data.DataColumn columnPMTransType;
            
            private global::System.Data.DataColumn columnProjItem;
            
            private global::System.Data.DataColumn columnBillingPeriodThru;
            
            private global::System.Data.DataColumn columnBillingFormat;
            
            private global::System.Data.DataColumn columnPickedBy;
            
            private global::System.Data.DataColumn columnEnteredBy;
            
            private global::System.Data.DataColumn columnPrntListPrice;
            
            private global::System.Data.DataColumn columnReceivedBy;
            
            private global::System.Data.DataColumn columnPrintTime;
            
            private global::System.Data.DataColumn columnCustomsPercent;
            
            private global::System.Data.DataColumn columnPieces;
            
            private global::System.Data.DataColumn columnUom;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnDropShipment;
            
            private global::System.Data.DataColumn columnCODOption;
            
            private global::System.Data.DataColumn columnCODType;
            
            private global::System.Data.DataColumn columnUPSProcessed;
            
            private global::System.Data.DataColumn columnShipWeight;
            
            private global::System.Data.DataColumn columnCustType;
            
            private global::System.Data.DataColumn columnPostRun1;
            
            private global::System.Data.DataColumn columnTransID1;
            
            private global::System.Data.DataColumn columnEntryNum;
            
            private global::System.Data.DataColumn columnItemJob;
            
            private global::System.Data.DataColumn columnWhseId1;
            
            private global::System.Data.DataColumn columnPartId;
            
            private global::System.Data.DataColumn columnJobId;
            
            private global::System.Data.DataColumn columnPhaseId;
            
            private global::System.Data.DataColumn columnJobCompleteYN;
            
            private global::System.Data.DataColumn columnPartType;
            
            private global::System.Data.DataColumn columnDesc;
            
            private global::System.Data.DataColumn columnAddnlDesc;
            
            private global::System.Data.DataColumn columnCatId;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnAcctCode;
            
            private global::System.Data.DataColumn columnGLAcctSales;
            
            private global::System.Data.DataColumn columnGLAcctCOGS;
            
            private global::System.Data.DataColumn columnGLAcctInv;
            
            private global::System.Data.DataColumn columnQtyOrdSell;
            
            private global::System.Data.DataColumn columnUnitsSell;
            
            private global::System.Data.DataColumn columnUnitsBase;
            
            private global::System.Data.DataColumn columnQtyShipSell;
            
            private global::System.Data.DataColumn columnQtyShipBase;
            
            private global::System.Data.DataColumn columnQtyBackordSell;
            
            private global::System.Data.DataColumn columnPriceID;
            
            private global::System.Data.DataColumn columnUnitPriceSell;
            
            private global::System.Data.DataColumn columnUnitPriceSellFgn;
            
            private global::System.Data.DataColumn columnUnitCostSell;
            
            private global::System.Data.DataColumn columnUnitCostSellFgn;
            
            private global::System.Data.DataColumn columnPriceExt;
            
            private global::System.Data.DataColumn columnPriceExtFgn;
            
            private global::System.Data.DataColumn columnCostExtFgn;
            
            private global::System.Data.DataColumn columnCostExt;
            
            private global::System.Data.DataColumn columnPromoID;
            
            private global::System.Data.DataColumn columnActShipDate;
            
            private global::System.Data.DataColumn columnEffectiveRate;
            
            private global::System.Data.DataColumn columnOrigOrderQty;
            
            private global::System.Data.DataColumn columnBinNum;
            
            private global::System.Data.DataColumn columnConversionFactor;
            
            private global::System.Data.DataColumn columnLottedYN;
            
            private global::System.Data.DataColumn columnInItemYN;
            
            private global::System.Data.DataColumn columnHistSeqNum;
            
            private global::System.Data.DataColumn columnExtCost;
            
            private global::System.Data.DataColumn columnExtFinalInc;
            
            private global::System.Data.DataColumn columnExtOrigInc;
            
            private global::System.Data.DataColumn columnTransHistId;
            
            private global::System.Data.DataColumn columnTaskId;
            
            private global::System.Data.DataColumn columnPhaseName;
            
            private global::System.Data.DataColumn columnProjName;
            
            private global::System.Data.DataColumn columnExtFinalIncFgn;
            
            private global::System.Data.DataColumn columnTaskName;
            
            private global::System.Data.DataColumn columnKit;
            
            private global::System.Data.DataColumn columnReqShipDate1;
            
            private global::System.Data.DataColumn columnCommAmt;
            
            private global::System.Data.DataColumn columnCommPaidDate;
            
            private global::System.Data.DataColumn columnDiscPerc;
            
            private global::System.Data.DataColumn columnTariffCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public qryArPRPHistoryDataTable() {
                this.TableName = "qryArPRPHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal qryArPRPHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected qryArPRPHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostRunColumn {
                get {
                    return this.columnPostRun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransIdColumn {
                get {
                    return this.columnTransId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransTypeColumn {
                get {
                    return this.columnTransType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchIdColumn {
                get {
                    return this.columnBatchId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustIdColumn {
                get {
                    return this.columnCustId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToIDColumn {
                get {
                    return this.columnShipToID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToNameColumn {
                get {
                    return this.columnShipToName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToAddr1Column {
                get {
                    return this.columnShipToAddr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToAddr2Column {
                get {
                    return this.columnShipToAddr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToCityColumn {
                get {
                    return this.columnShipToCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToRegionColumn {
                get {
                    return this.columnShipToRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToCountryColumn {
                get {
                    return this.columnShipToCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipToPostalCodeColumn {
                get {
                    return this.columnShipToPostalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipViaColumn {
                get {
                    return this.columnShipVia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TermsCodeColumn {
                get {
                    return this.columnTermsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxableYNColumn {
                get {
                    return this.columnTaxableYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvcNumColumn {
                get {
                    return this.columnInvcNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CredMemNumColumn {
                get {
                    return this.columnCredMemNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackNumColumn {
                get {
                    return this.columnPackNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhseIdColumn {
                get {
                    return this.columnWhseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderDateColumn {
                get {
                    return this.columnOrderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipNumColumn {
                get {
                    return this.columnShipNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipDateColumn {
                get {
                    return this.columnShipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvcDateColumn {
                get {
                    return this.columnInvcDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1IdColumn {
                get {
                    return this.columnRep1Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1PctColumn {
                get {
                    return this.columnRep1Pct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep2IdColumn {
                get {
                    return this.columnRep2Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep2PctColumn {
                get {
                    return this.columnRep2Pct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxOnFreightColumn {
                get {
                    return this.columnTaxOnFreight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassFreightColumn {
                get {
                    return this.columnTaxClassFreight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassMiscColumn {
                get {
                    return this.columnTaxClassMisc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostDateColumn {
                get {
                    return this.columnPostDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FiscalYearColumn {
                get {
                    return this.columnFiscalYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLPeriodColumn {
                get {
                    return this.columnGLPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxGrpIDColumn {
                get {
                    return this.columnTaxGrpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxSubtotalColumn {
                get {
                    return this.columnTaxSubtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonTaxSubtotalColumn {
                get {
                    return this.columnNonTaxSubtotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTaxColumn {
                get {
                    return this.columnSalesTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightColumn {
                get {
                    return this.columnFreight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscColumn {
                get {
                    return this.columnMisc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotCostColumn {
                get {
                    return this.columnTotCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotPmtAmtColumn {
                get {
                    return this.columnTotPmtAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxSubtotalFgnColumn {
                get {
                    return this.columnTaxSubtotalFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NonTaxSubtotalFgnColumn {
                get {
                    return this.columnNonTaxSubtotalFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesTaxFgnColumn {
                get {
                    return this.columnSalesTaxFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FreightFgnColumn {
                get {
                    return this.columnFreightFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MiscFgnColumn {
                get {
                    return this.columnMiscFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotCostFgnColumn {
                get {
                    return this.columnTotCostFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotPmtAmtFgnColumn {
                get {
                    return this.columnTotPmtAmtFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintStatusColumn {
                get {
                    return this.columnPrintStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustPONumColumn {
                get {
                    return this.columnCustPONum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistCodeColumn {
                get {
                    return this.columnDistCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExchRateColumn {
                get {
                    return this.columnExchRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscDueDateColumn {
                get {
                    return this.columnDiscDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetDueDateColumn {
                get {
                    return this.columnNetDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscAmtColumn {
                get {
                    return this.columnDiscAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscAmtFgnColumn {
                get {
                    return this.columnDiscAmtFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SumHistPeriodColumn {
                get {
                    return this.columnSumHistPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmtAdjColumn {
                get {
                    return this.columnTaxAmtAdj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAmtAdjFgnColumn {
                get {
                    return this.columnTaxAmtAdjFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxAdjColumn {
                get {
                    return this.columnTaxAdj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxLocAdjColumn {
                get {
                    return this.columnTaxLocAdj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassAdjColumn {
                get {
                    return this.columnTaxClassAdj;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustLevelColumn {
                get {
                    return this.columnCustLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODateColumn {
                get {
                    return this.columnPODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReqShipDateColumn {
                get {
                    return this.columnReqShipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickNumColumn {
                get {
                    return this.columnPickNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceColumn {
                get {
                    return this.columnSource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingPeriodFromColumn {
                get {
                    return this.columnBillingPeriodFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMTransTypeColumn {
                get {
                    return this.columnPMTransType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjItemColumn {
                get {
                    return this.columnProjItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingPeriodThruColumn {
                get {
                    return this.columnBillingPeriodThru;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BillingFormatColumn {
                get {
                    return this.columnBillingFormat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PickedByColumn {
                get {
                    return this.columnPickedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnteredByColumn {
                get {
                    return this.columnEnteredBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrntListPriceColumn {
                get {
                    return this.columnPrntListPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedByColumn {
                get {
                    return this.columnReceivedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrintTimeColumn {
                get {
                    return this.columnPrintTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomsPercentColumn {
                get {
                    return this.columnCustomsPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PiecesColumn {
                get {
                    return this.columnPieces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UomColumn {
                get {
                    return this.columnUom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DropShipmentColumn {
                get {
                    return this.columnDropShipment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODOptionColumn {
                get {
                    return this.columnCODOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODTypeColumn {
                get {
                    return this.columnCODType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPSProcessedColumn {
                get {
                    return this.columnUPSProcessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShipWeightColumn {
                get {
                    return this.columnShipWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustTypeColumn {
                get {
                    return this.columnCustType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PostRun1Column {
                get {
                    return this.columnPostRun1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransID1Column {
                get {
                    return this.columnTransID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryNumColumn {
                get {
                    return this.columnEntryNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemJobColumn {
                get {
                    return this.columnItemJob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhseId1Column {
                get {
                    return this.columnWhseId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartIdColumn {
                get {
                    return this.columnPartId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobIdColumn {
                get {
                    return this.columnJobId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhaseIdColumn {
                get {
                    return this.columnPhaseId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobCompleteYNColumn {
                get {
                    return this.columnJobCompleteYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartTypeColumn {
                get {
                    return this.columnPartType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescColumn {
                get {
                    return this.columnDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddnlDescColumn {
                get {
                    return this.columnAddnlDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CatIdColumn {
                get {
                    return this.columnCatId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AcctCodeColumn {
                get {
                    return this.columnAcctCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLAcctSalesColumn {
                get {
                    return this.columnGLAcctSales;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLAcctCOGSColumn {
                get {
                    return this.columnGLAcctCOGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GLAcctInvColumn {
                get {
                    return this.columnGLAcctInv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyOrdSellColumn {
                get {
                    return this.columnQtyOrdSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsSellColumn {
                get {
                    return this.columnUnitsSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitsBaseColumn {
                get {
                    return this.columnUnitsBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyShipSellColumn {
                get {
                    return this.columnQtyShipSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyShipBaseColumn {
                get {
                    return this.columnQtyShipBase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyBackordSellColumn {
                get {
                    return this.columnQtyBackordSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceIDColumn {
                get {
                    return this.columnPriceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceSellColumn {
                get {
                    return this.columnUnitPriceSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceSellFgnColumn {
                get {
                    return this.columnUnitPriceSellFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCostSellColumn {
                get {
                    return this.columnUnitCostSell;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitCostSellFgnColumn {
                get {
                    return this.columnUnitCostSellFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceExtColumn {
                get {
                    return this.columnPriceExt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceExtFgnColumn {
                get {
                    return this.columnPriceExtFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostExtFgnColumn {
                get {
                    return this.columnCostExtFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CostExtColumn {
                get {
                    return this.columnCostExt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PromoIDColumn {
                get {
                    return this.columnPromoID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActShipDateColumn {
                get {
                    return this.columnActShipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EffectiveRateColumn {
                get {
                    return this.columnEffectiveRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrigOrderQtyColumn {
                get {
                    return this.columnOrigOrderQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BinNumColumn {
                get {
                    return this.columnBinNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConversionFactorColumn {
                get {
                    return this.columnConversionFactor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LottedYNColumn {
                get {
                    return this.columnLottedYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InItemYNColumn {
                get {
                    return this.columnInItemYN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistSeqNumColumn {
                get {
                    return this.columnHistSeqNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtCostColumn {
                get {
                    return this.columnExtCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtFinalIncColumn {
                get {
                    return this.columnExtFinalInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtOrigIncColumn {
                get {
                    return this.columnExtOrigInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransHistIdColumn {
                get {
                    return this.columnTransHistId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaskIdColumn {
                get {
                    return this.columnTaskId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhaseNameColumn {
                get {
                    return this.columnPhaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProjNameColumn {
                get {
                    return this.columnProjName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtFinalIncFgnColumn {
                get {
                    return this.columnExtFinalIncFgn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaskNameColumn {
                get {
                    return this.columnTaskName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KitColumn {
                get {
                    return this.columnKit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReqShipDate1Column {
                get {
                    return this.columnReqShipDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommAmtColumn {
                get {
                    return this.columnCommAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommPaidDateColumn {
                get {
                    return this.columnCommPaidDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscPercColumn {
                get {
                    return this.columnDiscPerc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TariffCodeColumn {
                get {
                    return this.columnTariffCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public qryArPRPHistoryRow this[int index] {
                get {
                    return ((qryArPRPHistoryRow)(this.Rows[index]));
                }
            }
            
            public event qryArPRPHistoryRowChangeEventHandler qryArPRPHistoryRowChanging;
            
            public event qryArPRPHistoryRowChangeEventHandler qryArPRPHistoryRowChanged;
            
            public event qryArPRPHistoryRowChangeEventHandler qryArPRPHistoryRowDeleting;
            
            public event qryArPRPHistoryRowChangeEventHandler qryArPRPHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddqryArPRPHistoryRow(qryArPRPHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public qryArPRPHistoryRow AddqryArPRPHistoryRow(
                        string PostRun, 
                        string TransId, 
                        short TransType, 
                        string BatchId, 
                        string CustId, 
                        string ShipToID, 
                        string ShipToName, 
                        string ShipToAddr1, 
                        string ShipToAddr2, 
                        string ShipToCity, 
                        string ShipToRegion, 
                        string ShipToCountry, 
                        string ShipToPostalCode, 
                        string ShipVia, 
                        string TermsCode, 
                        bool TaxableYN, 
                        string InvcNum, 
                        string CredMemNum, 
                        string PackNum, 
                        string WhseId, 
                        System.DateTime OrderDate, 
                        string ShipNum, 
                        System.DateTime ShipDate, 
                        System.DateTime InvcDate, 
                        string Rep1Id, 
                        decimal Rep1Pct, 
                        string Rep2Id, 
                        decimal Rep2Pct, 
                        bool TaxOnFreight, 
                        byte TaxClassFreight, 
                        byte TaxClassMisc, 
                        System.DateTime PostDate, 
                        short FiscalYear, 
                        short GLPeriod, 
                        string TaxGrpID, 
                        decimal TaxSubtotal, 
                        decimal NonTaxSubtotal, 
                        decimal SalesTax, 
                        decimal Freight, 
                        decimal Misc, 
                        decimal TotCost, 
                        decimal TotPmtAmt, 
                        decimal TaxSubtotalFgn, 
                        decimal NonTaxSubtotalFgn, 
                        decimal SalesTaxFgn, 
                        decimal FreightFgn, 
                        decimal MiscFgn, 
                        decimal TotCostFgn, 
                        decimal TotPmtAmtFgn, 
                        byte PrintStatus, 
                        string CustPONum, 
                        string DistCode, 
                        string CurrencyID, 
                        decimal ExchRate, 
                        System.DateTime DiscDueDate, 
                        System.DateTime NetDueDate, 
                        decimal DiscAmt, 
                        decimal DiscAmtFgn, 
                        short SumHistPeriod, 
                        decimal TaxAmtAdj, 
                        decimal TaxAmtAdjFgn, 
                        byte TaxAdj, 
                        string TaxLocAdj, 
                        byte TaxClassAdj, 
                        string CustLevel, 
                        System.DateTime PODate, 
                        System.DateTime ReqShipDate, 
                        string PickNum, 
                        byte Source, 
                        System.DateTime BillingPeriodFrom, 
                        string PMTransType, 
                        string ProjItem, 
                        System.DateTime BillingPeriodThru, 
                        short BillingFormat, 
                        string PickedBy, 
                        string EnteredBy, 
                        bool PrntListPrice, 
                        short ReceivedBy, 
                        System.DateTime PrintTime, 
                        decimal CustomsPercent, 
                        short Pieces, 
                        string Uom, 
                        decimal Weight, 
                        bool DropShipment, 
                        string CODOption, 
                        string CODType, 
                        bool UPSProcessed, 
                        decimal ShipWeight, 
                        string CustType, 
                        string PostRun1, 
                        string TransID1, 
                        short EntryNum, 
                        byte ItemJob, 
                        string WhseId1, 
                        string PartId, 
                        string JobId, 
                        string PhaseId, 
                        bool JobCompleteYN, 
                        byte PartType, 
                        string Desc, 
                        string AddnlDesc, 
                        string CatId, 
                        byte TaxClass, 
                        string AcctCode, 
                        string GLAcctSales, 
                        string GLAcctCOGS, 
                        string GLAcctInv, 
                        decimal QtyOrdSell, 
                        string UnitsSell, 
                        string UnitsBase, 
                        decimal QtyShipSell, 
                        decimal QtyShipBase, 
                        decimal QtyBackordSell, 
                        string PriceID, 
                        decimal UnitPriceSell, 
                        decimal UnitPriceSellFgn, 
                        decimal UnitCostSell, 
                        decimal UnitCostSellFgn, 
                        decimal PriceExt, 
                        decimal PriceExtFgn, 
                        decimal CostExtFgn, 
                        decimal CostExt, 
                        string PromoID, 
                        System.DateTime ActShipDate, 
                        decimal EffectiveRate, 
                        decimal OrigOrderQty, 
                        string BinNum, 
                        decimal ConversionFactor, 
                        bool LottedYN, 
                        bool InItemYN, 
                        int HistSeqNum, 
                        decimal ExtCost, 
                        decimal ExtFinalInc, 
                        decimal ExtOrigInc, 
                        string TransHistId, 
                        string TaskId, 
                        string PhaseName, 
                        string ProjName, 
                        decimal ExtFinalIncFgn, 
                        string TaskName, 
                        bool Kit, 
                        System.DateTime ReqShipDate1, 
                        decimal CommAmt, 
                        System.DateTime CommPaidDate, 
                        decimal DiscPerc, 
                        string TariffCode) {
                qryArPRPHistoryRow rowqryArPRPHistoryRow = ((qryArPRPHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PostRun,
                        TransId,
                        TransType,
                        BatchId,
                        CustId,
                        ShipToID,
                        ShipToName,
                        ShipToAddr1,
                        ShipToAddr2,
                        ShipToCity,
                        ShipToRegion,
                        ShipToCountry,
                        ShipToPostalCode,
                        ShipVia,
                        TermsCode,
                        TaxableYN,
                        InvcNum,
                        CredMemNum,
                        PackNum,
                        WhseId,
                        OrderDate,
                        ShipNum,
                        ShipDate,
                        InvcDate,
                        Rep1Id,
                        Rep1Pct,
                        Rep2Id,
                        Rep2Pct,
                        TaxOnFreight,
                        TaxClassFreight,
                        TaxClassMisc,
                        PostDate,
                        FiscalYear,
                        GLPeriod,
                        TaxGrpID,
                        TaxSubtotal,
                        NonTaxSubtotal,
                        SalesTax,
                        Freight,
                        Misc,
                        TotCost,
                        TotPmtAmt,
                        TaxSubtotalFgn,
                        NonTaxSubtotalFgn,
                        SalesTaxFgn,
                        FreightFgn,
                        MiscFgn,
                        TotCostFgn,
                        TotPmtAmtFgn,
                        PrintStatus,
                        CustPONum,
                        DistCode,
                        CurrencyID,
                        ExchRate,
                        DiscDueDate,
                        NetDueDate,
                        DiscAmt,
                        DiscAmtFgn,
                        SumHistPeriod,
                        TaxAmtAdj,
                        TaxAmtAdjFgn,
                        TaxAdj,
                        TaxLocAdj,
                        TaxClassAdj,
                        CustLevel,
                        PODate,
                        ReqShipDate,
                        PickNum,
                        Source,
                        BillingPeriodFrom,
                        PMTransType,
                        ProjItem,
                        BillingPeriodThru,
                        BillingFormat,
                        PickedBy,
                        EnteredBy,
                        PrntListPrice,
                        ReceivedBy,
                        PrintTime,
                        CustomsPercent,
                        Pieces,
                        Uom,
                        Weight,
                        DropShipment,
                        CODOption,
                        CODType,
                        UPSProcessed,
                        ShipWeight,
                        CustType,
                        PostRun1,
                        TransID1,
                        EntryNum,
                        ItemJob,
                        WhseId1,
                        PartId,
                        JobId,
                        PhaseId,
                        JobCompleteYN,
                        PartType,
                        Desc,
                        AddnlDesc,
                        CatId,
                        TaxClass,
                        AcctCode,
                        GLAcctSales,
                        GLAcctCOGS,
                        GLAcctInv,
                        QtyOrdSell,
                        UnitsSell,
                        UnitsBase,
                        QtyShipSell,
                        QtyShipBase,
                        QtyBackordSell,
                        PriceID,
                        UnitPriceSell,
                        UnitPriceSellFgn,
                        UnitCostSell,
                        UnitCostSellFgn,
                        PriceExt,
                        PriceExtFgn,
                        CostExtFgn,
                        CostExt,
                        PromoID,
                        ActShipDate,
                        EffectiveRate,
                        OrigOrderQty,
                        BinNum,
                        ConversionFactor,
                        LottedYN,
                        InItemYN,
                        HistSeqNum,
                        ExtCost,
                        ExtFinalInc,
                        ExtOrigInc,
                        TransHistId,
                        TaskId,
                        PhaseName,
                        ProjName,
                        ExtFinalIncFgn,
                        TaskName,
                        Kit,
                        ReqShipDate1,
                        CommAmt,
                        CommPaidDate,
                        DiscPerc,
                        TariffCode};
                rowqryArPRPHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowqryArPRPHistoryRow);
                return rowqryArPRPHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                qryArPRPHistoryDataTable cln = ((qryArPRPHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new qryArPRPHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPostRun = base.Columns["PostRun"];
                this.columnTransId = base.Columns["TransId"];
                this.columnTransType = base.Columns["TransType"];
                this.columnBatchId = base.Columns["BatchId"];
                this.columnCustId = base.Columns["CustId"];
                this.columnShipToID = base.Columns["ShipToID"];
                this.columnShipToName = base.Columns["ShipToName"];
                this.columnShipToAddr1 = base.Columns["ShipToAddr1"];
                this.columnShipToAddr2 = base.Columns["ShipToAddr2"];
                this.columnShipToCity = base.Columns["ShipToCity"];
                this.columnShipToRegion = base.Columns["ShipToRegion"];
                this.columnShipToCountry = base.Columns["ShipToCountry"];
                this.columnShipToPostalCode = base.Columns["ShipToPostalCode"];
                this.columnShipVia = base.Columns["ShipVia"];
                this.columnTermsCode = base.Columns["TermsCode"];
                this.columnTaxableYN = base.Columns["TaxableYN"];
                this.columnInvcNum = base.Columns["InvcNum"];
                this.columnCredMemNum = base.Columns["CredMemNum"];
                this.columnPackNum = base.Columns["PackNum"];
                this.columnWhseId = base.Columns["WhseId"];
                this.columnOrderDate = base.Columns["OrderDate"];
                this.columnShipNum = base.Columns["ShipNum"];
                this.columnShipDate = base.Columns["ShipDate"];
                this.columnInvcDate = base.Columns["InvcDate"];
                this.columnRep1Id = base.Columns["Rep1Id"];
                this.columnRep1Pct = base.Columns["Rep1Pct"];
                this.columnRep2Id = base.Columns["Rep2Id"];
                this.columnRep2Pct = base.Columns["Rep2Pct"];
                this.columnTaxOnFreight = base.Columns["TaxOnFreight"];
                this.columnTaxClassFreight = base.Columns["TaxClassFreight"];
                this.columnTaxClassMisc = base.Columns["TaxClassMisc"];
                this.columnPostDate = base.Columns["PostDate"];
                this.columnFiscalYear = base.Columns["FiscalYear"];
                this.columnGLPeriod = base.Columns["GLPeriod"];
                this.columnTaxGrpID = base.Columns["TaxGrpID"];
                this.columnTaxSubtotal = base.Columns["TaxSubtotal"];
                this.columnNonTaxSubtotal = base.Columns["NonTaxSubtotal"];
                this.columnSalesTax = base.Columns["SalesTax"];
                this.columnFreight = base.Columns["Freight"];
                this.columnMisc = base.Columns["Misc"];
                this.columnTotCost = base.Columns["TotCost"];
                this.columnTotPmtAmt = base.Columns["TotPmtAmt"];
                this.columnTaxSubtotalFgn = base.Columns["TaxSubtotalFgn"];
                this.columnNonTaxSubtotalFgn = base.Columns["NonTaxSubtotalFgn"];
                this.columnSalesTaxFgn = base.Columns["SalesTaxFgn"];
                this.columnFreightFgn = base.Columns["FreightFgn"];
                this.columnMiscFgn = base.Columns["MiscFgn"];
                this.columnTotCostFgn = base.Columns["TotCostFgn"];
                this.columnTotPmtAmtFgn = base.Columns["TotPmtAmtFgn"];
                this.columnPrintStatus = base.Columns["PrintStatus"];
                this.columnCustPONum = base.Columns["CustPONum"];
                this.columnDistCode = base.Columns["DistCode"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnExchRate = base.Columns["ExchRate"];
                this.columnDiscDueDate = base.Columns["DiscDueDate"];
                this.columnNetDueDate = base.Columns["NetDueDate"];
                this.columnDiscAmt = base.Columns["DiscAmt"];
                this.columnDiscAmtFgn = base.Columns["DiscAmtFgn"];
                this.columnSumHistPeriod = base.Columns["SumHistPeriod"];
                this.columnTaxAmtAdj = base.Columns["TaxAmtAdj"];
                this.columnTaxAmtAdjFgn = base.Columns["TaxAmtAdjFgn"];
                this.columnTaxAdj = base.Columns["TaxAdj"];
                this.columnTaxLocAdj = base.Columns["TaxLocAdj"];
                this.columnTaxClassAdj = base.Columns["TaxClassAdj"];
                this.columnCustLevel = base.Columns["CustLevel"];
                this.columnPODate = base.Columns["PODate"];
                this.columnReqShipDate = base.Columns["ReqShipDate"];
                this.columnPickNum = base.Columns["PickNum"];
                this.columnSource = base.Columns["Source"];
                this.columnBillingPeriodFrom = base.Columns["BillingPeriodFrom"];
                this.columnPMTransType = base.Columns["PMTransType"];
                this.columnProjItem = base.Columns["ProjItem"];
                this.columnBillingPeriodThru = base.Columns["BillingPeriodThru"];
                this.columnBillingFormat = base.Columns["BillingFormat"];
                this.columnPickedBy = base.Columns["PickedBy"];
                this.columnEnteredBy = base.Columns["EnteredBy"];
                this.columnPrntListPrice = base.Columns["PrntListPrice"];
                this.columnReceivedBy = base.Columns["ReceivedBy"];
                this.columnPrintTime = base.Columns["PrintTime"];
                this.columnCustomsPercent = base.Columns["CustomsPercent"];
                this.columnPieces = base.Columns["Pieces"];
                this.columnUom = base.Columns["Uom"];
                this.columnWeight = base.Columns["Weight"];
                this.columnDropShipment = base.Columns["DropShipment"];
                this.columnCODOption = base.Columns["CODOption"];
                this.columnCODType = base.Columns["CODType"];
                this.columnUPSProcessed = base.Columns["UPSProcessed"];
                this.columnShipWeight = base.Columns["ShipWeight"];
                this.columnCustType = base.Columns["CustType"];
                this.columnPostRun1 = base.Columns["PostRun1"];
                this.columnTransID1 = base.Columns["TransID1"];
                this.columnEntryNum = base.Columns["EntryNum"];
                this.columnItemJob = base.Columns["ItemJob"];
                this.columnWhseId1 = base.Columns["WhseId1"];
                this.columnPartId = base.Columns["PartId"];
                this.columnJobId = base.Columns["JobId"];
                this.columnPhaseId = base.Columns["PhaseId"];
                this.columnJobCompleteYN = base.Columns["JobCompleteYN"];
                this.columnPartType = base.Columns["PartType"];
                this.columnDesc = base.Columns["Desc"];
                this.columnAddnlDesc = base.Columns["AddnlDesc"];
                this.columnCatId = base.Columns["CatId"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnAcctCode = base.Columns["AcctCode"];
                this.columnGLAcctSales = base.Columns["GLAcctSales"];
                this.columnGLAcctCOGS = base.Columns["GLAcctCOGS"];
                this.columnGLAcctInv = base.Columns["GLAcctInv"];
                this.columnQtyOrdSell = base.Columns["QtyOrdSell"];
                this.columnUnitsSell = base.Columns["UnitsSell"];
                this.columnUnitsBase = base.Columns["UnitsBase"];
                this.columnQtyShipSell = base.Columns["QtyShipSell"];
                this.columnQtyShipBase = base.Columns["QtyShipBase"];
                this.columnQtyBackordSell = base.Columns["QtyBackordSell"];
                this.columnPriceID = base.Columns["PriceID"];
                this.columnUnitPriceSell = base.Columns["UnitPriceSell"];
                this.columnUnitPriceSellFgn = base.Columns["UnitPriceSellFgn"];
                this.columnUnitCostSell = base.Columns["UnitCostSell"];
                this.columnUnitCostSellFgn = base.Columns["UnitCostSellFgn"];
                this.columnPriceExt = base.Columns["PriceExt"];
                this.columnPriceExtFgn = base.Columns["PriceExtFgn"];
                this.columnCostExtFgn = base.Columns["CostExtFgn"];
                this.columnCostExt = base.Columns["CostExt"];
                this.columnPromoID = base.Columns["PromoID"];
                this.columnActShipDate = base.Columns["ActShipDate"];
                this.columnEffectiveRate = base.Columns["EffectiveRate"];
                this.columnOrigOrderQty = base.Columns["OrigOrderQty"];
                this.columnBinNum = base.Columns["BinNum"];
                this.columnConversionFactor = base.Columns["ConversionFactor"];
                this.columnLottedYN = base.Columns["LottedYN"];
                this.columnInItemYN = base.Columns["InItemYN"];
                this.columnHistSeqNum = base.Columns["HistSeqNum"];
                this.columnExtCost = base.Columns["ExtCost"];
                this.columnExtFinalInc = base.Columns["ExtFinalInc"];
                this.columnExtOrigInc = base.Columns["ExtOrigInc"];
                this.columnTransHistId = base.Columns["TransHistId"];
                this.columnTaskId = base.Columns["TaskId"];
                this.columnPhaseName = base.Columns["PhaseName"];
                this.columnProjName = base.Columns["ProjName"];
                this.columnExtFinalIncFgn = base.Columns["ExtFinalIncFgn"];
                this.columnTaskName = base.Columns["TaskName"];
                this.columnKit = base.Columns["Kit"];
                this.columnReqShipDate1 = base.Columns["ReqShipDate1"];
                this.columnCommAmt = base.Columns["CommAmt"];
                this.columnCommPaidDate = base.Columns["CommPaidDate"];
                this.columnDiscPerc = base.Columns["DiscPerc"];
                this.columnTariffCode = base.Columns["TariffCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPostRun = new global::System.Data.DataColumn("PostRun", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostRun);
                this.columnTransId = new global::System.Data.DataColumn("TransId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransId);
                this.columnTransType = new global::System.Data.DataColumn("TransType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransType);
                this.columnBatchId = new global::System.Data.DataColumn("BatchId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchId);
                this.columnCustId = new global::System.Data.DataColumn("CustId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustId);
                this.columnShipToID = new global::System.Data.DataColumn("ShipToID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToID);
                this.columnShipToName = new global::System.Data.DataColumn("ShipToName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToName);
                this.columnShipToAddr1 = new global::System.Data.DataColumn("ShipToAddr1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToAddr1);
                this.columnShipToAddr2 = new global::System.Data.DataColumn("ShipToAddr2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToAddr2);
                this.columnShipToCity = new global::System.Data.DataColumn("ShipToCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToCity);
                this.columnShipToRegion = new global::System.Data.DataColumn("ShipToRegion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToRegion);
                this.columnShipToCountry = new global::System.Data.DataColumn("ShipToCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToCountry);
                this.columnShipToPostalCode = new global::System.Data.DataColumn("ShipToPostalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipToPostalCode);
                this.columnShipVia = new global::System.Data.DataColumn("ShipVia", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipVia);
                this.columnTermsCode = new global::System.Data.DataColumn("TermsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTermsCode);
                this.columnTaxableYN = new global::System.Data.DataColumn("TaxableYN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxableYN);
                this.columnInvcNum = new global::System.Data.DataColumn("InvcNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvcNum);
                this.columnCredMemNum = new global::System.Data.DataColumn("CredMemNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredMemNum);
                this.columnPackNum = new global::System.Data.DataColumn("PackNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackNum);
                this.columnWhseId = new global::System.Data.DataColumn("WhseId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhseId);
                this.columnOrderDate = new global::System.Data.DataColumn("OrderDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderDate);
                this.columnShipNum = new global::System.Data.DataColumn("ShipNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipNum);
                this.columnShipDate = new global::System.Data.DataColumn("ShipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipDate);
                this.columnInvcDate = new global::System.Data.DataColumn("InvcDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvcDate);
                this.columnRep1Id = new global::System.Data.DataColumn("Rep1Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1Id);
                this.columnRep1Pct = new global::System.Data.DataColumn("Rep1Pct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1Pct);
                this.columnRep2Id = new global::System.Data.DataColumn("Rep2Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep2Id);
                this.columnRep2Pct = new global::System.Data.DataColumn("Rep2Pct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep2Pct);
                this.columnTaxOnFreight = new global::System.Data.DataColumn("TaxOnFreight", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxOnFreight);
                this.columnTaxClassFreight = new global::System.Data.DataColumn("TaxClassFreight", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClassFreight);
                this.columnTaxClassMisc = new global::System.Data.DataColumn("TaxClassMisc", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClassMisc);
                this.columnPostDate = new global::System.Data.DataColumn("PostDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostDate);
                this.columnFiscalYear = new global::System.Data.DataColumn("FiscalYear", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiscalYear);
                this.columnGLPeriod = new global::System.Data.DataColumn("GLPeriod", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLPeriod);
                this.columnTaxGrpID = new global::System.Data.DataColumn("TaxGrpID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxGrpID);
                this.columnTaxSubtotal = new global::System.Data.DataColumn("TaxSubtotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxSubtotal);
                this.columnNonTaxSubtotal = new global::System.Data.DataColumn("NonTaxSubtotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonTaxSubtotal);
                this.columnSalesTax = new global::System.Data.DataColumn("SalesTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTax);
                this.columnFreight = new global::System.Data.DataColumn("Freight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreight);
                this.columnMisc = new global::System.Data.DataColumn("Misc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisc);
                this.columnTotCost = new global::System.Data.DataColumn("TotCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotCost);
                this.columnTotPmtAmt = new global::System.Data.DataColumn("TotPmtAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotPmtAmt);
                this.columnTaxSubtotalFgn = new global::System.Data.DataColumn("TaxSubtotalFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxSubtotalFgn);
                this.columnNonTaxSubtotalFgn = new global::System.Data.DataColumn("NonTaxSubtotalFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonTaxSubtotalFgn);
                this.columnSalesTaxFgn = new global::System.Data.DataColumn("SalesTaxFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesTaxFgn);
                this.columnFreightFgn = new global::System.Data.DataColumn("FreightFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreightFgn);
                this.columnMiscFgn = new global::System.Data.DataColumn("MiscFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiscFgn);
                this.columnTotCostFgn = new global::System.Data.DataColumn("TotCostFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotCostFgn);
                this.columnTotPmtAmtFgn = new global::System.Data.DataColumn("TotPmtAmtFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotPmtAmtFgn);
                this.columnPrintStatus = new global::System.Data.DataColumn("PrintStatus", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintStatus);
                this.columnCustPONum = new global::System.Data.DataColumn("CustPONum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustPONum);
                this.columnDistCode = new global::System.Data.DataColumn("DistCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistCode);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnExchRate = new global::System.Data.DataColumn("ExchRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchRate);
                this.columnDiscDueDate = new global::System.Data.DataColumn("DiscDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscDueDate);
                this.columnNetDueDate = new global::System.Data.DataColumn("NetDueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetDueDate);
                this.columnDiscAmt = new global::System.Data.DataColumn("DiscAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscAmt);
                this.columnDiscAmtFgn = new global::System.Data.DataColumn("DiscAmtFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscAmtFgn);
                this.columnSumHistPeriod = new global::System.Data.DataColumn("SumHistPeriod", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSumHistPeriod);
                this.columnTaxAmtAdj = new global::System.Data.DataColumn("TaxAmtAdj", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmtAdj);
                this.columnTaxAmtAdjFgn = new global::System.Data.DataColumn("TaxAmtAdjFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAmtAdjFgn);
                this.columnTaxAdj = new global::System.Data.DataColumn("TaxAdj", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxAdj);
                this.columnTaxLocAdj = new global::System.Data.DataColumn("TaxLocAdj", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxLocAdj);
                this.columnTaxClassAdj = new global::System.Data.DataColumn("TaxClassAdj", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClassAdj);
                this.columnCustLevel = new global::System.Data.DataColumn("CustLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustLevel);
                this.columnPODate = new global::System.Data.DataColumn("PODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODate);
                this.columnReqShipDate = new global::System.Data.DataColumn("ReqShipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqShipDate);
                this.columnPickNum = new global::System.Data.DataColumn("PickNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickNum);
                this.columnSource = new global::System.Data.DataColumn("Source", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSource);
                this.columnBillingPeriodFrom = new global::System.Data.DataColumn("BillingPeriodFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingPeriodFrom);
                this.columnPMTransType = new global::System.Data.DataColumn("PMTransType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMTransType);
                this.columnProjItem = new global::System.Data.DataColumn("ProjItem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjItem);
                this.columnBillingPeriodThru = new global::System.Data.DataColumn("BillingPeriodThru", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingPeriodThru);
                this.columnBillingFormat = new global::System.Data.DataColumn("BillingFormat", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillingFormat);
                this.columnPickedBy = new global::System.Data.DataColumn("PickedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPickedBy);
                this.columnEnteredBy = new global::System.Data.DataColumn("EnteredBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnteredBy);
                this.columnPrntListPrice = new global::System.Data.DataColumn("PrntListPrice", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrntListPrice);
                this.columnReceivedBy = new global::System.Data.DataColumn("ReceivedBy", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedBy);
                this.columnPrintTime = new global::System.Data.DataColumn("PrintTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrintTime);
                this.columnCustomsPercent = new global::System.Data.DataColumn("CustomsPercent", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomsPercent);
                this.columnPieces = new global::System.Data.DataColumn("Pieces", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPieces);
                this.columnUom = new global::System.Data.DataColumn("Uom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUom);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnDropShipment = new global::System.Data.DataColumn("DropShipment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDropShipment);
                this.columnCODOption = new global::System.Data.DataColumn("CODOption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODOption);
                this.columnCODType = new global::System.Data.DataColumn("CODType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODType);
                this.columnUPSProcessed = new global::System.Data.DataColumn("UPSProcessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPSProcessed);
                this.columnShipWeight = new global::System.Data.DataColumn("ShipWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShipWeight);
                this.columnCustType = new global::System.Data.DataColumn("CustType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustType);
                this.columnPostRun1 = new global::System.Data.DataColumn("PostRun1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPostRun1);
                this.columnTransID1 = new global::System.Data.DataColumn("TransID1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransID1);
                this.columnEntryNum = new global::System.Data.DataColumn("EntryNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryNum);
                this.columnItemJob = new global::System.Data.DataColumn("ItemJob", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemJob);
                this.columnWhseId1 = new global::System.Data.DataColumn("WhseId1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhseId1);
                this.columnPartId = new global::System.Data.DataColumn("PartId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartId);
                this.columnJobId = new global::System.Data.DataColumn("JobId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobId);
                this.columnPhaseId = new global::System.Data.DataColumn("PhaseId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseId);
                this.columnJobCompleteYN = new global::System.Data.DataColumn("JobCompleteYN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCompleteYN);
                this.columnPartType = new global::System.Data.DataColumn("PartType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartType);
                this.columnDesc = new global::System.Data.DataColumn("Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesc);
                this.columnAddnlDesc = new global::System.Data.DataColumn("AddnlDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddnlDesc);
                this.columnCatId = new global::System.Data.DataColumn("CatId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCatId);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnAcctCode = new global::System.Data.DataColumn("AcctCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcctCode);
                this.columnGLAcctSales = new global::System.Data.DataColumn("GLAcctSales", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLAcctSales);
                this.columnGLAcctCOGS = new global::System.Data.DataColumn("GLAcctCOGS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLAcctCOGS);
                this.columnGLAcctInv = new global::System.Data.DataColumn("GLAcctInv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGLAcctInv);
                this.columnQtyOrdSell = new global::System.Data.DataColumn("QtyOrdSell", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyOrdSell);
                this.columnUnitsSell = new global::System.Data.DataColumn("UnitsSell", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitsSell);
                this.columnUnitsBase = new global::System.Data.DataColumn("UnitsBase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitsBase);
                this.columnQtyShipSell = new global::System.Data.DataColumn("QtyShipSell", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyShipSell);
                this.columnQtyShipBase = new global::System.Data.DataColumn("QtyShipBase", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyShipBase);
                this.columnQtyBackordSell = new global::System.Data.DataColumn("QtyBackordSell", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyBackordSell);
                this.columnPriceID = new global::System.Data.DataColumn("PriceID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceID);
                this.columnUnitPriceSell = new global::System.Data.DataColumn("UnitPriceSell", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceSell);
                this.columnUnitPriceSellFgn = new global::System.Data.DataColumn("UnitPriceSellFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPriceSellFgn);
                this.columnUnitCostSell = new global::System.Data.DataColumn("UnitCostSell", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCostSell);
                this.columnUnitCostSellFgn = new global::System.Data.DataColumn("UnitCostSellFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCostSellFgn);
                this.columnPriceExt = new global::System.Data.DataColumn("PriceExt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceExt);
                this.columnPriceExtFgn = new global::System.Data.DataColumn("PriceExtFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceExtFgn);
                this.columnCostExtFgn = new global::System.Data.DataColumn("CostExtFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostExtFgn);
                this.columnCostExt = new global::System.Data.DataColumn("CostExt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCostExt);
                this.columnPromoID = new global::System.Data.DataColumn("PromoID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPromoID);
                this.columnActShipDate = new global::System.Data.DataColumn("ActShipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActShipDate);
                this.columnEffectiveRate = new global::System.Data.DataColumn("EffectiveRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEffectiveRate);
                this.columnOrigOrderQty = new global::System.Data.DataColumn("OrigOrderQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrigOrderQty);
                this.columnBinNum = new global::System.Data.DataColumn("BinNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBinNum);
                this.columnConversionFactor = new global::System.Data.DataColumn("ConversionFactor", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConversionFactor);
                this.columnLottedYN = new global::System.Data.DataColumn("LottedYN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLottedYN);
                this.columnInItemYN = new global::System.Data.DataColumn("InItemYN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInItemYN);
                this.columnHistSeqNum = new global::System.Data.DataColumn("HistSeqNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistSeqNum);
                this.columnExtCost = new global::System.Data.DataColumn("ExtCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtCost);
                this.columnExtFinalInc = new global::System.Data.DataColumn("ExtFinalInc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtFinalInc);
                this.columnExtOrigInc = new global::System.Data.DataColumn("ExtOrigInc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtOrigInc);
                this.columnTransHistId = new global::System.Data.DataColumn("TransHistId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransHistId);
                this.columnTaskId = new global::System.Data.DataColumn("TaskId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskId);
                this.columnPhaseName = new global::System.Data.DataColumn("PhaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhaseName);
                this.columnProjName = new global::System.Data.DataColumn("ProjName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjName);
                this.columnExtFinalIncFgn = new global::System.Data.DataColumn("ExtFinalIncFgn", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtFinalIncFgn);
                this.columnTaskName = new global::System.Data.DataColumn("TaskName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaskName);
                this.columnKit = new global::System.Data.DataColumn("Kit", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKit);
                this.columnReqShipDate1 = new global::System.Data.DataColumn("ReqShipDate1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqShipDate1);
                this.columnCommAmt = new global::System.Data.DataColumn("CommAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommAmt);
                this.columnCommPaidDate = new global::System.Data.DataColumn("CommPaidDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommPaidDate);
                this.columnDiscPerc = new global::System.Data.DataColumn("DiscPerc", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscPerc);
                this.columnTariffCode = new global::System.Data.DataColumn("TariffCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTariffCode);
                this.columnPostRun.AllowDBNull = false;
                this.columnPostRun.MaxLength = 14;
                this.columnTransId.AllowDBNull = false;
                this.columnTransId.MaxLength = 8;
                this.columnBatchId.MaxLength = 6;
                this.columnCustId.MaxLength = 10;
                this.columnShipToID.MaxLength = 10;
                this.columnShipToName.MaxLength = 30;
                this.columnShipToAddr1.MaxLength = 30;
                this.columnShipToAddr2.MaxLength = 60;
                this.columnShipToCity.MaxLength = 30;
                this.columnShipToRegion.MaxLength = 10;
                this.columnShipToCountry.MaxLength = 6;
                this.columnShipToPostalCode.MaxLength = 10;
                this.columnShipVia.MaxLength = 20;
                this.columnTermsCode.MaxLength = 6;
                this.columnInvcNum.MaxLength = 15;
                this.columnCredMemNum.MaxLength = 15;
                this.columnPackNum.MaxLength = 15;
                this.columnWhseId.MaxLength = 10;
                this.columnShipNum.MaxLength = 22;
                this.columnRep1Id.MaxLength = 3;
                this.columnRep2Id.MaxLength = 3;
                this.columnTaxGrpID.MaxLength = 10;
                this.columnCustPONum.MaxLength = 25;
                this.columnDistCode.MaxLength = 6;
                this.columnCurrencyID.MaxLength = 6;
                this.columnTaxLocAdj.MaxLength = 10;
                this.columnCustLevel.MaxLength = 10;
                this.columnPickNum.MaxLength = 15;
                this.columnPMTransType.MaxLength = 4;
                this.columnProjItem.MaxLength = 4;
                this.columnPickedBy.MaxLength = 20;
                this.columnEnteredBy.MaxLength = 20;
                this.columnUom.MaxLength = 9;
                this.columnCODOption.MaxLength = 1;
                this.columnCODType.MaxLength = 1;
                this.columnCustType.MaxLength = 1;
                this.columnPostRun1.AllowDBNull = false;
                this.columnPostRun1.MaxLength = 14;
                this.columnTransID1.AllowDBNull = false;
                this.columnTransID1.MaxLength = 8;
                this.columnEntryNum.AllowDBNull = false;
                this.columnWhseId1.MaxLength = 10;
                this.columnPartId.MaxLength = 24;
                this.columnJobId.MaxLength = 10;
                this.columnPhaseId.MaxLength = 10;
                this.columnDesc.MaxLength = 35;
                this.columnAddnlDesc.MaxLength = 2147483647;
                this.columnCatId.MaxLength = 2;
                this.columnTaxClass.AllowDBNull = false;
                this.columnAcctCode.MaxLength = 6;
                this.columnGLAcctSales.MaxLength = 40;
                this.columnGLAcctCOGS.MaxLength = 40;
                this.columnGLAcctInv.MaxLength = 40;
                this.columnUnitsSell.MaxLength = 5;
                this.columnUnitsBase.MaxLength = 5;
                this.columnPriceID.MaxLength = 10;
                this.columnPromoID.MaxLength = 10;
                this.columnBinNum.MaxLength = 10;
                this.columnTransHistId.MaxLength = 10;
                this.columnTaskId.MaxLength = 10;
                this.columnPhaseName.MaxLength = 30;
                this.columnProjName.MaxLength = 30;
                this.columnTaskName.MaxLength = 30;
                this.columnTariffCode.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public qryArPRPHistoryRow NewqryArPRPHistoryRow() {
                return ((qryArPRPHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new qryArPRPHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(qryArPRPHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.qryArPRPHistoryRowChanged != null)) {
                    this.qryArPRPHistoryRowChanged(this, new qryArPRPHistoryRowChangeEvent(((qryArPRPHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.qryArPRPHistoryRowChanging != null)) {
                    this.qryArPRPHistoryRowChanging(this, new qryArPRPHistoryRowChangeEvent(((qryArPRPHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.qryArPRPHistoryRowDeleted != null)) {
                    this.qryArPRPHistoryRowDeleted(this, new qryArPRPHistoryRowChangeEvent(((qryArPRPHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.qryArPRPHistoryRowDeleting != null)) {
                    this.qryArPRPHistoryRowDeleting(this, new qryArPRPHistoryRowChangeEvent(((qryArPRPHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveqryArPRPHistoryRow(qryArPRPHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "qryArPRPHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lkpArHistHeaderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnInvcNum;
            
            private global::System.Data.DataColumn columnTransId;
            
            private global::System.Data.DataColumn columnRep1Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArHistHeaderDataTable() {
                this.TableName = "lkpArHistHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpArHistHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lkpArHistHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvcNumColumn {
                get {
                    return this.columnInvcNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransIdColumn {
                get {
                    return this.columnTransId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1IdColumn {
                get {
                    return this.columnRep1Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArHistHeaderRow this[int index] {
                get {
                    return ((lkpArHistHeaderRow)(this.Rows[index]));
                }
            }
            
            public event lkpArHistHeaderRowChangeEventHandler lkpArHistHeaderRowChanging;
            
            public event lkpArHistHeaderRowChangeEventHandler lkpArHistHeaderRowChanged;
            
            public event lkpArHistHeaderRowChangeEventHandler lkpArHistHeaderRowDeleting;
            
            public event lkpArHistHeaderRowChangeEventHandler lkpArHistHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlkpArHistHeaderRow(lkpArHistHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArHistHeaderRow AddlkpArHistHeaderRow(string InvcNum, string TransId, string Rep1Id) {
                lkpArHistHeaderRow rowlkpArHistHeaderRow = ((lkpArHistHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        InvcNum,
                        TransId,
                        Rep1Id};
                rowlkpArHistHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlkpArHistHeaderRow);
                return rowlkpArHistHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lkpArHistHeaderDataTable cln = ((lkpArHistHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lkpArHistHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvcNum = base.Columns["InvcNum"];
                this.columnTransId = base.Columns["TransId"];
                this.columnRep1Id = base.Columns["Rep1Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvcNum = new global::System.Data.DataColumn("InvcNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvcNum);
                this.columnTransId = new global::System.Data.DataColumn("TransId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransId);
                this.columnRep1Id = new global::System.Data.DataColumn("Rep1Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1Id);
                this.columnInvcNum.MaxLength = 15;
                this.columnTransId.AllowDBNull = false;
                this.columnTransId.MaxLength = 8;
                this.columnRep1Id.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArHistHeaderRow NewlkpArHistHeaderRow() {
                return ((lkpArHistHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lkpArHistHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lkpArHistHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lkpArHistHeaderRowChanged != null)) {
                    this.lkpArHistHeaderRowChanged(this, new lkpArHistHeaderRowChangeEvent(((lkpArHistHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lkpArHistHeaderRowChanging != null)) {
                    this.lkpArHistHeaderRowChanging(this, new lkpArHistHeaderRowChangeEvent(((lkpArHistHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lkpArHistHeaderRowDeleted != null)) {
                    this.lkpArHistHeaderRowDeleted(this, new lkpArHistHeaderRowChangeEvent(((lkpArHistHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lkpArHistHeaderRowDeleting != null)) {
                    this.lkpArHistHeaderRowDeleting(this, new lkpArHistHeaderRowChangeEvent(((lkpArHistHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelkpArHistHeaderRow(lkpArHistHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lkpArHistHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblInPRPReturnsCodesDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCodeID;
            
            private global::System.Data.DataColumn columnReturnCodes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesDataTable() {
                this.TableName = "tblInPRPReturnsCodes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsCodesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblInPRPReturnsCodesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeIDColumn {
                get {
                    return this.columnCodeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnCodesColumn {
                get {
                    return this.columnReturnCodes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesRow this[int index] {
                get {
                    return ((tblInPRPReturnsCodesRow)(this.Rows[index]));
                }
            }
            
            public event tblInPRPReturnsCodesRowChangeEventHandler tblInPRPReturnsCodesRowChanging;
            
            public event tblInPRPReturnsCodesRowChangeEventHandler tblInPRPReturnsCodesRowChanged;
            
            public event tblInPRPReturnsCodesRowChangeEventHandler tblInPRPReturnsCodesRowDeleting;
            
            public event tblInPRPReturnsCodesRowChangeEventHandler tblInPRPReturnsCodesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblInPRPReturnsCodesRow(tblInPRPReturnsCodesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesRow AddtblInPRPReturnsCodesRow(short CodeID, string ReturnCodes) {
                tblInPRPReturnsCodesRow rowtblInPRPReturnsCodesRow = ((tblInPRPReturnsCodesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CodeID,
                        ReturnCodes};
                rowtblInPRPReturnsCodesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblInPRPReturnsCodesRow);
                return rowtblInPRPReturnsCodesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesRow FindByCodeID(short CodeID) {
                return ((tblInPRPReturnsCodesRow)(this.Rows.Find(new object[] {
                            CodeID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblInPRPReturnsCodesDataTable cln = ((tblInPRPReturnsCodesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblInPRPReturnsCodesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCodeID = base.Columns["CodeID"];
                this.columnReturnCodes = base.Columns["ReturnCodes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCodeID = new global::System.Data.DataColumn("CodeID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeID);
                this.columnReturnCodes = new global::System.Data.DataColumn("ReturnCodes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnCodes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCodeID}, true));
                this.columnCodeID.AllowDBNull = false;
                this.columnCodeID.Unique = true;
                this.columnReturnCodes.AllowDBNull = false;
                this.columnReturnCodes.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesRow NewtblInPRPReturnsCodesRow() {
                return ((tblInPRPReturnsCodesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblInPRPReturnsCodesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblInPRPReturnsCodesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblInPRPReturnsCodesRowChanged != null)) {
                    this.tblInPRPReturnsCodesRowChanged(this, new tblInPRPReturnsCodesRowChangeEvent(((tblInPRPReturnsCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblInPRPReturnsCodesRowChanging != null)) {
                    this.tblInPRPReturnsCodesRowChanging(this, new tblInPRPReturnsCodesRowChangeEvent(((tblInPRPReturnsCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblInPRPReturnsCodesRowDeleted != null)) {
                    this.tblInPRPReturnsCodesRowDeleted(this, new tblInPRPReturnsCodesRowChangeEvent(((tblInPRPReturnsCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblInPRPReturnsCodesRowDeleting != null)) {
                    this.tblInPRPReturnsCodesRowDeleting(this, new tblInPRPReturnsCodesRowChangeEvent(((tblInPRPReturnsCodesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblInPRPReturnsCodesRow(tblInPRPReturnsCodesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblInPRPReturnsCodesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblInPRPReturnsHeaderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCustID;
            
            private global::System.Data.DataColumn columnCustName;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnInvoiceNum;
            
            private global::System.Data.DataColumn columnPackingListNum;
            
            private global::System.Data.DataColumn columnReplOrder;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnCompletedYn;
            
            private global::System.Data.DataColumn columnWrkStnID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnTransId;
            
            private global::System.Data.DataColumn columnRep1Id;
            
            private global::System.Data.DataColumn columnReturnAuthNum;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderDataTable() {
                this.TableName = "tblInPRPReturnsHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblInPRPReturnsHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustIDColumn {
                get {
                    return this.columnCustID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustNameColumn {
                get {
                    return this.columnCustName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumColumn {
                get {
                    return this.columnInvoiceNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackingListNumColumn {
                get {
                    return this.columnPackingListNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReplOrderColumn {
                get {
                    return this.columnReplOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedYnColumn {
                get {
                    return this.columnCompletedYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WrkStnIDColumn {
                get {
                    return this.columnWrkStnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransIdColumn {
                get {
                    return this.columnTransId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1IdColumn {
                get {
                    return this.columnRep1Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnAuthNumColumn {
                get {
                    return this.columnReturnAuthNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderRow this[int index] {
                get {
                    return ((tblInPRPReturnsHeaderRow)(this.Rows[index]));
                }
            }
            
            public event tblInPRPReturnsHeaderRowChangeEventHandler tblInPRPReturnsHeaderRowChanging;
            
            public event tblInPRPReturnsHeaderRowChangeEventHandler tblInPRPReturnsHeaderRowChanged;
            
            public event tblInPRPReturnsHeaderRowChangeEventHandler tblInPRPReturnsHeaderRowDeleting;
            
            public event tblInPRPReturnsHeaderRowChangeEventHandler tblInPRPReturnsHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblInPRPReturnsHeaderRow(tblInPRPReturnsHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderRow AddtblInPRPReturnsHeaderRow(
                        string CustID, 
                        string CustName, 
                        string Contact, 
                        string Phone, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string Region, 
                        string Zip, 
                        string InvoiceNum, 
                        string PackingListNum, 
                        string ReplOrder, 
                        string Memo, 
                        bool CompletedYn, 
                        string WrkStnID, 
                        string UserID, 
                        string TransId, 
                        string Rep1Id, 
                        string ReturnAuthNum, 
                        System.DateTime CreationDate) {
                tblInPRPReturnsHeaderRow rowtblInPRPReturnsHeaderRow = ((tblInPRPReturnsHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustID,
                        CustName,
                        Contact,
                        Phone,
                        Address1,
                        Address2,
                        City,
                        Region,
                        Zip,
                        InvoiceNum,
                        PackingListNum,
                        ReplOrder,
                        Memo,
                        CompletedYn,
                        WrkStnID,
                        UserID,
                        TransId,
                        Rep1Id,
                        ReturnAuthNum,
                        CreationDate};
                rowtblInPRPReturnsHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblInPRPReturnsHeaderRow);
                return rowtblInPRPReturnsHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderRow FindByReturnAuthNum(string ReturnAuthNum) {
                return ((tblInPRPReturnsHeaderRow)(this.Rows.Find(new object[] {
                            ReturnAuthNum})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblInPRPReturnsHeaderDataTable cln = ((tblInPRPReturnsHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblInPRPReturnsHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustID = base.Columns["CustID"];
                this.columnCustName = base.Columns["CustName"];
                this.columnContact = base.Columns["Contact"];
                this.columnPhone = base.Columns["Phone"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnRegion = base.Columns["Region"];
                this.columnZip = base.Columns["Zip"];
                this.columnInvoiceNum = base.Columns["InvoiceNum"];
                this.columnPackingListNum = base.Columns["PackingListNum"];
                this.columnReplOrder = base.Columns["ReplOrder"];
                this.columnMemo = base.Columns["Memo"];
                this.columnCompletedYn = base.Columns["CompletedYn"];
                this.columnWrkStnID = base.Columns["WrkStnID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnTransId = base.Columns["TransId"];
                this.columnRep1Id = base.Columns["Rep1Id"];
                this.columnReturnAuthNum = base.Columns["ReturnAuthNum"];
                this.columnCreationDate = base.Columns["CreationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustID = new global::System.Data.DataColumn("CustID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustID);
                this.columnCustName = new global::System.Data.DataColumn("CustName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustName);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnInvoiceNum = new global::System.Data.DataColumn("InvoiceNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNum);
                this.columnPackingListNum = new global::System.Data.DataColumn("PackingListNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingListNum);
                this.columnReplOrder = new global::System.Data.DataColumn("ReplOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplOrder);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnCompletedYn = new global::System.Data.DataColumn("CompletedYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompletedYn);
                this.columnWrkStnID = new global::System.Data.DataColumn("WrkStnID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrkStnID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnTransId = new global::System.Data.DataColumn("TransId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransId);
                this.columnRep1Id = new global::System.Data.DataColumn("Rep1Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1Id);
                this.columnReturnAuthNum = new global::System.Data.DataColumn("ReturnAuthNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAuthNum);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint2", new global::System.Data.DataColumn[] {
                                this.columnReturnAuthNum}, true));
                this.columnCustID.AllowDBNull = false;
                this.columnCustID.MaxLength = 10;
                this.columnCustName.AllowDBNull = false;
                this.columnCustName.MaxLength = 30;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 30;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 10;
                this.columnAddress1.AllowDBNull = false;
                this.columnAddress1.MaxLength = 30;
                this.columnAddress2.MaxLength = 30;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 30;
                this.columnRegion.AllowDBNull = false;
                this.columnRegion.MaxLength = 10;
                this.columnZip.AllowDBNull = false;
                this.columnZip.MaxLength = 10;
                this.columnInvoiceNum.AllowDBNull = false;
                this.columnInvoiceNum.MaxLength = 15;
                this.columnPackingListNum.MaxLength = 15;
                this.columnReplOrder.MaxLength = 50;
                this.columnMemo.MaxLength = 500;
                this.columnWrkStnID.AllowDBNull = false;
                this.columnWrkStnID.MaxLength = 20;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 20;
                this.columnReturnAuthNum.AllowDBNull = false;
                this.columnReturnAuthNum.Unique = true;
                this.columnReturnAuthNum.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderRow NewtblInPRPReturnsHeaderRow() {
                return ((tblInPRPReturnsHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblInPRPReturnsHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblInPRPReturnsHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblInPRPReturnsHeaderRowChanged != null)) {
                    this.tblInPRPReturnsHeaderRowChanged(this, new tblInPRPReturnsHeaderRowChangeEvent(((tblInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblInPRPReturnsHeaderRowChanging != null)) {
                    this.tblInPRPReturnsHeaderRowChanging(this, new tblInPRPReturnsHeaderRowChangeEvent(((tblInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblInPRPReturnsHeaderRowDeleted != null)) {
                    this.tblInPRPReturnsHeaderRowDeleted(this, new tblInPRPReturnsHeaderRowChangeEvent(((tblInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblInPRPReturnsHeaderRowDeleting != null)) {
                    this.tblInPRPReturnsHeaderRowDeleting(this, new tblInPRPReturnsHeaderRowChangeEvent(((tblInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblInPRPReturnsHeaderRow(tblInPRPReturnsHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblInPRPReturnsHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lkpSmCompIDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCompID;
            
            private global::System.Data.DataColumn columnWhseID;
            
            private global::System.Data.DataColumn columnPrecUCost;
            
            private global::System.Data.DataColumn columnPrecUPrice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDDataTable() {
                this.TableName = "lkpSmCompID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpSmCompIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lkpSmCompIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompIDColumn {
                get {
                    return this.columnCompID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhseIDColumn {
                get {
                    return this.columnWhseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecUCostColumn {
                get {
                    return this.columnPrecUCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PrecUPriceColumn {
                get {
                    return this.columnPrecUPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDRow this[int index] {
                get {
                    return ((lkpSmCompIDRow)(this.Rows[index]));
                }
            }
            
            public event lkpSmCompIDRowChangeEventHandler lkpSmCompIDRowChanging;
            
            public event lkpSmCompIDRowChangeEventHandler lkpSmCompIDRowChanged;
            
            public event lkpSmCompIDRowChangeEventHandler lkpSmCompIDRowDeleting;
            
            public event lkpSmCompIDRowChangeEventHandler lkpSmCompIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlkpSmCompIDRow(lkpSmCompIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDRow AddlkpSmCompIDRow(string CompID, string WhseID, byte PrecUCost, byte PrecUPrice) {
                lkpSmCompIDRow rowlkpSmCompIDRow = ((lkpSmCompIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompID,
                        WhseID,
                        PrecUCost,
                        PrecUPrice};
                rowlkpSmCompIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlkpSmCompIDRow);
                return rowlkpSmCompIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDRow FindByCompID(string CompID) {
                return ((lkpSmCompIDRow)(this.Rows.Find(new object[] {
                            CompID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lkpSmCompIDDataTable cln = ((lkpSmCompIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lkpSmCompIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompID = base.Columns["CompID"];
                this.columnWhseID = base.Columns["WhseID"];
                this.columnPrecUCost = base.Columns["PrecUCost"];
                this.columnPrecUPrice = base.Columns["PrecUPrice"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompID = new global::System.Data.DataColumn("CompID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompID);
                this.columnWhseID = new global::System.Data.DataColumn("WhseID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhseID);
                this.columnPrecUCost = new global::System.Data.DataColumn("PrecUCost", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecUCost);
                this.columnPrecUPrice = new global::System.Data.DataColumn("PrecUPrice", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecUPrice);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCompID}, true));
                this.columnCompID.AllowDBNull = false;
                this.columnCompID.Unique = true;
                this.columnCompID.MaxLength = 3;
                this.columnWhseID.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDRow NewlkpSmCompIDRow() {
                return ((lkpSmCompIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lkpSmCompIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lkpSmCompIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lkpSmCompIDRowChanged != null)) {
                    this.lkpSmCompIDRowChanged(this, new lkpSmCompIDRowChangeEvent(((lkpSmCompIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lkpSmCompIDRowChanging != null)) {
                    this.lkpSmCompIDRowChanging(this, new lkpSmCompIDRowChangeEvent(((lkpSmCompIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lkpSmCompIDRowDeleted != null)) {
                    this.lkpSmCompIDRowDeleted(this, new lkpSmCompIDRowChangeEvent(((lkpSmCompIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lkpSmCompIDRowDeleting != null)) {
                    this.lkpSmCompIDRowDeleting(this, new lkpSmCompIDRowChangeEvent(((lkpSmCompIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelkpSmCompIDRow(lkpSmCompIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lkpSmCompIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lkpInItemDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnItemId;
            
            private global::System.Data.DataColumn columnDescr;
            
            private global::System.Data.DataColumn columnPriceId;
            
            private global::System.Data.DataColumn columnUomDflt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemDataTable() {
                this.TableName = "lkpInItem";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpInItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lkpInItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIdColumn {
                get {
                    return this.columnItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescrColumn {
                get {
                    return this.columnDescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceIdColumn {
                get {
                    return this.columnPriceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UomDfltColumn {
                get {
                    return this.columnUomDflt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemRow this[int index] {
                get {
                    return ((lkpInItemRow)(this.Rows[index]));
                }
            }
            
            public event lkpInItemRowChangeEventHandler lkpInItemRowChanging;
            
            public event lkpInItemRowChangeEventHandler lkpInItemRowChanged;
            
            public event lkpInItemRowChangeEventHandler lkpInItemRowDeleting;
            
            public event lkpInItemRowChangeEventHandler lkpInItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlkpInItemRow(lkpInItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemRow AddlkpInItemRow(string ItemId, string Descr, string PriceId, string UomDflt) {
                lkpInItemRow rowlkpInItemRow = ((lkpInItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemId,
                        Descr,
                        PriceId,
                        UomDflt};
                rowlkpInItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlkpInItemRow);
                return rowlkpInItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemRow FindByItemId(string ItemId) {
                return ((lkpInItemRow)(this.Rows.Find(new object[] {
                            ItemId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lkpInItemDataTable cln = ((lkpInItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lkpInItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemId = base.Columns["ItemId"];
                this.columnDescr = base.Columns["Descr"];
                this.columnPriceId = base.Columns["PriceId"];
                this.columnUomDflt = base.Columns["UomDflt"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemId = new global::System.Data.DataColumn("ItemId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemId);
                this.columnDescr = new global::System.Data.DataColumn("Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescr);
                this.columnPriceId = new global::System.Data.DataColumn("PriceId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceId);
                this.columnUomDflt = new global::System.Data.DataColumn("UomDflt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUomDflt);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnItemId}, true));
                this.columnItemId.AllowDBNull = false;
                this.columnItemId.Unique = true;
                this.columnItemId.MaxLength = 24;
                this.columnDescr.MaxLength = 35;
                this.columnPriceId.MaxLength = 10;
                this.columnUomDflt.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemRow NewlkpInItemRow() {
                return ((lkpInItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lkpInItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lkpInItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lkpInItemRowChanged != null)) {
                    this.lkpInItemRowChanged(this, new lkpInItemRowChangeEvent(((lkpInItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lkpInItemRowChanging != null)) {
                    this.lkpInItemRowChanging(this, new lkpInItemRowChangeEvent(((lkpInItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lkpInItemRowDeleted != null)) {
                    this.lkpInItemRowDeleted(this, new lkpInItemRowChangeEvent(((lkpInItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lkpInItemRowDeleting != null)) {
                    this.lkpInItemRowDeleting(this, new lkpInItemRowChangeEvent(((lkpInItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelkpInItemRow(lkpInItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lkpInItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblInPRPReturnsDetCdDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDetID;
            
            private global::System.Data.DataColumn columnDetDescr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdDataTable() {
                this.TableName = "tblInPRPReturnsDetCd";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsDetCdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblInPRPReturnsDetCdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetIDColumn {
                get {
                    return this.columnDetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetDescrColumn {
                get {
                    return this.columnDetDescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdRow this[int index] {
                get {
                    return ((tblInPRPReturnsDetCdRow)(this.Rows[index]));
                }
            }
            
            public event tblInPRPReturnsDetCdRowChangeEventHandler tblInPRPReturnsDetCdRowChanging;
            
            public event tblInPRPReturnsDetCdRowChangeEventHandler tblInPRPReturnsDetCdRowChanged;
            
            public event tblInPRPReturnsDetCdRowChangeEventHandler tblInPRPReturnsDetCdRowDeleting;
            
            public event tblInPRPReturnsDetCdRowChangeEventHandler tblInPRPReturnsDetCdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblInPRPReturnsDetCdRow(tblInPRPReturnsDetCdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdRow AddtblInPRPReturnsDetCdRow(short DetID, string DetDescr) {
                tblInPRPReturnsDetCdRow rowtblInPRPReturnsDetCdRow = ((tblInPRPReturnsDetCdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DetID,
                        DetDescr};
                rowtblInPRPReturnsDetCdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblInPRPReturnsDetCdRow);
                return rowtblInPRPReturnsDetCdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdRow FindByDetID(short DetID) {
                return ((tblInPRPReturnsDetCdRow)(this.Rows.Find(new object[] {
                            DetID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblInPRPReturnsDetCdDataTable cln = ((tblInPRPReturnsDetCdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblInPRPReturnsDetCdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDetID = base.Columns["DetID"];
                this.columnDetDescr = base.Columns["DetDescr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDetID = new global::System.Data.DataColumn("DetID", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetID);
                this.columnDetDescr = new global::System.Data.DataColumn("DetDescr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetDescr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnDetID}, true));
                this.columnDetID.AllowDBNull = false;
                this.columnDetID.Unique = true;
                this.columnDetDescr.AllowDBNull = false;
                this.columnDetDescr.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdRow NewtblInPRPReturnsDetCdRow() {
                return ((tblInPRPReturnsDetCdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblInPRPReturnsDetCdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblInPRPReturnsDetCdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblInPRPReturnsDetCdRowChanged != null)) {
                    this.tblInPRPReturnsDetCdRowChanged(this, new tblInPRPReturnsDetCdRowChangeEvent(((tblInPRPReturnsDetCdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblInPRPReturnsDetCdRowChanging != null)) {
                    this.tblInPRPReturnsDetCdRowChanging(this, new tblInPRPReturnsDetCdRowChangeEvent(((tblInPRPReturnsDetCdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblInPRPReturnsDetCdRowDeleted != null)) {
                    this.tblInPRPReturnsDetCdRowDeleted(this, new tblInPRPReturnsDetCdRowChangeEvent(((tblInPRPReturnsDetCdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblInPRPReturnsDetCdRowDeleting != null)) {
                    this.tblInPRPReturnsDetCdRowDeleting(this, new tblInPRPReturnsDetCdRowChangeEvent(((tblInPRPReturnsDetCdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblInPRPReturnsDetCdRow(tblInPRPReturnsDetCdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblInPRPReturnsDetCdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lkpInPRPReturnsDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReturnAuthNum;
            
            private global::System.Data.DataColumn columnEntryNum;
            
            private global::System.Data.DataColumn columnReturningItemID;
            
            private global::System.Data.DataColumn columnReturningQty;
            
            private global::System.Data.DataColumn columnReturningCode;
            
            private global::System.Data.DataColumn columnExplanationText;
            
            private global::System.Data.DataColumn columnRestockingFeeYn;
            
            private global::System.Data.DataColumn columnReturnedPartId;
            
            private global::System.Data.DataColumn columnReturnedCode;
            
            private global::System.Data.DataColumn columnReturnedQty;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnTotalPrice;
            
            private global::System.Data.DataColumn columnDeterminationCode;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnRestockingFee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailDataTable() {
                this.TableName = "lkpInPRPReturnsDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpInPRPReturnsDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lkpInPRPReturnsDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnAuthNumColumn {
                get {
                    return this.columnReturnAuthNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryNumColumn {
                get {
                    return this.columnEntryNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningItemIDColumn {
                get {
                    return this.columnReturningItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningQtyColumn {
                get {
                    return this.columnReturningQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningCodeColumn {
                get {
                    return this.columnReturningCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExplanationTextColumn {
                get {
                    return this.columnExplanationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestockingFeeYnColumn {
                get {
                    return this.columnRestockingFeeYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedPartIdColumn {
                get {
                    return this.columnReturnedPartId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedCodeColumn {
                get {
                    return this.columnReturnedCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedQtyColumn {
                get {
                    return this.columnReturnedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPriceColumn {
                get {
                    return this.columnTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeterminationCodeColumn {
                get {
                    return this.columnDeterminationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestockingFeeColumn {
                get {
                    return this.columnRestockingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailRow this[int index] {
                get {
                    return ((lkpInPRPReturnsDetailRow)(this.Rows[index]));
                }
            }
            
            public event lkpInPRPReturnsDetailRowChangeEventHandler lkpInPRPReturnsDetailRowChanging;
            
            public event lkpInPRPReturnsDetailRowChangeEventHandler lkpInPRPReturnsDetailRowChanged;
            
            public event lkpInPRPReturnsDetailRowChangeEventHandler lkpInPRPReturnsDetailRowDeleting;
            
            public event lkpInPRPReturnsDetailRowChangeEventHandler lkpInPRPReturnsDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlkpInPRPReturnsDetailRow(lkpInPRPReturnsDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailRow AddlkpInPRPReturnsDetailRow(long ReturnAuthNum, short EntryNum, string ReturningItemID, decimal ReturningQty, short ReturningCode, string ExplanationText, bool RestockingFeeYn, string ReturnedPartId, short ReturnedCode, decimal ReturnedQty, string UnitPrice, decimal TotalPrice, short DeterminationCode, string SubTotal, string RestockingFee) {
                lkpInPRPReturnsDetailRow rowlkpInPRPReturnsDetailRow = ((lkpInPRPReturnsDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReturnAuthNum,
                        EntryNum,
                        ReturningItemID,
                        ReturningQty,
                        ReturningCode,
                        ExplanationText,
                        RestockingFeeYn,
                        ReturnedPartId,
                        ReturnedCode,
                        ReturnedQty,
                        UnitPrice,
                        TotalPrice,
                        DeterminationCode,
                        SubTotal,
                        RestockingFee};
                rowlkpInPRPReturnsDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlkpInPRPReturnsDetailRow);
                return rowlkpInPRPReturnsDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailRow FindByReturnAuthNumEntryNum(long ReturnAuthNum, short EntryNum) {
                return ((lkpInPRPReturnsDetailRow)(this.Rows.Find(new object[] {
                            ReturnAuthNum,
                            EntryNum})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lkpInPRPReturnsDetailDataTable cln = ((lkpInPRPReturnsDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lkpInPRPReturnsDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReturnAuthNum = base.Columns["ReturnAuthNum"];
                this.columnEntryNum = base.Columns["EntryNum"];
                this.columnReturningItemID = base.Columns["ReturningItemID"];
                this.columnReturningQty = base.Columns["ReturningQty"];
                this.columnReturningCode = base.Columns["ReturningCode"];
                this.columnExplanationText = base.Columns["ExplanationText"];
                this.columnRestockingFeeYn = base.Columns["RestockingFeeYn"];
                this.columnReturnedPartId = base.Columns["ReturnedPartId"];
                this.columnReturnedCode = base.Columns["ReturnedCode"];
                this.columnReturnedQty = base.Columns["ReturnedQty"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnTotalPrice = base.Columns["TotalPrice"];
                this.columnDeterminationCode = base.Columns["DeterminationCode"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnRestockingFee = base.Columns["RestockingFee"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReturnAuthNum = new global::System.Data.DataColumn("ReturnAuthNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAuthNum);
                this.columnEntryNum = new global::System.Data.DataColumn("EntryNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryNum);
                this.columnReturningItemID = new global::System.Data.DataColumn("ReturningItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningItemID);
                this.columnReturningQty = new global::System.Data.DataColumn("ReturningQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningQty);
                this.columnReturningCode = new global::System.Data.DataColumn("ReturningCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningCode);
                this.columnExplanationText = new global::System.Data.DataColumn("ExplanationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExplanationText);
                this.columnRestockingFeeYn = new global::System.Data.DataColumn("RestockingFeeYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestockingFeeYn);
                this.columnReturnedPartId = new global::System.Data.DataColumn("ReturnedPartId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedPartId);
                this.columnReturnedCode = new global::System.Data.DataColumn("ReturnedCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedCode);
                this.columnReturnedQty = new global::System.Data.DataColumn("ReturnedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedQty);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnTotalPrice = new global::System.Data.DataColumn("TotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrice);
                this.columnDeterminationCode = new global::System.Data.DataColumn("DeterminationCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeterminationCode);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnRestockingFee = new global::System.Data.DataColumn("RestockingFee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestockingFee);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReturnAuthNum,
                                this.columnEntryNum}, true));
                this.columnReturnAuthNum.AllowDBNull = false;
                this.columnEntryNum.AllowDBNull = false;
                this.columnReturningItemID.MaxLength = 24;
                this.columnExplanationText.MaxLength = 200;
                this.columnReturnedPartId.MaxLength = 24;
                this.columnUnitPrice.MaxLength = 50;
                this.columnSubTotal.MaxLength = 50;
                this.columnRestockingFee.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailRow NewlkpInPRPReturnsDetailRow() {
                return ((lkpInPRPReturnsDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lkpInPRPReturnsDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lkpInPRPReturnsDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lkpInPRPReturnsDetailRowChanged != null)) {
                    this.lkpInPRPReturnsDetailRowChanged(this, new lkpInPRPReturnsDetailRowChangeEvent(((lkpInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lkpInPRPReturnsDetailRowChanging != null)) {
                    this.lkpInPRPReturnsDetailRowChanging(this, new lkpInPRPReturnsDetailRowChangeEvent(((lkpInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lkpInPRPReturnsDetailRowDeleted != null)) {
                    this.lkpInPRPReturnsDetailRowDeleted(this, new lkpInPRPReturnsDetailRowChangeEvent(((lkpInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lkpInPRPReturnsDetailRowDeleting != null)) {
                    this.lkpInPRPReturnsDetailRowDeleting(this, new lkpInPRPReturnsDetailRowChangeEvent(((lkpInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelkpInPRPReturnsDetailRow(lkpInPRPReturnsDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lkpInPRPReturnsDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class lkpInPRPReturnsHeaderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReturnAuthNum;
            
            private global::System.Data.DataColumn columnCustID;
            
            private global::System.Data.DataColumn columnCustName;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnInvoiceNum;
            
            private global::System.Data.DataColumn columnPackingListNum;
            
            private global::System.Data.DataColumn columnReplOrder;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnCompletedYn;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            private global::System.Data.DataColumn columnWrkStnID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnTransId;
            
            private global::System.Data.DataColumn columnRep1Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderDataTable() {
                this.TableName = "lkpInPRPReturnsHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpInPRPReturnsHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected lkpInPRPReturnsHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnAuthNumColumn {
                get {
                    return this.columnReturnAuthNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustIDColumn {
                get {
                    return this.columnCustID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustNameColumn {
                get {
                    return this.columnCustName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumColumn {
                get {
                    return this.columnInvoiceNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackingListNumColumn {
                get {
                    return this.columnPackingListNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReplOrderColumn {
                get {
                    return this.columnReplOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedYnColumn {
                get {
                    return this.columnCompletedYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WrkStnIDColumn {
                get {
                    return this.columnWrkStnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransIdColumn {
                get {
                    return this.columnTransId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1IdColumn {
                get {
                    return this.columnRep1Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderRow this[int index] {
                get {
                    return ((lkpInPRPReturnsHeaderRow)(this.Rows[index]));
                }
            }
            
            public event lkpInPRPReturnsHeaderRowChangeEventHandler lkpInPRPReturnsHeaderRowChanging;
            
            public event lkpInPRPReturnsHeaderRowChangeEventHandler lkpInPRPReturnsHeaderRowChanged;
            
            public event lkpInPRPReturnsHeaderRowChangeEventHandler lkpInPRPReturnsHeaderRowDeleting;
            
            public event lkpInPRPReturnsHeaderRowChangeEventHandler lkpInPRPReturnsHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddlkpInPRPReturnsHeaderRow(lkpInPRPReturnsHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderRow AddlkpInPRPReturnsHeaderRow(
                        long ReturnAuthNum, 
                        string CustID, 
                        string CustName, 
                        string Contact, 
                        string Phone, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string Region, 
                        string Country, 
                        string Zip, 
                        string InvoiceNum, 
                        string PackingListNum, 
                        string ReplOrder, 
                        string Memo, 
                        bool CompletedYn, 
                        string CreationDate, 
                        string WrkStnID, 
                        string UserID, 
                        string TransId, 
                        string Rep1Id) {
                lkpInPRPReturnsHeaderRow rowlkpInPRPReturnsHeaderRow = ((lkpInPRPReturnsHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReturnAuthNum,
                        CustID,
                        CustName,
                        Contact,
                        Phone,
                        Address1,
                        Address2,
                        City,
                        Region,
                        Country,
                        Zip,
                        InvoiceNum,
                        PackingListNum,
                        ReplOrder,
                        Memo,
                        CompletedYn,
                        CreationDate,
                        WrkStnID,
                        UserID,
                        TransId,
                        Rep1Id};
                rowlkpInPRPReturnsHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowlkpInPRPReturnsHeaderRow);
                return rowlkpInPRPReturnsHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderRow FindByReturnAuthNum(long ReturnAuthNum) {
                return ((lkpInPRPReturnsHeaderRow)(this.Rows.Find(new object[] {
                            ReturnAuthNum})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                lkpInPRPReturnsHeaderDataTable cln = ((lkpInPRPReturnsHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new lkpInPRPReturnsHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReturnAuthNum = base.Columns["ReturnAuthNum"];
                this.columnCustID = base.Columns["CustID"];
                this.columnCustName = base.Columns["CustName"];
                this.columnContact = base.Columns["Contact"];
                this.columnPhone = base.Columns["Phone"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnRegion = base.Columns["Region"];
                this.columnCountry = base.Columns["Country"];
                this.columnZip = base.Columns["Zip"];
                this.columnInvoiceNum = base.Columns["InvoiceNum"];
                this.columnPackingListNum = base.Columns["PackingListNum"];
                this.columnReplOrder = base.Columns["ReplOrder"];
                this.columnMemo = base.Columns["Memo"];
                this.columnCompletedYn = base.Columns["CompletedYn"];
                this.columnCreationDate = base.Columns["CreationDate"];
                this.columnWrkStnID = base.Columns["WrkStnID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnTransId = base.Columns["TransId"];
                this.columnRep1Id = base.Columns["Rep1Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReturnAuthNum = new global::System.Data.DataColumn("ReturnAuthNum", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAuthNum);
                this.columnCustID = new global::System.Data.DataColumn("CustID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustID);
                this.columnCustName = new global::System.Data.DataColumn("CustName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustName);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnInvoiceNum = new global::System.Data.DataColumn("InvoiceNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNum);
                this.columnPackingListNum = new global::System.Data.DataColumn("PackingListNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingListNum);
                this.columnReplOrder = new global::System.Data.DataColumn("ReplOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplOrder);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnCompletedYn = new global::System.Data.DataColumn("CompletedYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompletedYn);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.columnWrkStnID = new global::System.Data.DataColumn("WrkStnID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrkStnID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnTransId = new global::System.Data.DataColumn("TransId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransId);
                this.columnRep1Id = new global::System.Data.DataColumn("Rep1Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReturnAuthNum}, true));
                this.columnReturnAuthNum.AllowDBNull = false;
                this.columnReturnAuthNum.Unique = true;
                this.columnCustID.AllowDBNull = false;
                this.columnCustID.MaxLength = 10;
                this.columnCustName.AllowDBNull = false;
                this.columnCustName.MaxLength = 30;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 30;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 10;
                this.columnAddress1.AllowDBNull = false;
                this.columnAddress1.MaxLength = 30;
                this.columnAddress2.MaxLength = 30;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 30;
                this.columnRegion.AllowDBNull = false;
                this.columnRegion.MaxLength = 10;
                this.columnCountry.MaxLength = 30;
                this.columnZip.AllowDBNull = false;
                this.columnZip.MaxLength = 10;
                this.columnInvoiceNum.AllowDBNull = false;
                this.columnInvoiceNum.MaxLength = 15;
                this.columnPackingListNum.MaxLength = 15;
                this.columnReplOrder.MaxLength = 50;
                this.columnMemo.MaxLength = 500;
                this.columnCreationDate.MaxLength = 10;
                this.columnWrkStnID.AllowDBNull = false;
                this.columnWrkStnID.MaxLength = 20;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 20;
                this.columnTransId.MaxLength = 8;
                this.columnRep1Id.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderRow NewlkpInPRPReturnsHeaderRow() {
                return ((lkpInPRPReturnsHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new lkpInPRPReturnsHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(lkpInPRPReturnsHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.lkpInPRPReturnsHeaderRowChanged != null)) {
                    this.lkpInPRPReturnsHeaderRowChanged(this, new lkpInPRPReturnsHeaderRowChangeEvent(((lkpInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.lkpInPRPReturnsHeaderRowChanging != null)) {
                    this.lkpInPRPReturnsHeaderRowChanging(this, new lkpInPRPReturnsHeaderRowChangeEvent(((lkpInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.lkpInPRPReturnsHeaderRowDeleted != null)) {
                    this.lkpInPRPReturnsHeaderRowDeleted(this, new lkpInPRPReturnsHeaderRowChangeEvent(((lkpInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.lkpInPRPReturnsHeaderRowDeleting != null)) {
                    this.lkpInPRPReturnsHeaderRowDeleting(this, new lkpInPRPReturnsHeaderRowChangeEvent(((lkpInPRPReturnsHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovelkpInPRPReturnsHeaderRow(lkpInPRPReturnsHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "lkpInPRPReturnsHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stpSmLookupDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSrchID;
            
            private global::System.Data.DataColumn columnFieldNo;
            
            private global::System.Data.DataColumn columnFieldName;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnDataType;
            
            private global::System.Data.DataColumn columnDataSize;
            
            private global::System.Data.DataColumn columnSearched;
            
            private global::System.Data.DataColumn columnEnabled;
            
            private global::System.Data.DataColumn columnTableName;
            
            private global::System.Data.DataColumn columnTableNameCS;
            
            private global::System.Data.DataColumn columnOrderBy;
            
            private global::System.Data.DataColumn columnWhere;
            
            private global::System.Data.DataColumn columnFieldMask;
            
            private global::System.Data.DataColumn columnFields;
            
            private global::System.Data.DataColumn columnRowList;
            
            private global::System.Data.DataColumn columnAllowFilter;
            
            private global::System.Data.DataColumn columnFieldSort;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupDataTable() {
                this.TableName = "stpSmLookup";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stpSmLookupDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stpSmLookupDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrchIDColumn {
                get {
                    return this.columnSrchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldNoColumn {
                get {
                    return this.columnFieldNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldNameColumn {
                get {
                    return this.columnFieldName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataTypeColumn {
                get {
                    return this.columnDataType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DataSizeColumn {
                get {
                    return this.columnDataSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SearchedColumn {
                get {
                    return this.columnSearched;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnabledColumn {
                get {
                    return this.columnEnabled;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableNameColumn {
                get {
                    return this.columnTableName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TableNameCSColumn {
                get {
                    return this.columnTableNameCS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderByColumn {
                get {
                    return this.columnOrderBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WhereColumn {
                get {
                    return this.columnWhere;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldMaskColumn {
                get {
                    return this.columnFieldMask;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldsColumn {
                get {
                    return this.columnFields;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RowListColumn {
                get {
                    return this.columnRowList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AllowFilterColumn {
                get {
                    return this.columnAllowFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FieldSortColumn {
                get {
                    return this.columnFieldSort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupRow this[int index] {
                get {
                    return ((stpSmLookupRow)(this.Rows[index]));
                }
            }
            
            public event stpSmLookupRowChangeEventHandler stpSmLookupRowChanging;
            
            public event stpSmLookupRowChangeEventHandler stpSmLookupRowChanged;
            
            public event stpSmLookupRowChangeEventHandler stpSmLookupRowDeleting;
            
            public event stpSmLookupRowChangeEventHandler stpSmLookupRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstpSmLookupRow(stpSmLookupRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupRow AddstpSmLookupRow(
                        string SrchID, 
                        short FieldNo, 
                        string FieldName, 
                        string Description, 
                        byte DataType, 
                        short DataSize, 
                        bool Searched, 
                        bool Enabled, 
                        string TableName, 
                        string TableNameCS, 
                        string OrderBy, 
                        string Where, 
                        string FieldMask, 
                        string Fields, 
                        string RowList, 
                        bool AllowFilter, 
                        short FieldSort) {
                stpSmLookupRow rowstpSmLookupRow = ((stpSmLookupRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SrchID,
                        FieldNo,
                        FieldName,
                        Description,
                        DataType,
                        DataSize,
                        Searched,
                        Enabled,
                        TableName,
                        TableNameCS,
                        OrderBy,
                        Where,
                        FieldMask,
                        Fields,
                        RowList,
                        AllowFilter,
                        FieldSort};
                rowstpSmLookupRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstpSmLookupRow);
                return rowstpSmLookupRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupRow FindBySrchIDFieldNo(string SrchID, short FieldNo) {
                return ((stpSmLookupRow)(this.Rows.Find(new object[] {
                            SrchID,
                            FieldNo})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stpSmLookupDataTable cln = ((stpSmLookupDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stpSmLookupDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSrchID = base.Columns["SrchID"];
                this.columnFieldNo = base.Columns["FieldNo"];
                this.columnFieldName = base.Columns["FieldName"];
                this.columnDescription = base.Columns["Description"];
                this.columnDataType = base.Columns["DataType"];
                this.columnDataSize = base.Columns["DataSize"];
                this.columnSearched = base.Columns["Searched"];
                this.columnEnabled = base.Columns["Enabled"];
                this.columnTableName = base.Columns["TableName"];
                this.columnTableNameCS = base.Columns["TableNameCS"];
                this.columnOrderBy = base.Columns["OrderBy"];
                this.columnWhere = base.Columns["Where"];
                this.columnFieldMask = base.Columns["FieldMask"];
                this.columnFields = base.Columns["Fields"];
                this.columnRowList = base.Columns["RowList"];
                this.columnAllowFilter = base.Columns["AllowFilter"];
                this.columnFieldSort = base.Columns["FieldSort"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSrchID = new global::System.Data.DataColumn("SrchID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrchID);
                this.columnFieldNo = new global::System.Data.DataColumn("FieldNo", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldNo);
                this.columnFieldName = new global::System.Data.DataColumn("FieldName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldName);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnDataType = new global::System.Data.DataColumn("DataType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataType);
                this.columnDataSize = new global::System.Data.DataColumn("DataSize", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataSize);
                this.columnSearched = new global::System.Data.DataColumn("Searched", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearched);
                this.columnEnabled = new global::System.Data.DataColumn("Enabled", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnabled);
                this.columnTableName = new global::System.Data.DataColumn("TableName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableName);
                this.columnTableNameCS = new global::System.Data.DataColumn("TableNameCS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTableNameCS);
                this.columnOrderBy = new global::System.Data.DataColumn("OrderBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderBy);
                this.columnWhere = new global::System.Data.DataColumn("Where", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWhere);
                this.columnFieldMask = new global::System.Data.DataColumn("FieldMask", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldMask);
                this.columnFields = new global::System.Data.DataColumn("Fields", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFields);
                this.columnRowList = new global::System.Data.DataColumn("RowList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowList);
                this.columnAllowFilter = new global::System.Data.DataColumn("AllowFilter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowFilter);
                this.columnFieldSort = new global::System.Data.DataColumn("FieldSort", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFieldSort);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSrchID,
                                this.columnFieldNo}, true));
                this.columnSrchID.AllowDBNull = false;
                this.columnSrchID.MaxLength = 30;
                this.columnFieldNo.AllowDBNull = false;
                this.columnFieldName.MaxLength = 50;
                this.columnDescription.MaxLength = 50;
                this.columnTableName.MaxLength = 255;
                this.columnTableNameCS.MaxLength = 255;
                this.columnOrderBy.MaxLength = 100;
                this.columnWhere.MaxLength = 255;
                this.columnFieldMask.MaxLength = 50;
                this.columnFields.MaxLength = 30;
                this.columnRowList.MaxLength = 255;
                this.columnFieldSort.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupRow NewstpSmLookupRow() {
                return ((stpSmLookupRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stpSmLookupRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stpSmLookupRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stpSmLookupRowChanged != null)) {
                    this.stpSmLookupRowChanged(this, new stpSmLookupRowChangeEvent(((stpSmLookupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stpSmLookupRowChanging != null)) {
                    this.stpSmLookupRowChanging(this, new stpSmLookupRowChangeEvent(((stpSmLookupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stpSmLookupRowDeleted != null)) {
                    this.stpSmLookupRowDeleted(this, new stpSmLookupRowChangeEvent(((stpSmLookupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stpSmLookupRowDeleting != null)) {
                    this.stpSmLookupRowDeleting(this, new stpSmLookupRowChangeEvent(((stpSmLookupRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestpSmLookupRow(stpSmLookupRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stpSmLookupDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class stpSmLookupHeaderDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSrchID;
            
            private global::System.Data.DataColumn columnDescr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderDataTable() {
                this.TableName = "stpSmLookupHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stpSmLookupHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected stpSmLookupHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrchIDColumn {
                get {
                    return this.columnSrchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescrColumn {
                get {
                    return this.columnDescr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderRow this[int index] {
                get {
                    return ((stpSmLookupHeaderRow)(this.Rows[index]));
                }
            }
            
            public event stpSmLookupHeaderRowChangeEventHandler stpSmLookupHeaderRowChanging;
            
            public event stpSmLookupHeaderRowChangeEventHandler stpSmLookupHeaderRowChanged;
            
            public event stpSmLookupHeaderRowChangeEventHandler stpSmLookupHeaderRowDeleting;
            
            public event stpSmLookupHeaderRowChangeEventHandler stpSmLookupHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddstpSmLookupHeaderRow(stpSmLookupHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderRow AddstpSmLookupHeaderRow(string SrchID, string Descr) {
                stpSmLookupHeaderRow rowstpSmLookupHeaderRow = ((stpSmLookupHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SrchID,
                        Descr};
                rowstpSmLookupHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowstpSmLookupHeaderRow);
                return rowstpSmLookupHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderRow FindBySrchID(string SrchID) {
                return ((stpSmLookupHeaderRow)(this.Rows.Find(new object[] {
                            SrchID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                stpSmLookupHeaderDataTable cln = ((stpSmLookupHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new stpSmLookupHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSrchID = base.Columns["SrchID"];
                this.columnDescr = base.Columns["Descr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSrchID = new global::System.Data.DataColumn("SrchID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrchID);
                this.columnDescr = new global::System.Data.DataColumn("Descr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSrchID}, true));
                this.columnSrchID.AllowDBNull = false;
                this.columnSrchID.Unique = true;
                this.columnSrchID.MaxLength = 30;
                this.columnDescr.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderRow NewstpSmLookupHeaderRow() {
                return ((stpSmLookupHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new stpSmLookupHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(stpSmLookupHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.stpSmLookupHeaderRowChanged != null)) {
                    this.stpSmLookupHeaderRowChanged(this, new stpSmLookupHeaderRowChangeEvent(((stpSmLookupHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.stpSmLookupHeaderRowChanging != null)) {
                    this.stpSmLookupHeaderRowChanging(this, new stpSmLookupHeaderRowChangeEvent(((stpSmLookupHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.stpSmLookupHeaderRowDeleted != null)) {
                    this.stpSmLookupHeaderRowDeleted(this, new stpSmLookupHeaderRowChangeEvent(((stpSmLookupHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.stpSmLookupHeaderRowDeleting != null)) {
                    this.stpSmLookupHeaderRowDeleting(this, new stpSmLookupHeaderRowChangeEvent(((stpSmLookupHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovestpSmLookupHeaderRow(stpSmLookupHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "stpSmLookupHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblInPRPReturnsHistDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnReturnAuthNum;
            
            private global::System.Data.DataColumn columnCustID;
            
            private global::System.Data.DataColumn columnCustName;
            
            private global::System.Data.DataColumn columnContact;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnRegion;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnInvoiceNum;
            
            private global::System.Data.DataColumn columnPackingListNum;
            
            private global::System.Data.DataColumn columnReplOrder;
            
            private global::System.Data.DataColumn columnMemo;
            
            private global::System.Data.DataColumn columnCompletedYn;
            
            private global::System.Data.DataColumn columnCreationDate;
            
            private global::System.Data.DataColumn columnWrkStnID;
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnTransId;
            
            private global::System.Data.DataColumn columnEntryNum;
            
            private global::System.Data.DataColumn columnReturningItemID;
            
            private global::System.Data.DataColumn columnReturningQty;
            
            private global::System.Data.DataColumn columnReturningCode;
            
            private global::System.Data.DataColumn columnExplanationText;
            
            private global::System.Data.DataColumn columnRestockingFeeYn;
            
            private global::System.Data.DataColumn columnReturnedPartId;
            
            private global::System.Data.DataColumn columnReturnedCode;
            
            private global::System.Data.DataColumn columnReturnedQty;
            
            private global::System.Data.DataColumn columnReceivedDate;
            
            private global::System.Data.DataColumn columnReceivedBy;
            
            private global::System.Data.DataColumn columnTotalPrice;
            
            private global::System.Data.DataColumn columnDeterminationCode;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnRestockingFee;
            
            private global::System.Data.DataColumn columnRep1Id;
            
            private global::System.Data.DataColumn columnCreationDate1;
            
            private global::System.Data.DataColumn columnReceivedDate1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistDataTable() {
                this.TableName = "tblInPRPReturnsHist";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsHistDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblInPRPReturnsHistDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnAuthNumColumn {
                get {
                    return this.columnReturnAuthNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustIDColumn {
                get {
                    return this.columnCustID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustNameColumn {
                get {
                    return this.columnCustName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactColumn {
                get {
                    return this.columnContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegionColumn {
                get {
                    return this.columnRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvoiceNumColumn {
                get {
                    return this.columnInvoiceNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PackingListNumColumn {
                get {
                    return this.columnPackingListNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReplOrderColumn {
                get {
                    return this.columnReplOrder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MemoColumn {
                get {
                    return this.columnMemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompletedYnColumn {
                get {
                    return this.columnCompletedYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDateColumn {
                get {
                    return this.columnCreationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WrkStnIDColumn {
                get {
                    return this.columnWrkStnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransIdColumn {
                get {
                    return this.columnTransId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryNumColumn {
                get {
                    return this.columnEntryNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningItemIDColumn {
                get {
                    return this.columnReturningItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningQtyColumn {
                get {
                    return this.columnReturningQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningCodeColumn {
                get {
                    return this.columnReturningCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExplanationTextColumn {
                get {
                    return this.columnExplanationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestockingFeeYnColumn {
                get {
                    return this.columnRestockingFeeYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedPartIdColumn {
                get {
                    return this.columnReturnedPartId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedCodeColumn {
                get {
                    return this.columnReturnedCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedQtyColumn {
                get {
                    return this.columnReturnedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedDateColumn {
                get {
                    return this.columnReceivedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedByColumn {
                get {
                    return this.columnReceivedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPriceColumn {
                get {
                    return this.columnTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeterminationCodeColumn {
                get {
                    return this.columnDeterminationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestockingFeeColumn {
                get {
                    return this.columnRestockingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rep1IdColumn {
                get {
                    return this.columnRep1Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreationDate1Column {
                get {
                    return this.columnCreationDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedDate1Column {
                get {
                    return this.columnReceivedDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistRow this[int index] {
                get {
                    return ((tblInPRPReturnsHistRow)(this.Rows[index]));
                }
            }
            
            public event tblInPRPReturnsHistRowChangeEventHandler tblInPRPReturnsHistRowChanging;
            
            public event tblInPRPReturnsHistRowChangeEventHandler tblInPRPReturnsHistRowChanged;
            
            public event tblInPRPReturnsHistRowChangeEventHandler tblInPRPReturnsHistRowDeleting;
            
            public event tblInPRPReturnsHistRowChangeEventHandler tblInPRPReturnsHistRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblInPRPReturnsHistRow(tblInPRPReturnsHistRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistRow AddtblInPRPReturnsHistRow(
                        string ReturnAuthNum, 
                        string CustID, 
                        string CustName, 
                        string Contact, 
                        string Phone, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string Region, 
                        string Country, 
                        string Zip, 
                        string InvoiceNum, 
                        string PackingListNum, 
                        string ReplOrder, 
                        string Memo, 
                        bool CompletedYn, 
                        string CreationDate, 
                        string WrkStnID, 
                        string UserID, 
                        string TransId, 
                        short EntryNum, 
                        string ReturningItemID, 
                        decimal ReturningQty, 
                        short ReturningCode, 
                        string ExplanationText, 
                        bool RestockingFeeYn, 
                        string ReturnedPartId, 
                        short ReturnedCode, 
                        decimal ReturnedQty, 
                        string ReceivedDate, 
                        string ReceivedBy, 
                        decimal TotalPrice, 
                        short DeterminationCode, 
                        decimal UnitPrice, 
                        decimal SubTotal, 
                        decimal RestockingFee, 
                        string Rep1Id, 
                        System.DateTime CreationDate1, 
                        System.DateTime ReceivedDate1) {
                tblInPRPReturnsHistRow rowtblInPRPReturnsHistRow = ((tblInPRPReturnsHistRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReturnAuthNum,
                        CustID,
                        CustName,
                        Contact,
                        Phone,
                        Address1,
                        Address2,
                        City,
                        Region,
                        Country,
                        Zip,
                        InvoiceNum,
                        PackingListNum,
                        ReplOrder,
                        Memo,
                        CompletedYn,
                        CreationDate,
                        WrkStnID,
                        UserID,
                        TransId,
                        EntryNum,
                        ReturningItemID,
                        ReturningQty,
                        ReturningCode,
                        ExplanationText,
                        RestockingFeeYn,
                        ReturnedPartId,
                        ReturnedCode,
                        ReturnedQty,
                        ReceivedDate,
                        ReceivedBy,
                        TotalPrice,
                        DeterminationCode,
                        UnitPrice,
                        SubTotal,
                        RestockingFee,
                        Rep1Id,
                        CreationDate1,
                        ReceivedDate1};
                rowtblInPRPReturnsHistRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblInPRPReturnsHistRow);
                return rowtblInPRPReturnsHistRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistRow FindByReturnAuthNumEntryNum(string ReturnAuthNum, short EntryNum) {
                return ((tblInPRPReturnsHistRow)(this.Rows.Find(new object[] {
                            ReturnAuthNum,
                            EntryNum})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblInPRPReturnsHistDataTable cln = ((tblInPRPReturnsHistDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblInPRPReturnsHistDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReturnAuthNum = base.Columns["ReturnAuthNum"];
                this.columnCustID = base.Columns["CustID"];
                this.columnCustName = base.Columns["CustName"];
                this.columnContact = base.Columns["Contact"];
                this.columnPhone = base.Columns["Phone"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnRegion = base.Columns["Region"];
                this.columnCountry = base.Columns["Country"];
                this.columnZip = base.Columns["Zip"];
                this.columnInvoiceNum = base.Columns["InvoiceNum"];
                this.columnPackingListNum = base.Columns["PackingListNum"];
                this.columnReplOrder = base.Columns["ReplOrder"];
                this.columnMemo = base.Columns["Memo"];
                this.columnCompletedYn = base.Columns["CompletedYn"];
                this.columnCreationDate = base.Columns["CreationDate"];
                this.columnWrkStnID = base.Columns["WrkStnID"];
                this.columnUserID = base.Columns["UserID"];
                this.columnTransId = base.Columns["TransId"];
                this.columnEntryNum = base.Columns["EntryNum"];
                this.columnReturningItemID = base.Columns["ReturningItemID"];
                this.columnReturningQty = base.Columns["ReturningQty"];
                this.columnReturningCode = base.Columns["ReturningCode"];
                this.columnExplanationText = base.Columns["ExplanationText"];
                this.columnRestockingFeeYn = base.Columns["RestockingFeeYn"];
                this.columnReturnedPartId = base.Columns["ReturnedPartId"];
                this.columnReturnedCode = base.Columns["ReturnedCode"];
                this.columnReturnedQty = base.Columns["ReturnedQty"];
                this.columnReceivedDate = base.Columns["ReceivedDate"];
                this.columnReceivedBy = base.Columns["ReceivedBy"];
                this.columnTotalPrice = base.Columns["TotalPrice"];
                this.columnDeterminationCode = base.Columns["DeterminationCode"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnRestockingFee = base.Columns["RestockingFee"];
                this.columnRep1Id = base.Columns["Rep1Id"];
                this.columnCreationDate1 = base.Columns["CreationDate1"];
                this.columnReceivedDate1 = base.Columns["ReceivedDate1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReturnAuthNum = new global::System.Data.DataColumn("ReturnAuthNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAuthNum);
                this.columnCustID = new global::System.Data.DataColumn("CustID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustID);
                this.columnCustName = new global::System.Data.DataColumn("CustName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustName);
                this.columnContact = new global::System.Data.DataColumn("Contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContact);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnRegion = new global::System.Data.DataColumn("Region", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegion);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnInvoiceNum = new global::System.Data.DataColumn("InvoiceNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNum);
                this.columnPackingListNum = new global::System.Data.DataColumn("PackingListNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingListNum);
                this.columnReplOrder = new global::System.Data.DataColumn("ReplOrder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReplOrder);
                this.columnMemo = new global::System.Data.DataColumn("Memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemo);
                this.columnCompletedYn = new global::System.Data.DataColumn("CompletedYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompletedYn);
                this.columnCreationDate = new global::System.Data.DataColumn("CreationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate);
                this.columnWrkStnID = new global::System.Data.DataColumn("WrkStnID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrkStnID);
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnTransId = new global::System.Data.DataColumn("TransId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransId);
                this.columnEntryNum = new global::System.Data.DataColumn("EntryNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryNum);
                this.columnReturningItemID = new global::System.Data.DataColumn("ReturningItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningItemID);
                this.columnReturningQty = new global::System.Data.DataColumn("ReturningQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningQty);
                this.columnReturningCode = new global::System.Data.DataColumn("ReturningCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningCode);
                this.columnExplanationText = new global::System.Data.DataColumn("ExplanationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExplanationText);
                this.columnRestockingFeeYn = new global::System.Data.DataColumn("RestockingFeeYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestockingFeeYn);
                this.columnReturnedPartId = new global::System.Data.DataColumn("ReturnedPartId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedPartId);
                this.columnReturnedCode = new global::System.Data.DataColumn("ReturnedCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedCode);
                this.columnReturnedQty = new global::System.Data.DataColumn("ReturnedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedQty);
                this.columnReceivedDate = new global::System.Data.DataColumn("ReceivedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedDate);
                this.columnReceivedBy = new global::System.Data.DataColumn("ReceivedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedBy);
                this.columnTotalPrice = new global::System.Data.DataColumn("TotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrice);
                this.columnDeterminationCode = new global::System.Data.DataColumn("DeterminationCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeterminationCode);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnRestockingFee = new global::System.Data.DataColumn("RestockingFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestockingFee);
                this.columnRep1Id = new global::System.Data.DataColumn("Rep1Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRep1Id);
                this.columnCreationDate1 = new global::System.Data.DataColumn("CreationDate1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreationDate1);
                this.columnReceivedDate1 = new global::System.Data.DataColumn("ReceivedDate1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedDate1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReturnAuthNum,
                                this.columnEntryNum}, true));
                this.columnReturnAuthNum.AllowDBNull = false;
                this.columnReturnAuthNum.MaxLength = 8;
                this.columnCustID.AllowDBNull = false;
                this.columnCustID.MaxLength = 10;
                this.columnCustName.AllowDBNull = false;
                this.columnCustName.MaxLength = 30;
                this.columnContact.AllowDBNull = false;
                this.columnContact.MaxLength = 30;
                this.columnPhone.AllowDBNull = false;
                this.columnPhone.MaxLength = 15;
                this.columnAddress1.AllowDBNull = false;
                this.columnAddress1.MaxLength = 30;
                this.columnAddress2.MaxLength = 30;
                this.columnCity.AllowDBNull = false;
                this.columnCity.MaxLength = 30;
                this.columnRegion.AllowDBNull = false;
                this.columnRegion.MaxLength = 10;
                this.columnCountry.MaxLength = 30;
                this.columnZip.AllowDBNull = false;
                this.columnZip.MaxLength = 10;
                this.columnInvoiceNum.AllowDBNull = false;
                this.columnInvoiceNum.MaxLength = 15;
                this.columnPackingListNum.MaxLength = 15;
                this.columnReplOrder.MaxLength = 50;
                this.columnMemo.MaxLength = 500;
                this.columnCreationDate.MaxLength = 10;
                this.columnWrkStnID.AllowDBNull = false;
                this.columnWrkStnID.MaxLength = 20;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.MaxLength = 20;
                this.columnTransId.MaxLength = 8;
                this.columnEntryNum.AllowDBNull = false;
                this.columnReturningItemID.MaxLength = 24;
                this.columnExplanationText.MaxLength = 500;
                this.columnReturnedPartId.MaxLength = 24;
                this.columnReceivedDate.MaxLength = 50;
                this.columnReceivedBy.MaxLength = 50;
                this.columnRep1Id.MaxLength = 3;
                this.columnCreationDate1.Caption = "CreationDate";
                this.columnReceivedDate1.Caption = "ReceivedDate";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistRow NewtblInPRPReturnsHistRow() {
                return ((tblInPRPReturnsHistRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblInPRPReturnsHistRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblInPRPReturnsHistRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblInPRPReturnsHistRowChanged != null)) {
                    this.tblInPRPReturnsHistRowChanged(this, new tblInPRPReturnsHistRowChangeEvent(((tblInPRPReturnsHistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblInPRPReturnsHistRowChanging != null)) {
                    this.tblInPRPReturnsHistRowChanging(this, new tblInPRPReturnsHistRowChangeEvent(((tblInPRPReturnsHistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblInPRPReturnsHistRowDeleted != null)) {
                    this.tblInPRPReturnsHistRowDeleted(this, new tblInPRPReturnsHistRowChangeEvent(((tblInPRPReturnsHistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblInPRPReturnsHistRowDeleting != null)) {
                    this.tblInPRPReturnsHistRowDeleting(this, new tblInPRPReturnsHistRowChangeEvent(((tblInPRPReturnsHistRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblInPRPReturnsHistRow(tblInPRPReturnsHistRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblInPRPReturnsHistDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblInPRPReturnsDetailDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEntryNum;
            
            private global::System.Data.DataColumn columnReturningItemID;
            
            private global::System.Data.DataColumn columnReturningQty;
            
            private global::System.Data.DataColumn columnReturningCode;
            
            private global::System.Data.DataColumn columnExplanationText;
            
            private global::System.Data.DataColumn columnRestockingFeeYn;
            
            private global::System.Data.DataColumn columnReturnedPartId;
            
            private global::System.Data.DataColumn columnReturnedCode;
            
            private global::System.Data.DataColumn columnReturnedQty;
            
            private global::System.Data.DataColumn columnReceivedDate;
            
            private global::System.Data.DataColumn columnReceivedBy;
            
            private global::System.Data.DataColumn columnUnitPrice;
            
            private global::System.Data.DataColumn columnTotalPrice;
            
            private global::System.Data.DataColumn columnDeterminationCode;
            
            private global::System.Data.DataColumn columnSubTotal;
            
            private global::System.Data.DataColumn columnRestockingFee;
            
            private global::System.Data.DataColumn columnSolution;
            
            private global::System.Data.DataColumn columnReturnAuthNum;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailDataTable() {
                this.TableName = "tblInPRPReturnsDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblInPRPReturnsDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EntryNumColumn {
                get {
                    return this.columnEntryNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningItemIDColumn {
                get {
                    return this.columnReturningItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningQtyColumn {
                get {
                    return this.columnReturningQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturningCodeColumn {
                get {
                    return this.columnReturningCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExplanationTextColumn {
                get {
                    return this.columnExplanationText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestockingFeeYnColumn {
                get {
                    return this.columnRestockingFeeYn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedPartIdColumn {
                get {
                    return this.columnReturnedPartId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedCodeColumn {
                get {
                    return this.columnReturnedCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnedQtyColumn {
                get {
                    return this.columnReturnedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedDateColumn {
                get {
                    return this.columnReceivedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivedByColumn {
                get {
                    return this.columnReceivedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UnitPriceColumn {
                get {
                    return this.columnUnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPriceColumn {
                get {
                    return this.columnTotalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeterminationCodeColumn {
                get {
                    return this.columnDeterminationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubTotalColumn {
                get {
                    return this.columnSubTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RestockingFeeColumn {
                get {
                    return this.columnRestockingFee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SolutionColumn {
                get {
                    return this.columnSolution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnAuthNumColumn {
                get {
                    return this.columnReturnAuthNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailRow this[int index] {
                get {
                    return ((tblInPRPReturnsDetailRow)(this.Rows[index]));
                }
            }
            
            public event tblInPRPReturnsDetailRowChangeEventHandler tblInPRPReturnsDetailRowChanging;
            
            public event tblInPRPReturnsDetailRowChangeEventHandler tblInPRPReturnsDetailRowChanged;
            
            public event tblInPRPReturnsDetailRowChangeEventHandler tblInPRPReturnsDetailRowDeleting;
            
            public event tblInPRPReturnsDetailRowChangeEventHandler tblInPRPReturnsDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblInPRPReturnsDetailRow(tblInPRPReturnsDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailRow AddtblInPRPReturnsDetailRow(
                        short EntryNum, 
                        string ReturningItemID, 
                        decimal ReturningQty, 
                        short ReturningCode, 
                        string ExplanationText, 
                        bool RestockingFeeYn, 
                        string ReturnedPartId, 
                        short ReturnedCode, 
                        decimal ReturnedQty, 
                        System.DateTime ReceivedDate, 
                        string ReceivedBy, 
                        decimal UnitPrice, 
                        decimal TotalPrice, 
                        short DeterminationCode, 
                        decimal SubTotal, 
                        decimal RestockingFee, 
                        string Solution, 
                        string ReturnAuthNum) {
                tblInPRPReturnsDetailRow rowtblInPRPReturnsDetailRow = ((tblInPRPReturnsDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EntryNum,
                        ReturningItemID,
                        ReturningQty,
                        ReturningCode,
                        ExplanationText,
                        RestockingFeeYn,
                        ReturnedPartId,
                        ReturnedCode,
                        ReturnedQty,
                        ReceivedDate,
                        ReceivedBy,
                        UnitPrice,
                        TotalPrice,
                        DeterminationCode,
                        SubTotal,
                        RestockingFee,
                        Solution,
                        ReturnAuthNum};
                rowtblInPRPReturnsDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblInPRPReturnsDetailRow);
                return rowtblInPRPReturnsDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailRow FindByReturnAuthNumEntryNum(string ReturnAuthNum, short EntryNum) {
                return ((tblInPRPReturnsDetailRow)(this.Rows.Find(new object[] {
                            ReturnAuthNum,
                            EntryNum})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblInPRPReturnsDetailDataTable cln = ((tblInPRPReturnsDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblInPRPReturnsDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEntryNum = base.Columns["EntryNum"];
                this.columnReturningItemID = base.Columns["ReturningItemID"];
                this.columnReturningQty = base.Columns["ReturningQty"];
                this.columnReturningCode = base.Columns["ReturningCode"];
                this.columnExplanationText = base.Columns["ExplanationText"];
                this.columnRestockingFeeYn = base.Columns["RestockingFeeYn"];
                this.columnReturnedPartId = base.Columns["ReturnedPartId"];
                this.columnReturnedCode = base.Columns["ReturnedCode"];
                this.columnReturnedQty = base.Columns["ReturnedQty"];
                this.columnReceivedDate = base.Columns["ReceivedDate"];
                this.columnReceivedBy = base.Columns["ReceivedBy"];
                this.columnUnitPrice = base.Columns["UnitPrice"];
                this.columnTotalPrice = base.Columns["TotalPrice"];
                this.columnDeterminationCode = base.Columns["DeterminationCode"];
                this.columnSubTotal = base.Columns["SubTotal"];
                this.columnRestockingFee = base.Columns["RestockingFee"];
                this.columnSolution = base.Columns["Solution"];
                this.columnReturnAuthNum = base.Columns["ReturnAuthNum"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEntryNum = new global::System.Data.DataColumn("EntryNum", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntryNum);
                this.columnReturningItemID = new global::System.Data.DataColumn("ReturningItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningItemID);
                this.columnReturningQty = new global::System.Data.DataColumn("ReturningQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningQty);
                this.columnReturningCode = new global::System.Data.DataColumn("ReturningCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturningCode);
                this.columnExplanationText = new global::System.Data.DataColumn("ExplanationText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExplanationText);
                this.columnRestockingFeeYn = new global::System.Data.DataColumn("RestockingFeeYn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestockingFeeYn);
                this.columnReturnedPartId = new global::System.Data.DataColumn("ReturnedPartId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedPartId);
                this.columnReturnedCode = new global::System.Data.DataColumn("ReturnedCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedCode);
                this.columnReturnedQty = new global::System.Data.DataColumn("ReturnedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnedQty);
                this.columnReceivedDate = new global::System.Data.DataColumn("ReceivedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedDate);
                this.columnReceivedBy = new global::System.Data.DataColumn("ReceivedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivedBy);
                this.columnUnitPrice = new global::System.Data.DataColumn("UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPrice);
                this.columnTotalPrice = new global::System.Data.DataColumn("TotalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPrice);
                this.columnDeterminationCode = new global::System.Data.DataColumn("DeterminationCode", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeterminationCode);
                this.columnSubTotal = new global::System.Data.DataColumn("SubTotal", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubTotal);
                this.columnRestockingFee = new global::System.Data.DataColumn("RestockingFee", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRestockingFee);
                this.columnSolution = new global::System.Data.DataColumn("Solution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSolution);
                this.columnReturnAuthNum = new global::System.Data.DataColumn("ReturnAuthNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnAuthNum);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReturnAuthNum,
                                this.columnEntryNum}, true));
                this.columnEntryNum.AllowDBNull = false;
                this.columnReturningItemID.MaxLength = 24;
                this.columnExplanationText.MaxLength = 250;
                this.columnReturnedPartId.MaxLength = 24;
                this.columnReceivedBy.MaxLength = 50;
                this.columnSolution.MaxLength = 2147483647;
                this.columnReturnAuthNum.AllowDBNull = false;
                this.columnReturnAuthNum.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailRow NewtblInPRPReturnsDetailRow() {
                return ((tblInPRPReturnsDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblInPRPReturnsDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblInPRPReturnsDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblInPRPReturnsDetailRowChanged != null)) {
                    this.tblInPRPReturnsDetailRowChanged(this, new tblInPRPReturnsDetailRowChangeEvent(((tblInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblInPRPReturnsDetailRowChanging != null)) {
                    this.tblInPRPReturnsDetailRowChanging(this, new tblInPRPReturnsDetailRowChangeEvent(((tblInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblInPRPReturnsDetailRowDeleted != null)) {
                    this.tblInPRPReturnsDetailRowDeleted(this, new tblInPRPReturnsDetailRowChangeEvent(((tblInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblInPRPReturnsDetailRowDeleting != null)) {
                    this.tblInPRPReturnsDetailRowDeleting(this, new tblInPRPReturnsDetailRowChangeEvent(((tblInPRPReturnsDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblInPRPReturnsDetailRow(tblInPRPReturnsDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                PRPDataSet1 ds = new PRPDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblInPRPReturnsDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lkpArCustRow : global::System.Data.DataRow {
            
            private lkpArCustDataTable tablelkpArCust;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpArCustRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelkpArCust = ((lkpArCustDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustId {
                get {
                    return ((string)(this[this.tablelkpArCust.CustIdColumn]));
                }
                set {
                    this[this.tablelkpArCust.CustIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustName {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CustNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustName\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CustNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.ContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contact\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addr1 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.Addr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addr1\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.Addr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addr2 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.Addr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addr2\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.Addr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.RegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Region\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostalCode {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.PostalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostalCode\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.PostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipZone {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.ShipZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipZone\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.ShipZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IntlPrefix {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.IntlPrefixColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntlPrefix\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.IntlPrefixColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Attn {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.AttnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Attn\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.AttnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClassId {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.ClassIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClassId\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.ClassIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesRepId1 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.SalesRepId1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesRepId1\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.SalesRepId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesRepId2 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.SalesRepId2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesRepId2\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.SalesRepId2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rep1PctInvc {
                get {
                    try {
                        return ((decimal)(this[this.tablelkpArCust.Rep1PctInvcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1PctInvc\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.Rep1PctInvcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rep2PctInvc {
                get {
                    try {
                        return ((decimal)(this[this.tablelkpArCust.Rep2PctInvcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep2PctInvc\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.Rep2PctInvcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TermsCode {
                get {
                    return ((string)(this[this.tablelkpArCust.TermsCodeColumn]));
                }
                set {
                    this[this.tablelkpArCust.TermsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PmtMethod {
                get {
                    return ((string)(this[this.tablelkpArCust.PmtMethodColumn]));
                }
                set {
                    this[this.tablelkpArCust.PmtMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CcNum {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CcNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CcNum\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CcNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CcName {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CcNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CcName\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CcNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CcExpire {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablelkpArCust.CcExpireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CcExpire\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CcExpireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GroupCode {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.GroupCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupCode\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.GroupCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte StmtInvcCode {
                get {
                    try {
                        return ((byte)(this[this.tablelkpArCust.StmtInvcCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StmtInvcCode\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.StmtInvcCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte AcctType {
                get {
                    try {
                        return ((byte)(this[this.tablelkpArCust.AcctTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcctType\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.AcctTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriceCode {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.PriceCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceCode\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.PriceCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistCode {
                get {
                    return ((string)(this[this.tablelkpArCust.DistCodeColumn]));
                }
                set {
                    this[this.tablelkpArCust.DistCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CalcFinch {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.CalcFinchColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalcFinch\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CalcFinchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditLimit {
                get {
                    try {
                        return ((decimal)(this[this.tablelkpArCust.CreditLimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditLimit\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CreditLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CreditHold {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.CreditHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditHold\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CreditHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PartialShip {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.PartialShipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartialShip\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.PartialShipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AutoCreditHold {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.AutoCreditHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AutoCreditHold\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.AutoCreditHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxLocId {
                get {
                    return ((string)(this[this.tablelkpArCust.TaxLocIdColumn]));
                }
                set {
                    this[this.tablelkpArCust.TaxLocIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Taxable {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.TaxableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Taxable\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.TaxableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxExemptId {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.TaxExemptIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxExemptId\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.TaxExemptIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyId {
                get {
                    return ((string)(this[this.tablelkpArCust.CurrencyIdColumn]));
                }
                set {
                    this[this.tablelkpArCust.CurrencyIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TerrId {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.TerrIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TerrId\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.TerrIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CcCompYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.CcCompYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CcCompYn\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CcCompYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustLevel {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CustLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustLevel\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CustLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Internet {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.InternetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Internet\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.InternetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NewFinch {
                get {
                    return ((decimal)(this[this.tablelkpArCust.NewFinchColumn]));
                }
                set {
                    this[this.tablelkpArCust.NewFinchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnpaidFinch {
                get {
                    return ((decimal)(this[this.tablelkpArCust.UnpaidFinchColumn]));
                }
                set {
                    this[this.tablelkpArCust.UnpaidFinchColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurAmtDue {
                get {
                    return ((decimal)(this[this.tablelkpArCust.CurAmtDueColumn]));
                }
                set {
                    this[this.tablelkpArCust.CurAmtDueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CurAmtDueFgn {
                get {
                    return ((decimal)(this[this.tablelkpArCust.CurAmtDueFgnColumn]));
                }
                set {
                    this[this.tablelkpArCust.CurAmtDueFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalAge1 {
                get {
                    return ((decimal)(this[this.tablelkpArCust.BalAge1Column]));
                }
                set {
                    this[this.tablelkpArCust.BalAge1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalAge2 {
                get {
                    return ((decimal)(this[this.tablelkpArCust.BalAge2Column]));
                }
                set {
                    this[this.tablelkpArCust.BalAge2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalAge3 {
                get {
                    return ((decimal)(this[this.tablelkpArCust.BalAge3Column]));
                }
                set {
                    this[this.tablelkpArCust.BalAge3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BalAge4 {
                get {
                    return ((decimal)(this[this.tablelkpArCust.BalAge4Column]));
                }
                set {
                    this[this.tablelkpArCust.BalAge4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnapplCredit {
                get {
                    return ((decimal)(this[this.tablelkpArCust.UnapplCreditColumn]));
                }
                set {
                    this[this.tablelkpArCust.UnapplCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FirstSaleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablelkpArCust.FirstSaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstSaleDate\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.FirstSaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastSaleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablelkpArCust.LastSaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSaleDate\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.LastSaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastSaleAmt {
                get {
                    return ((decimal)(this[this.tablelkpArCust.LastSaleAmtColumn]));
                }
                set {
                    this[this.tablelkpArCust.LastSaleAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastSaleInvc {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.LastSaleInvcColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSaleInvc\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.LastSaleInvcColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastPayDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablelkpArCust.LastPayDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPayDate\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.LastPayDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LastPayAmt {
                get {
                    return ((decimal)(this[this.tablelkpArCust.LastPayAmtColumn]));
                }
                set {
                    this[this.tablelkpArCust.LastPayAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastPayCheckNum {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.LastPayCheckNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastPayCheckNum\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.LastPayCheckNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HighBal {
                get {
                    return ((decimal)(this[this.tablelkpArCust.HighBalColumn]));
                }
                set {
                    this[this.tablelkpArCust.HighBalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditStatus {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.CreditStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditStatus\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.CreditStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool WebDisplInQtyYn {
                get {
                    return ((bool)(this[this.tablelkpArCust.WebDisplInQtyYnColumn]));
                }
                set {
                    this[this.tablelkpArCust.WebDisplInQtyYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] ts {
                get {
                    try {
                        return ((byte[])(this[this.tablelkpArCust.tsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ts\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.tsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllowCharge {
                get {
                    return ((bool)(this[this.tablelkpArCust.AllowChargeColumn]));
                }
                set {
                    this[this.tablelkpArCust.AllowChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VCode {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.VCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VCode\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.VCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EmailStmntYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.EmailStmntYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmailStmntYn\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.EmailStmntYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool FaxStmntYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.FaxStmntYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaxStmntYn\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.FaxStmntYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld1 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld1\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld2 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld2\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld3 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld3\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld4 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld4\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld5 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld5\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld6 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld6\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld7 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld7\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld8 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld8\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld9 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld9\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld10 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld10\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld11 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld11\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld12 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld12\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld13 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld13\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld14 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld14\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld15 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld15\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld16 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld16\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld17 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld17\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld18 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld18\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld19 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld19\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsrFld20 {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.UsrFld20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsrFld20\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.UsrFld20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SchoolYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.SchoolYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolYn\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.SchoolYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InactiveYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpArCust.InactiveYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InactiveYn\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.InactiveYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tablelkpArCust.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'lkpArCust\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArCust.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustNameNull() {
                return this.IsNull(this.tablelkpArCust.CustNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustNameNull() {
                this[this.tablelkpArCust.CustNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNull() {
                return this.IsNull(this.tablelkpArCust.ContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNull() {
                this[this.tablelkpArCust.ContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddr1Null() {
                return this.IsNull(this.tablelkpArCust.Addr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddr1Null() {
                this[this.tablelkpArCust.Addr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddr2Null() {
                return this.IsNull(this.tablelkpArCust.Addr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddr2Null() {
                this[this.tablelkpArCust.Addr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablelkpArCust.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablelkpArCust.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegionNull() {
                return this.IsNull(this.tablelkpArCust.RegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegionNull() {
                this[this.tablelkpArCust.RegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tablelkpArCust.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tablelkpArCust.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostalCodeNull() {
                return this.IsNull(this.tablelkpArCust.PostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostalCodeNull() {
                this[this.tablelkpArCust.PostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipZoneNull() {
                return this.IsNull(this.tablelkpArCust.ShipZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipZoneNull() {
                this[this.tablelkpArCust.ShipZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIntlPrefixNull() {
                return this.IsNull(this.tablelkpArCust.IntlPrefixColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIntlPrefixNull() {
                this[this.tablelkpArCust.IntlPrefixColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tablelkpArCust.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tablelkpArCust.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tablelkpArCust.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tablelkpArCust.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttnNull() {
                return this.IsNull(this.tablelkpArCust.AttnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttnNull() {
                this[this.tablelkpArCust.AttnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassIdNull() {
                return this.IsNull(this.tablelkpArCust.ClassIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassIdNull() {
                this[this.tablelkpArCust.ClassIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRepId1Null() {
                return this.IsNull(this.tablelkpArCust.SalesRepId1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRepId1Null() {
                this[this.tablelkpArCust.SalesRepId1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesRepId2Null() {
                return this.IsNull(this.tablelkpArCust.SalesRepId2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesRepId2Null() {
                this[this.tablelkpArCust.SalesRepId2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1PctInvcNull() {
                return this.IsNull(this.tablelkpArCust.Rep1PctInvcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1PctInvcNull() {
                this[this.tablelkpArCust.Rep1PctInvcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep2PctInvcNull() {
                return this.IsNull(this.tablelkpArCust.Rep2PctInvcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep2PctInvcNull() {
                this[this.tablelkpArCust.Rep2PctInvcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCcNumNull() {
                return this.IsNull(this.tablelkpArCust.CcNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCcNumNull() {
                this[this.tablelkpArCust.CcNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCcNameNull() {
                return this.IsNull(this.tablelkpArCust.CcNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCcNameNull() {
                this[this.tablelkpArCust.CcNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCcExpireNull() {
                return this.IsNull(this.tablelkpArCust.CcExpireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCcExpireNull() {
                this[this.tablelkpArCust.CcExpireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGroupCodeNull() {
                return this.IsNull(this.tablelkpArCust.GroupCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGroupCodeNull() {
                this[this.tablelkpArCust.GroupCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStmtInvcCodeNull() {
                return this.IsNull(this.tablelkpArCust.StmtInvcCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStmtInvcCodeNull() {
                this[this.tablelkpArCust.StmtInvcCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcctTypeNull() {
                return this.IsNull(this.tablelkpArCust.AcctTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcctTypeNull() {
                this[this.tablelkpArCust.AcctTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceCodeNull() {
                return this.IsNull(this.tablelkpArCust.PriceCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceCodeNull() {
                this[this.tablelkpArCust.PriceCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCalcFinchNull() {
                return this.IsNull(this.tablelkpArCust.CalcFinchColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCalcFinchNull() {
                this[this.tablelkpArCust.CalcFinchColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditLimitNull() {
                return this.IsNull(this.tablelkpArCust.CreditLimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditLimitNull() {
                this[this.tablelkpArCust.CreditLimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditHoldNull() {
                return this.IsNull(this.tablelkpArCust.CreditHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditHoldNull() {
                this[this.tablelkpArCust.CreditHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartialShipNull() {
                return this.IsNull(this.tablelkpArCust.PartialShipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartialShipNull() {
                this[this.tablelkpArCust.PartialShipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAutoCreditHoldNull() {
                return this.IsNull(this.tablelkpArCust.AutoCreditHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAutoCreditHoldNull() {
                this[this.tablelkpArCust.AutoCreditHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableNull() {
                return this.IsNull(this.tablelkpArCust.TaxableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableNull() {
                this[this.tablelkpArCust.TaxableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxExemptIdNull() {
                return this.IsNull(this.tablelkpArCust.TaxExemptIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxExemptIdNull() {
                this[this.tablelkpArCust.TaxExemptIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTerrIdNull() {
                return this.IsNull(this.tablelkpArCust.TerrIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTerrIdNull() {
                this[this.tablelkpArCust.TerrIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCcCompYnNull() {
                return this.IsNull(this.tablelkpArCust.CcCompYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCcCompYnNull() {
                this[this.tablelkpArCust.CcCompYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustLevelNull() {
                return this.IsNull(this.tablelkpArCust.CustLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustLevelNull() {
                this[this.tablelkpArCust.CustLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tablelkpArCust.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tablelkpArCust.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInternetNull() {
                return this.IsNull(this.tablelkpArCust.InternetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInternetNull() {
                this[this.tablelkpArCust.InternetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstSaleDateNull() {
                return this.IsNull(this.tablelkpArCust.FirstSaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstSaleDateNull() {
                this[this.tablelkpArCust.FirstSaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastSaleDateNull() {
                return this.IsNull(this.tablelkpArCust.LastSaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastSaleDateNull() {
                this[this.tablelkpArCust.LastSaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastSaleInvcNull() {
                return this.IsNull(this.tablelkpArCust.LastSaleInvcColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastSaleInvcNull() {
                this[this.tablelkpArCust.LastSaleInvcColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPayDateNull() {
                return this.IsNull(this.tablelkpArCust.LastPayDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPayDateNull() {
                this[this.tablelkpArCust.LastPayDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastPayCheckNumNull() {
                return this.IsNull(this.tablelkpArCust.LastPayCheckNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastPayCheckNumNull() {
                this[this.tablelkpArCust.LastPayCheckNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditStatusNull() {
                return this.IsNull(this.tablelkpArCust.CreditStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditStatusNull() {
                this[this.tablelkpArCust.CreditStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstsNull() {
                return this.IsNull(this.tablelkpArCust.tsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettsNull() {
                this[this.tablelkpArCust.tsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVCodeNull() {
                return this.IsNull(this.tablelkpArCust.VCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVCodeNull() {
                this[this.tablelkpArCust.VCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailStmntYnNull() {
                return this.IsNull(this.tablelkpArCust.EmailStmntYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailStmntYnNull() {
                this[this.tablelkpArCust.EmailStmntYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxStmntYnNull() {
                return this.IsNull(this.tablelkpArCust.FaxStmntYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxStmntYnNull() {
                this[this.tablelkpArCust.FaxStmntYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld1Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld1Null() {
                this[this.tablelkpArCust.UsrFld1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld2Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld2Null() {
                this[this.tablelkpArCust.UsrFld2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld3Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld3Null() {
                this[this.tablelkpArCust.UsrFld3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld4Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld4Null() {
                this[this.tablelkpArCust.UsrFld4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld5Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld5Null() {
                this[this.tablelkpArCust.UsrFld5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld6Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld6Null() {
                this[this.tablelkpArCust.UsrFld6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld7Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld7Null() {
                this[this.tablelkpArCust.UsrFld7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld8Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld8Null() {
                this[this.tablelkpArCust.UsrFld8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld9Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld9Null() {
                this[this.tablelkpArCust.UsrFld9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld10Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld10Null() {
                this[this.tablelkpArCust.UsrFld10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld11Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld11Null() {
                this[this.tablelkpArCust.UsrFld11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld12Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld12Null() {
                this[this.tablelkpArCust.UsrFld12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld13Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld13Null() {
                this[this.tablelkpArCust.UsrFld13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld14Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld14Null() {
                this[this.tablelkpArCust.UsrFld14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld15Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld15Null() {
                this[this.tablelkpArCust.UsrFld15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld16Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld16Null() {
                this[this.tablelkpArCust.UsrFld16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld17Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld17Null() {
                this[this.tablelkpArCust.UsrFld17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld18Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld18Null() {
                this[this.tablelkpArCust.UsrFld18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld19Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld19Null() {
                this[this.tablelkpArCust.UsrFld19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsrFld20Null() {
                return this.IsNull(this.tablelkpArCust.UsrFld20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsrFld20Null() {
                this[this.tablelkpArCust.UsrFld20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolYnNull() {
                return this.IsNull(this.tablelkpArCust.SchoolYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolYnNull() {
                this[this.tablelkpArCust.SchoolYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInactiveYnNull() {
                return this.IsNull(this.tablelkpArCust.InactiveYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInactiveYnNull() {
                this[this.tablelkpArCust.InactiveYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tablelkpArCust.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tablelkpArCust.MobileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class qryArPRPHistoryRow : global::System.Data.DataRow {
            
            private qryArPRPHistoryDataTable tableqryArPRPHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal qryArPRPHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableqryArPRPHistory = ((qryArPRPHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostRun {
                get {
                    return ((string)(this[this.tableqryArPRPHistory.PostRunColumn]));
                }
                set {
                    this[this.tableqryArPRPHistory.PostRunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransId {
                get {
                    return ((string)(this[this.tableqryArPRPHistory.TransIdColumn]));
                }
                set {
                    this[this.tableqryArPRPHistory.TransIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short TransType {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.TransTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransType\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TransTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.BatchIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.BatchIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CustIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CustIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToID {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToID\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToName {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToName\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToAddr1 {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToAddr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToAddr1\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToAddr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToAddr2 {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToAddr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToAddr2\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToAddr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToCity {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToCity\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToRegion {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToRegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToRegion\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToRegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToCountry {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToCountry\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipToPostalCode {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipToPostalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipToPostalCode\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipToPostalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipVia {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipViaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipVia\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipViaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TermsCode {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TermsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TermsCode\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TermsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TaxableYN {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.TaxableYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxableYN\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxableYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvcNum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.InvcNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvcNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.InvcNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CredMemNum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CredMemNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CredMemNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CredMemNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackNum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PackNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PackNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhseId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.WhseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WhseId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.WhseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime OrderDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.OrderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.OrderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShipNum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ShipNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ShipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.ShipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InvcDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.InvcDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvcDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.InvcDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rep1Id {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.Rep1IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1Id\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.Rep1IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rep1Pct {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.Rep1PctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1Pct\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.Rep1PctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rep2Id {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.Rep2IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep2Id\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.Rep2IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rep2Pct {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.Rep2PctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep2Pct\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.Rep2PctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool TaxOnFreight {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.TaxOnFreightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxOnFreight\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxOnFreightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TaxClassFreight {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.TaxClassFreightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClassFreight\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxClassFreightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TaxClassMisc {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.TaxClassMiscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClassMisc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxClassMiscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PostDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.PostDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PostDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PostDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FiscalYear {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.FiscalYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiscalYear\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.FiscalYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short GLPeriod {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.GLPeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLPeriod\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.GLPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxGrpID {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TaxGrpIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxGrpID\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxGrpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxSubtotal {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TaxSubtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxSubtotal\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxSubtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NonTaxSubtotal {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.NonTaxSubtotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonTaxSubtotal\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.NonTaxSubtotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesTax {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.SalesTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTax\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.SalesTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Freight {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.FreightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Freight\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.FreightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Misc {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.MiscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.MiscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotCost {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TotCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotCost\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TotCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotPmtAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TotPmtAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotPmtAmt\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TotPmtAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxSubtotalFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TaxSubtotalFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxSubtotalFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxSubtotalFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NonTaxSubtotalFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.NonTaxSubtotalFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonTaxSubtotalFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.NonTaxSubtotalFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalesTaxFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.SalesTaxFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesTaxFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.SalesTaxFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FreightFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.FreightFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreightFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.FreightFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MiscFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.MiscFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiscFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.MiscFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotCostFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TotCostFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotCostFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TotCostFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotPmtAmtFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TotPmtAmtFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotPmtAmtFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TotPmtAmtFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte PrintStatus {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.PrintStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintStatus\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PrintStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustPONum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CustPONumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustPONum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CustPONumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DistCode {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.DistCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistCode\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DistCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyID {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExchRate {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ExchRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchRate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ExchRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DiscDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.DiscDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscDueDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DiscDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NetDueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.NetDueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetDueDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.NetDueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.DiscAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscAmt\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DiscAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscAmtFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.DiscAmtFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscAmtFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DiscAmtFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short SumHistPeriod {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.SumHistPeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SumHistPeriod\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.SumHistPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmtAdj {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TaxAmtAdjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmtAdj\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxAmtAdjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TaxAmtAdjFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.TaxAmtAdjFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAmtAdjFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxAmtAdjFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TaxAdj {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.TaxAdjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxAdj\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxAdjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxLocAdj {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TaxLocAdjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxLocAdj\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxLocAdjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TaxClassAdj {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.TaxClassAdjColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClassAdj\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaxClassAdjColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustLevel {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CustLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustLevel\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CustLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.PODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReqShipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.ReqShipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqShipDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ReqShipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickNum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PickNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PickNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Source {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.SourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Source\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.SourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillingPeriodFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.BillingPeriodFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingPeriodFrom\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.BillingPeriodFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PMTransType {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PMTransTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PMTransType\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PMTransTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjItem {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ProjItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjItem\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ProjItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BillingPeriodThru {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.BillingPeriodThruColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingPeriodThru\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.BillingPeriodThruColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BillingFormat {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.BillingFormatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillingFormat\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.BillingFormatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PickedBy {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PickedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PickedBy\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PickedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EnteredBy {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.EnteredByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnteredBy\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.EnteredByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PrntListPrice {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.PrntListPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrntListPrice\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PrntListPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReceivedBy {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.ReceivedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedBy\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ReceivedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PrintTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.PrintTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrintTime\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PrintTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustomsPercent {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.CustomsPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomsPercent\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CustomsPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Pieces {
                get {
                    try {
                        return ((short)(this[this.tableqryArPRPHistory.PiecesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pieces\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PiecesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Uom {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.UomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Uom\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Weight {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool DropShipment {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.DropShipmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DropShipment\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DropShipmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODOption {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CODOptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODOption\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CODOptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODType {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CODTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CODType\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CODTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UPSProcessed {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.UPSProcessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPSProcessed\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UPSProcessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ShipWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ShipWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShipWeight\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ShipWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustType {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CustTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustType\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CustTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PostRun1 {
                get {
                    return ((string)(this[this.tableqryArPRPHistory.PostRun1Column]));
                }
                set {
                    this[this.tableqryArPRPHistory.PostRun1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransID1 {
                get {
                    return ((string)(this[this.tableqryArPRPHistory.TransID1Column]));
                }
                set {
                    this[this.tableqryArPRPHistory.TransID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EntryNum {
                get {
                    return ((short)(this[this.tableqryArPRPHistory.EntryNumColumn]));
                }
                set {
                    this[this.tableqryArPRPHistory.EntryNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte ItemJob {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.ItemJobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemJob\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ItemJobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhseId1 {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.WhseId1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WhseId1\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.WhseId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PartIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PartIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.JobIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.JobIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhaseId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PhaseIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PhaseIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool JobCompleteYN {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.JobCompleteYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCompleteYN\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.JobCompleteYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte PartType {
                get {
                    try {
                        return ((byte)(this[this.tableqryArPRPHistory.PartTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartType\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PartTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Desc {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Desc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AddnlDesc {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.AddnlDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AddnlDesc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.AddnlDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CatId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.CatIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CatId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CatIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte TaxClass {
                get {
                    return ((byte)(this[this.tableqryArPRPHistory.TaxClassColumn]));
                }
                set {
                    this[this.tableqryArPRPHistory.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AcctCode {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.AcctCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AcctCode\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.AcctCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLAcctSales {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.GLAcctSalesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLAcctSales\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.GLAcctSalesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLAcctCOGS {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.GLAcctCOGSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLAcctCOGS\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.GLAcctCOGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GLAcctInv {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.GLAcctInvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GLAcctInv\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.GLAcctInvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QtyOrdSell {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.QtyOrdSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyOrdSell\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.QtyOrdSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitsSell {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.UnitsSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitsSell\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UnitsSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitsBase {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.UnitsBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitsBase\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UnitsBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QtyShipSell {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.QtyShipSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyShipSell\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.QtyShipSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QtyShipBase {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.QtyShipBaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyShipBase\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.QtyShipBaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QtyBackordSell {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.QtyBackordSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyBackordSell\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.QtyBackordSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriceID {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PriceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceID\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PriceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPriceSell {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.UnitPriceSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceSell\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UnitPriceSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPriceSellFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.UnitPriceSellFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPriceSellFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UnitPriceSellFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitCostSell {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.UnitCostSellColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCostSell\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UnitCostSellColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitCostSellFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.UnitCostSellFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCostSellFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.UnitCostSellFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PriceExt {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.PriceExtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceExt\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PriceExtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PriceExtFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.PriceExtFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceExtFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PriceExtFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostExtFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.CostExtFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostExtFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CostExtFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CostExt {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.CostExtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CostExt\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CostExtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PromoID {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PromoIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PromoID\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PromoIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ActShipDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.ActShipDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActShipDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ActShipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EffectiveRate {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.EffectiveRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EffectiveRate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.EffectiveRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OrigOrderQty {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.OrigOrderQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrigOrderQty\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.OrigOrderQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BinNum {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.BinNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BinNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.BinNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ConversionFactor {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ConversionFactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConversionFactor\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ConversionFactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool LottedYN {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.LottedYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LottedYN\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.LottedYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool InItemYN {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.InItemYNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InItemYN\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.InItemYNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int HistSeqNum {
                get {
                    try {
                        return ((int)(this[this.tableqryArPRPHistory.HistSeqNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistSeqNum\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.HistSeqNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtCost {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ExtCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtCost\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ExtCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtFinalInc {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ExtFinalIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtFinalInc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ExtFinalIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtOrigInc {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ExtOrigIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtOrigInc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ExtOrigIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransHistId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TransHistIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransHistId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TransHistIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaskId {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TaskIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaskId\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaskIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhaseName {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.PhaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhaseName\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.PhaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProjName {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.ProjNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjName\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ProjNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtFinalIncFgn {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.ExtFinalIncFgnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtFinalIncFgn\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ExtFinalIncFgnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaskName {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TaskNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaskName\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TaskNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Kit {
                get {
                    try {
                        return ((bool)(this[this.tableqryArPRPHistory.KitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Kit\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.KitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReqShipDate1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.ReqShipDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqShipDate1\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.ReqShipDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CommAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.CommAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommAmt\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CommAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CommPaidDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableqryArPRPHistory.CommPaidDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommPaidDate\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.CommPaidDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscPerc {
                get {
                    try {
                        return ((decimal)(this[this.tableqryArPRPHistory.DiscPercColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscPerc\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.DiscPercColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TariffCode {
                get {
                    try {
                        return ((string)(this[this.tableqryArPRPHistory.TariffCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TariffCode\' in table \'qryArPRPHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableqryArPRPHistory.TariffCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransTypeNull() {
                return this.IsNull(this.tableqryArPRPHistory.TransTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransTypeNull() {
                this[this.tableqryArPRPHistory.TransTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.BatchIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchIdNull() {
                this[this.tableqryArPRPHistory.BatchIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.CustIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustIdNull() {
                this[this.tableqryArPRPHistory.CustIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToIDNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToIDNull() {
                this[this.tableqryArPRPHistory.ShipToIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToNameNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToNameNull() {
                this[this.tableqryArPRPHistory.ShipToNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToAddr1Null() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToAddr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToAddr1Null() {
                this[this.tableqryArPRPHistory.ShipToAddr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToAddr2Null() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToAddr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToAddr2Null() {
                this[this.tableqryArPRPHistory.ShipToAddr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToCityNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToCityNull() {
                this[this.tableqryArPRPHistory.ShipToCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToRegionNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToRegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToRegionNull() {
                this[this.tableqryArPRPHistory.ShipToRegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToCountryNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToCountryNull() {
                this[this.tableqryArPRPHistory.ShipToCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipToPostalCodeNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipToPostalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipToPostalCodeNull() {
                this[this.tableqryArPRPHistory.ShipToPostalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipViaNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipViaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipViaNull() {
                this[this.tableqryArPRPHistory.ShipViaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTermsCodeNull() {
                return this.IsNull(this.tableqryArPRPHistory.TermsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTermsCodeNull() {
                this[this.tableqryArPRPHistory.TermsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxableYNNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxableYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxableYNNull() {
                this[this.tableqryArPRPHistory.TaxableYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvcNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.InvcNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvcNumNull() {
                this[this.tableqryArPRPHistory.InvcNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCredMemNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.CredMemNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCredMemNumNull() {
                this[this.tableqryArPRPHistory.CredMemNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.PackNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackNumNull() {
                this[this.tableqryArPRPHistory.PackNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhseIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.WhseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhseIdNull() {
                this[this.tableqryArPRPHistory.WhseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.OrderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderDateNull() {
                this[this.tableqryArPRPHistory.OrderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipNumNull() {
                this[this.tableqryArPRPHistory.ShipNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipDateNull() {
                this[this.tableqryArPRPHistory.ShipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvcDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.InvcDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvcDateNull() {
                this[this.tableqryArPRPHistory.InvcDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1IdNull() {
                return this.IsNull(this.tableqryArPRPHistory.Rep1IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1IdNull() {
                this[this.tableqryArPRPHistory.Rep1IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1PctNull() {
                return this.IsNull(this.tableqryArPRPHistory.Rep1PctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1PctNull() {
                this[this.tableqryArPRPHistory.Rep1PctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep2IdNull() {
                return this.IsNull(this.tableqryArPRPHistory.Rep2IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep2IdNull() {
                this[this.tableqryArPRPHistory.Rep2IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep2PctNull() {
                return this.IsNull(this.tableqryArPRPHistory.Rep2PctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep2PctNull() {
                this[this.tableqryArPRPHistory.Rep2PctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxOnFreightNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxOnFreightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxOnFreightNull() {
                this[this.tableqryArPRPHistory.TaxOnFreightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassFreightNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxClassFreightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassFreightNull() {
                this[this.tableqryArPRPHistory.TaxClassFreightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassMiscNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxClassMiscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassMiscNull() {
                this[this.tableqryArPRPHistory.TaxClassMiscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPostDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.PostDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPostDateNull() {
                this[this.tableqryArPRPHistory.PostDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFiscalYearNull() {
                return this.IsNull(this.tableqryArPRPHistory.FiscalYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFiscalYearNull() {
                this[this.tableqryArPRPHistory.FiscalYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLPeriodNull() {
                return this.IsNull(this.tableqryArPRPHistory.GLPeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLPeriodNull() {
                this[this.tableqryArPRPHistory.GLPeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxGrpIDNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxGrpIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxGrpIDNull() {
                this[this.tableqryArPRPHistory.TaxGrpIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxSubtotalNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxSubtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxSubtotalNull() {
                this[this.tableqryArPRPHistory.TaxSubtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonTaxSubtotalNull() {
                return this.IsNull(this.tableqryArPRPHistory.NonTaxSubtotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonTaxSubtotalNull() {
                this[this.tableqryArPRPHistory.NonTaxSubtotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTaxNull() {
                return this.IsNull(this.tableqryArPRPHistory.SalesTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTaxNull() {
                this[this.tableqryArPRPHistory.SalesTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightNull() {
                return this.IsNull(this.tableqryArPRPHistory.FreightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightNull() {
                this[this.tableqryArPRPHistory.FreightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscNull() {
                return this.IsNull(this.tableqryArPRPHistory.MiscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscNull() {
                this[this.tableqryArPRPHistory.MiscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotCostNull() {
                return this.IsNull(this.tableqryArPRPHistory.TotCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotCostNull() {
                this[this.tableqryArPRPHistory.TotCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotPmtAmtNull() {
                return this.IsNull(this.tableqryArPRPHistory.TotPmtAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotPmtAmtNull() {
                this[this.tableqryArPRPHistory.TotPmtAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxSubtotalFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxSubtotalFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxSubtotalFgnNull() {
                this[this.tableqryArPRPHistory.TaxSubtotalFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNonTaxSubtotalFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.NonTaxSubtotalFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNonTaxSubtotalFgnNull() {
                this[this.tableqryArPRPHistory.NonTaxSubtotalFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesTaxFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.SalesTaxFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesTaxFgnNull() {
                this[this.tableqryArPRPHistory.SalesTaxFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFreightFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.FreightFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFreightFgnNull() {
                this[this.tableqryArPRPHistory.FreightFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMiscFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.MiscFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMiscFgnNull() {
                this[this.tableqryArPRPHistory.MiscFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotCostFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.TotCostFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotCostFgnNull() {
                this[this.tableqryArPRPHistory.TotCostFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotPmtAmtFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.TotPmtAmtFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotPmtAmtFgnNull() {
                this[this.tableqryArPRPHistory.TotPmtAmtFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintStatusNull() {
                return this.IsNull(this.tableqryArPRPHistory.PrintStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintStatusNull() {
                this[this.tableqryArPRPHistory.PrintStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustPONumNull() {
                return this.IsNull(this.tableqryArPRPHistory.CustPONumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustPONumNull() {
                this[this.tableqryArPRPHistory.CustPONumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistCodeNull() {
                return this.IsNull(this.tableqryArPRPHistory.DistCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistCodeNull() {
                this[this.tableqryArPRPHistory.DistCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tableqryArPRPHistory.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyIDNull() {
                this[this.tableqryArPRPHistory.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExchRateNull() {
                return this.IsNull(this.tableqryArPRPHistory.ExchRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExchRateNull() {
                this[this.tableqryArPRPHistory.ExchRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscDueDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.DiscDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscDueDateNull() {
                this[this.tableqryArPRPHistory.DiscDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetDueDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.NetDueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetDueDateNull() {
                this[this.tableqryArPRPHistory.NetDueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscAmtNull() {
                return this.IsNull(this.tableqryArPRPHistory.DiscAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscAmtNull() {
                this[this.tableqryArPRPHistory.DiscAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscAmtFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.DiscAmtFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscAmtFgnNull() {
                this[this.tableqryArPRPHistory.DiscAmtFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSumHistPeriodNull() {
                return this.IsNull(this.tableqryArPRPHistory.SumHistPeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSumHistPeriodNull() {
                this[this.tableqryArPRPHistory.SumHistPeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmtAdjNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxAmtAdjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmtAdjNull() {
                this[this.tableqryArPRPHistory.TaxAmtAdjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAmtAdjFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxAmtAdjFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAmtAdjFgnNull() {
                this[this.tableqryArPRPHistory.TaxAmtAdjFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxAdjNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxAdjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxAdjNull() {
                this[this.tableqryArPRPHistory.TaxAdjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxLocAdjNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxLocAdjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxLocAdjNull() {
                this[this.tableqryArPRPHistory.TaxLocAdjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassAdjNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaxClassAdjColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassAdjNull() {
                this[this.tableqryArPRPHistory.TaxClassAdjColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustLevelNull() {
                return this.IsNull(this.tableqryArPRPHistory.CustLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustLevelNull() {
                this[this.tableqryArPRPHistory.CustLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODateNull() {
                return this.IsNull(this.tableqryArPRPHistory.PODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODateNull() {
                this[this.tableqryArPRPHistory.PODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReqShipDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.ReqShipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReqShipDateNull() {
                this[this.tableqryArPRPHistory.ReqShipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.PickNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickNumNull() {
                this[this.tableqryArPRPHistory.PickNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceNull() {
                return this.IsNull(this.tableqryArPRPHistory.SourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceNull() {
                this[this.tableqryArPRPHistory.SourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingPeriodFromNull() {
                return this.IsNull(this.tableqryArPRPHistory.BillingPeriodFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingPeriodFromNull() {
                this[this.tableqryArPRPHistory.BillingPeriodFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMTransTypeNull() {
                return this.IsNull(this.tableqryArPRPHistory.PMTransTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMTransTypeNull() {
                this[this.tableqryArPRPHistory.PMTransTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjItemNull() {
                return this.IsNull(this.tableqryArPRPHistory.ProjItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjItemNull() {
                this[this.tableqryArPRPHistory.ProjItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingPeriodThruNull() {
                return this.IsNull(this.tableqryArPRPHistory.BillingPeriodThruColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingPeriodThruNull() {
                this[this.tableqryArPRPHistory.BillingPeriodThruColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBillingFormatNull() {
                return this.IsNull(this.tableqryArPRPHistory.BillingFormatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBillingFormatNull() {
                this[this.tableqryArPRPHistory.BillingFormatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPickedByNull() {
                return this.IsNull(this.tableqryArPRPHistory.PickedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPickedByNull() {
                this[this.tableqryArPRPHistory.PickedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnteredByNull() {
                return this.IsNull(this.tableqryArPRPHistory.EnteredByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnteredByNull() {
                this[this.tableqryArPRPHistory.EnteredByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrntListPriceNull() {
                return this.IsNull(this.tableqryArPRPHistory.PrntListPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrntListPriceNull() {
                this[this.tableqryArPRPHistory.PrntListPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedByNull() {
                return this.IsNull(this.tableqryArPRPHistory.ReceivedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedByNull() {
                this[this.tableqryArPRPHistory.ReceivedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrintTimeNull() {
                return this.IsNull(this.tableqryArPRPHistory.PrintTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrintTimeNull() {
                this[this.tableqryArPRPHistory.PrintTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomsPercentNull() {
                return this.IsNull(this.tableqryArPRPHistory.CustomsPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomsPercentNull() {
                this[this.tableqryArPRPHistory.CustomsPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPiecesNull() {
                return this.IsNull(this.tableqryArPRPHistory.PiecesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPiecesNull() {
                this[this.tableqryArPRPHistory.PiecesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUomNull() {
                return this.IsNull(this.tableqryArPRPHistory.UomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUomNull() {
                this[this.tableqryArPRPHistory.UomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeightNull() {
                return this.IsNull(this.tableqryArPRPHistory.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeightNull() {
                this[this.tableqryArPRPHistory.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDropShipmentNull() {
                return this.IsNull(this.tableqryArPRPHistory.DropShipmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDropShipmentNull() {
                this[this.tableqryArPRPHistory.DropShipmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODOptionNull() {
                return this.IsNull(this.tableqryArPRPHistory.CODOptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODOptionNull() {
                this[this.tableqryArPRPHistory.CODOptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCODTypeNull() {
                return this.IsNull(this.tableqryArPRPHistory.CODTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCODTypeNull() {
                this[this.tableqryArPRPHistory.CODTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPSProcessedNull() {
                return this.IsNull(this.tableqryArPRPHistory.UPSProcessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPSProcessedNull() {
                this[this.tableqryArPRPHistory.UPSProcessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShipWeightNull() {
                return this.IsNull(this.tableqryArPRPHistory.ShipWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShipWeightNull() {
                this[this.tableqryArPRPHistory.ShipWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustTypeNull() {
                return this.IsNull(this.tableqryArPRPHistory.CustTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustTypeNull() {
                this[this.tableqryArPRPHistory.CustTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemJobNull() {
                return this.IsNull(this.tableqryArPRPHistory.ItemJobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemJobNull() {
                this[this.tableqryArPRPHistory.ItemJobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhseId1Null() {
                return this.IsNull(this.tableqryArPRPHistory.WhseId1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhseId1Null() {
                this[this.tableqryArPRPHistory.WhseId1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.PartIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartIdNull() {
                this[this.tableqryArPRPHistory.PartIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.JobIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobIdNull() {
                this[this.tableqryArPRPHistory.JobIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhaseIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.PhaseIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhaseIdNull() {
                this[this.tableqryArPRPHistory.PhaseIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobCompleteYNNull() {
                return this.IsNull(this.tableqryArPRPHistory.JobCompleteYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobCompleteYNNull() {
                this[this.tableqryArPRPHistory.JobCompleteYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartTypeNull() {
                return this.IsNull(this.tableqryArPRPHistory.PartTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartTypeNull() {
                this[this.tableqryArPRPHistory.PartTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescNull() {
                return this.IsNull(this.tableqryArPRPHistory.DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescNull() {
                this[this.tableqryArPRPHistory.DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddnlDescNull() {
                return this.IsNull(this.tableqryArPRPHistory.AddnlDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddnlDescNull() {
                this[this.tableqryArPRPHistory.AddnlDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCatIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.CatIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCatIdNull() {
                this[this.tableqryArPRPHistory.CatIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAcctCodeNull() {
                return this.IsNull(this.tableqryArPRPHistory.AcctCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAcctCodeNull() {
                this[this.tableqryArPRPHistory.AcctCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLAcctSalesNull() {
                return this.IsNull(this.tableqryArPRPHistory.GLAcctSalesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLAcctSalesNull() {
                this[this.tableqryArPRPHistory.GLAcctSalesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLAcctCOGSNull() {
                return this.IsNull(this.tableqryArPRPHistory.GLAcctCOGSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLAcctCOGSNull() {
                this[this.tableqryArPRPHistory.GLAcctCOGSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGLAcctInvNull() {
                return this.IsNull(this.tableqryArPRPHistory.GLAcctInvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGLAcctInvNull() {
                this[this.tableqryArPRPHistory.GLAcctInvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyOrdSellNull() {
                return this.IsNull(this.tableqryArPRPHistory.QtyOrdSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyOrdSellNull() {
                this[this.tableqryArPRPHistory.QtyOrdSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsSellNull() {
                return this.IsNull(this.tableqryArPRPHistory.UnitsSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsSellNull() {
                this[this.tableqryArPRPHistory.UnitsSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitsBaseNull() {
                return this.IsNull(this.tableqryArPRPHistory.UnitsBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitsBaseNull() {
                this[this.tableqryArPRPHistory.UnitsBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyShipSellNull() {
                return this.IsNull(this.tableqryArPRPHistory.QtyShipSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyShipSellNull() {
                this[this.tableqryArPRPHistory.QtyShipSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyShipBaseNull() {
                return this.IsNull(this.tableqryArPRPHistory.QtyShipBaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyShipBaseNull() {
                this[this.tableqryArPRPHistory.QtyShipBaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyBackordSellNull() {
                return this.IsNull(this.tableqryArPRPHistory.QtyBackordSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyBackordSellNull() {
                this[this.tableqryArPRPHistory.QtyBackordSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceIDNull() {
                return this.IsNull(this.tableqryArPRPHistory.PriceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceIDNull() {
                this[this.tableqryArPRPHistory.PriceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceSellNull() {
                return this.IsNull(this.tableqryArPRPHistory.UnitPriceSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceSellNull() {
                this[this.tableqryArPRPHistory.UnitPriceSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceSellFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.UnitPriceSellFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceSellFgnNull() {
                this[this.tableqryArPRPHistory.UnitPriceSellFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitCostSellNull() {
                return this.IsNull(this.tableqryArPRPHistory.UnitCostSellColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitCostSellNull() {
                this[this.tableqryArPRPHistory.UnitCostSellColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitCostSellFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.UnitCostSellFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitCostSellFgnNull() {
                this[this.tableqryArPRPHistory.UnitCostSellFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceExtNull() {
                return this.IsNull(this.tableqryArPRPHistory.PriceExtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceExtNull() {
                this[this.tableqryArPRPHistory.PriceExtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceExtFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.PriceExtFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceExtFgnNull() {
                this[this.tableqryArPRPHistory.PriceExtFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostExtFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.CostExtFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostExtFgnNull() {
                this[this.tableqryArPRPHistory.CostExtFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCostExtNull() {
                return this.IsNull(this.tableqryArPRPHistory.CostExtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCostExtNull() {
                this[this.tableqryArPRPHistory.CostExtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPromoIDNull() {
                return this.IsNull(this.tableqryArPRPHistory.PromoIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPromoIDNull() {
                this[this.tableqryArPRPHistory.PromoIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActShipDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.ActShipDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActShipDateNull() {
                this[this.tableqryArPRPHistory.ActShipDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEffectiveRateNull() {
                return this.IsNull(this.tableqryArPRPHistory.EffectiveRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEffectiveRateNull() {
                this[this.tableqryArPRPHistory.EffectiveRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrigOrderQtyNull() {
                return this.IsNull(this.tableqryArPRPHistory.OrigOrderQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrigOrderQtyNull() {
                this[this.tableqryArPRPHistory.OrigOrderQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBinNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.BinNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBinNumNull() {
                this[this.tableqryArPRPHistory.BinNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConversionFactorNull() {
                return this.IsNull(this.tableqryArPRPHistory.ConversionFactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConversionFactorNull() {
                this[this.tableqryArPRPHistory.ConversionFactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLottedYNNull() {
                return this.IsNull(this.tableqryArPRPHistory.LottedYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLottedYNNull() {
                this[this.tableqryArPRPHistory.LottedYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInItemYNNull() {
                return this.IsNull(this.tableqryArPRPHistory.InItemYNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInItemYNNull() {
                this[this.tableqryArPRPHistory.InItemYNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistSeqNumNull() {
                return this.IsNull(this.tableqryArPRPHistory.HistSeqNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistSeqNumNull() {
                this[this.tableqryArPRPHistory.HistSeqNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtCostNull() {
                return this.IsNull(this.tableqryArPRPHistory.ExtCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtCostNull() {
                this[this.tableqryArPRPHistory.ExtCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtFinalIncNull() {
                return this.IsNull(this.tableqryArPRPHistory.ExtFinalIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtFinalIncNull() {
                this[this.tableqryArPRPHistory.ExtFinalIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtOrigIncNull() {
                return this.IsNull(this.tableqryArPRPHistory.ExtOrigIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtOrigIncNull() {
                this[this.tableqryArPRPHistory.ExtOrigIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransHistIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.TransHistIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransHistIdNull() {
                this[this.tableqryArPRPHistory.TransHistIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaskIdNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaskIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaskIdNull() {
                this[this.tableqryArPRPHistory.TaskIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhaseNameNull() {
                return this.IsNull(this.tableqryArPRPHistory.PhaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhaseNameNull() {
                this[this.tableqryArPRPHistory.PhaseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProjNameNull() {
                return this.IsNull(this.tableqryArPRPHistory.ProjNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProjNameNull() {
                this[this.tableqryArPRPHistory.ProjNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtFinalIncFgnNull() {
                return this.IsNull(this.tableqryArPRPHistory.ExtFinalIncFgnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtFinalIncFgnNull() {
                this[this.tableqryArPRPHistory.ExtFinalIncFgnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaskNameNull() {
                return this.IsNull(this.tableqryArPRPHistory.TaskNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaskNameNull() {
                this[this.tableqryArPRPHistory.TaskNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKitNull() {
                return this.IsNull(this.tableqryArPRPHistory.KitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKitNull() {
                this[this.tableqryArPRPHistory.KitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReqShipDate1Null() {
                return this.IsNull(this.tableqryArPRPHistory.ReqShipDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReqShipDate1Null() {
                this[this.tableqryArPRPHistory.ReqShipDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommAmtNull() {
                return this.IsNull(this.tableqryArPRPHistory.CommAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommAmtNull() {
                this[this.tableqryArPRPHistory.CommAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommPaidDateNull() {
                return this.IsNull(this.tableqryArPRPHistory.CommPaidDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommPaidDateNull() {
                this[this.tableqryArPRPHistory.CommPaidDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscPercNull() {
                return this.IsNull(this.tableqryArPRPHistory.DiscPercColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscPercNull() {
                this[this.tableqryArPRPHistory.DiscPercColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTariffCodeNull() {
                return this.IsNull(this.tableqryArPRPHistory.TariffCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTariffCodeNull() {
                this[this.tableqryArPRPHistory.TariffCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lkpArHistHeaderRow : global::System.Data.DataRow {
            
            private lkpArHistHeaderDataTable tablelkpArHistHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpArHistHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelkpArHistHeader = ((lkpArHistHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvcNum {
                get {
                    try {
                        return ((string)(this[this.tablelkpArHistHeader.InvcNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvcNum\' in table \'lkpArHistHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArHistHeader.InvcNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransId {
                get {
                    return ((string)(this[this.tablelkpArHistHeader.TransIdColumn]));
                }
                set {
                    this[this.tablelkpArHistHeader.TransIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rep1Id {
                get {
                    try {
                        return ((string)(this[this.tablelkpArHistHeader.Rep1IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1Id\' in table \'lkpArHistHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpArHistHeader.Rep1IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvcNumNull() {
                return this.IsNull(this.tablelkpArHistHeader.InvcNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvcNumNull() {
                this[this.tablelkpArHistHeader.InvcNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1IdNull() {
                return this.IsNull(this.tablelkpArHistHeader.Rep1IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1IdNull() {
                this[this.tablelkpArHistHeader.Rep1IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblInPRPReturnsCodesRow : global::System.Data.DataRow {
            
            private tblInPRPReturnsCodesDataTable tabletblInPRPReturnsCodes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsCodesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblInPRPReturnsCodes = ((tblInPRPReturnsCodesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CodeID {
                get {
                    return ((short)(this[this.tabletblInPRPReturnsCodes.CodeIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsCodes.CodeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnCodes {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsCodes.ReturnCodesColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsCodes.ReturnCodesColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblInPRPReturnsHeaderRow : global::System.Data.DataRow {
            
            private tblInPRPReturnsHeaderDataTable tabletblInPRPReturnsHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblInPRPReturnsHeader = ((tblInPRPReturnsHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustID {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.CustIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.CustIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustName {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.CustNameColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.CustNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.ContactColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.PhoneColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.Address1Column]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHeader.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.CityColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.RegionColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.ZipColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNum {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.InvoiceNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.InvoiceNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackingListNum {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHeader.PackingListNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingListNum\' in table \'tblInPRPReturnsHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.PackingListNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReplOrder {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHeader.ReplOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReplOrder\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.ReplOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHeader.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CompletedYn {
                get {
                    try {
                        return ((bool)(this[this.tabletblInPRPReturnsHeader.CompletedYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompletedYn\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.CompletedYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WrkStnID {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.WrkStnIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.WrkStnIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.UserIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransId {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHeader.TransIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransId\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.TransIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rep1Id {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHeader.Rep1IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1Id\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.Rep1IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnAuthNum {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHeader.ReturnAuthNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.ReturnAuthNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblInPRPReturnsHeader.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'tblInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHeader.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabletblInPRPReturnsHeader.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackingListNumNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.PackingListNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackingListNumNull() {
                this[this.tabletblInPRPReturnsHeader.PackingListNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReplOrderNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.ReplOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReplOrderNull() {
                this[this.tabletblInPRPReturnsHeader.ReplOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tabletblInPRPReturnsHeader.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompletedYnNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.CompletedYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompletedYnNull() {
                this[this.tabletblInPRPReturnsHeader.CompletedYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransIdNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.TransIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransIdNull() {
                this[this.tabletblInPRPReturnsHeader.TransIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1IdNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.Rep1IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1IdNull() {
                this[this.tabletblInPRPReturnsHeader.Rep1IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabletblInPRPReturnsHeader.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabletblInPRPReturnsHeader.CreationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lkpSmCompIDRow : global::System.Data.DataRow {
            
            private lkpSmCompIDDataTable tablelkpSmCompID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpSmCompIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelkpSmCompID = ((lkpSmCompIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompID {
                get {
                    return ((string)(this[this.tablelkpSmCompID.CompIDColumn]));
                }
                set {
                    this[this.tablelkpSmCompID.CompIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WhseID {
                get {
                    try {
                        return ((string)(this[this.tablelkpSmCompID.WhseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WhseID\' in table \'lkpSmCompID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpSmCompID.WhseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte PrecUCost {
                get {
                    try {
                        return ((byte)(this[this.tablelkpSmCompID.PrecUCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrecUCost\' in table \'lkpSmCompID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpSmCompID.PrecUCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte PrecUPrice {
                get {
                    try {
                        return ((byte)(this[this.tablelkpSmCompID.PrecUPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrecUPrice\' in table \'lkpSmCompID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpSmCompID.PrecUPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhseIDNull() {
                return this.IsNull(this.tablelkpSmCompID.WhseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhseIDNull() {
                this[this.tablelkpSmCompID.WhseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecUCostNull() {
                return this.IsNull(this.tablelkpSmCompID.PrecUCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecUCostNull() {
                this[this.tablelkpSmCompID.PrecUCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrecUPriceNull() {
                return this.IsNull(this.tablelkpSmCompID.PrecUPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrecUPriceNull() {
                this[this.tablelkpSmCompID.PrecUPriceColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lkpInItemRow : global::System.Data.DataRow {
            
            private lkpInItemDataTable tablelkpInItem;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpInItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelkpInItem = ((lkpInItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemId {
                get {
                    return ((string)(this[this.tablelkpInItem.ItemIdColumn]));
                }
                set {
                    this[this.tablelkpInItem.ItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descr {
                get {
                    try {
                        return ((string)(this[this.tablelkpInItem.DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descr\' in table \'lkpInItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInItem.DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PriceId {
                get {
                    try {
                        return ((string)(this[this.tablelkpInItem.PriceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceId\' in table \'lkpInItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInItem.PriceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UomDflt {
                get {
                    try {
                        return ((string)(this[this.tablelkpInItem.UomDfltColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UomDflt\' in table \'lkpInItem\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInItem.UomDfltColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescrNull() {
                return this.IsNull(this.tablelkpInItem.DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescrNull() {
                this[this.tablelkpInItem.DescrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceIdNull() {
                return this.IsNull(this.tablelkpInItem.PriceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceIdNull() {
                this[this.tablelkpInItem.PriceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUomDfltNull() {
                return this.IsNull(this.tablelkpInItem.UomDfltColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUomDfltNull() {
                this[this.tablelkpInItem.UomDfltColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblInPRPReturnsDetCdRow : global::System.Data.DataRow {
            
            private tblInPRPReturnsDetCdDataTable tabletblInPRPReturnsDetCd;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsDetCdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblInPRPReturnsDetCd = ((tblInPRPReturnsDetCdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DetID {
                get {
                    return ((short)(this[this.tabletblInPRPReturnsDetCd.DetIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsDetCd.DetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DetDescr {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsDetCd.DetDescrColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsDetCd.DetDescrColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lkpInPRPReturnsDetailRow : global::System.Data.DataRow {
            
            private lkpInPRPReturnsDetailDataTable tablelkpInPRPReturnsDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpInPRPReturnsDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelkpInPRPReturnsDetail = ((lkpInPRPReturnsDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ReturnAuthNum {
                get {
                    return ((long)(this[this.tablelkpInPRPReturnsDetail.ReturnAuthNumColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturnAuthNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EntryNum {
                get {
                    return ((short)(this[this.tablelkpInPRPReturnsDetail.EntryNumColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.EntryNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturningItemID {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsDetail.ReturningItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningItemID\' in table \'lkpInPRPReturnsDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturningItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReturningQty {
                get {
                    try {
                        return ((decimal)(this[this.tablelkpInPRPReturnsDetail.ReturningQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningQty\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturningQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturningCode {
                get {
                    try {
                        return ((short)(this[this.tablelkpInPRPReturnsDetail.ReturningCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningCode\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturningCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExplanationText {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsDetail.ExplanationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExplanationText\' in table \'lkpInPRPReturnsDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ExplanationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestockingFeeYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpInPRPReturnsDetail.RestockingFeeYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestockingFeeYn\' in table \'lkpInPRPReturnsDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.RestockingFeeYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnedPartId {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsDetail.ReturnedPartIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedPartId\' in table \'lkpInPRPReturnsDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturnedPartIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturnedCode {
                get {
                    try {
                        return ((short)(this[this.tablelkpInPRPReturnsDetail.ReturnedCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedCode\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturnedCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReturnedQty {
                get {
                    try {
                        return ((decimal)(this[this.tablelkpInPRPReturnsDetail.ReturnedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedQty\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.ReturnedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitPrice {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsDetail.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablelkpInPRPReturnsDetail.TotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPrice\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.TotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DeterminationCode {
                get {
                    try {
                        return ((short)(this[this.tablelkpInPRPReturnsDetail.DeterminationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeterminationCode\' in table \'lkpInPRPReturnsDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.DeterminationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubTotal {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsDetail.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RestockingFee {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsDetail.RestockingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestockingFee\' in table \'lkpInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsDetail.RestockingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningItemIDNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ReturningItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningItemIDNull() {
                this[this.tablelkpInPRPReturnsDetail.ReturningItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningQtyNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ReturningQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningQtyNull() {
                this[this.tablelkpInPRPReturnsDetail.ReturningQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningCodeNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ReturningCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningCodeNull() {
                this[this.tablelkpInPRPReturnsDetail.ReturningCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExplanationTextNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ExplanationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExplanationTextNull() {
                this[this.tablelkpInPRPReturnsDetail.ExplanationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestockingFeeYnNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.RestockingFeeYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestockingFeeYnNull() {
                this[this.tablelkpInPRPReturnsDetail.RestockingFeeYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedPartIdNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ReturnedPartIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedPartIdNull() {
                this[this.tablelkpInPRPReturnsDetail.ReturnedPartIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedCodeNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ReturnedCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedCodeNull() {
                this[this.tablelkpInPRPReturnsDetail.ReturnedCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedQtyNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.ReturnedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedQtyNull() {
                this[this.tablelkpInPRPReturnsDetail.ReturnedQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tablelkpInPRPReturnsDetail.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPriceNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.TotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPriceNull() {
                this[this.tablelkpInPRPReturnsDetail.TotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeterminationCodeNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.DeterminationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeterminationCodeNull() {
                this[this.tablelkpInPRPReturnsDetail.DeterminationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tablelkpInPRPReturnsDetail.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestockingFeeNull() {
                return this.IsNull(this.tablelkpInPRPReturnsDetail.RestockingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestockingFeeNull() {
                this[this.tablelkpInPRPReturnsDetail.RestockingFeeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class lkpInPRPReturnsHeaderRow : global::System.Data.DataRow {
            
            private lkpInPRPReturnsHeaderDataTable tablelkpInPRPReturnsHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal lkpInPRPReturnsHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablelkpInPRPReturnsHeader = ((lkpInPRPReturnsHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ReturnAuthNum {
                get {
                    return ((long)(this[this.tablelkpInPRPReturnsHeader.ReturnAuthNumColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.ReturnAuthNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustID {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.CustIDColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.CustIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustName {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.CustNameColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.CustNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.ContactColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.PhoneColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.Address1Column]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.CityColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.RegionColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.ZipColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNum {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.InvoiceNumColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.InvoiceNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackingListNum {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.PackingListNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingListNum\' in table \'lkpInPRPReturnsHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.PackingListNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReplOrder {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.ReplOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReplOrder\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.ReplOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CompletedYn {
                get {
                    try {
                        return ((bool)(this[this.tablelkpInPRPReturnsHeader.CompletedYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompletedYn\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.CompletedYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreationDate {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WrkStnID {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.WrkStnIDColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.WrkStnIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tablelkpInPRPReturnsHeader.UserIDColumn]));
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransId {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.TransIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransId\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.TransIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rep1Id {
                get {
                    try {
                        return ((string)(this[this.tablelkpInPRPReturnsHeader.Rep1IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1Id\' in table \'lkpInPRPReturnsHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablelkpInPRPReturnsHeader.Rep1IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tablelkpInPRPReturnsHeader.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tablelkpInPRPReturnsHeader.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackingListNumNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.PackingListNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackingListNumNull() {
                this[this.tablelkpInPRPReturnsHeader.PackingListNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReplOrderNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.ReplOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReplOrderNull() {
                this[this.tablelkpInPRPReturnsHeader.ReplOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tablelkpInPRPReturnsHeader.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompletedYnNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.CompletedYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompletedYnNull() {
                this[this.tablelkpInPRPReturnsHeader.CompletedYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tablelkpInPRPReturnsHeader.CreationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransIdNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.TransIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransIdNull() {
                this[this.tablelkpInPRPReturnsHeader.TransIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1IdNull() {
                return this.IsNull(this.tablelkpInPRPReturnsHeader.Rep1IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1IdNull() {
                this[this.tablelkpInPRPReturnsHeader.Rep1IdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stpSmLookupRow : global::System.Data.DataRow {
            
            private stpSmLookupDataTable tablestpSmLookup;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stpSmLookupRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestpSmLookup = ((stpSmLookupDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrchID {
                get {
                    return ((string)(this[this.tablestpSmLookup.SrchIDColumn]));
                }
                set {
                    this[this.tablestpSmLookup.SrchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FieldNo {
                get {
                    return ((short)(this[this.tablestpSmLookup.FieldNoColumn]));
                }
                set {
                    this[this.tablestpSmLookup.FieldNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FieldName {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.FieldNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldName\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.FieldNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte DataType {
                get {
                    try {
                        return ((byte)(this[this.tablestpSmLookup.DataTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataType\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.DataTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DataSize {
                get {
                    try {
                        return ((short)(this[this.tablestpSmLookup.DataSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataSize\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.DataSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Searched {
                get {
                    try {
                        return ((bool)(this[this.tablestpSmLookup.SearchedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Searched\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.SearchedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Enabled {
                get {
                    try {
                        return ((bool)(this[this.tablestpSmLookup.EnabledColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Enabled\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.EnabledColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableName {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.TableNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableName\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.TableNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TableNameCS {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.TableNameCSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TableNameCS\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.TableNameCSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OrderBy {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.OrderByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderBy\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.OrderByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Where {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.WhereColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Where\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.WhereColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FieldMask {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.FieldMaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FieldMask\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.FieldMaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fields {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.FieldsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fields\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.FieldsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RowList {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookup.RowListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RowList\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.RowListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool AllowFilter {
                get {
                    try {
                        return ((bool)(this[this.tablestpSmLookup.AllowFilterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllowFilter\' in table \'stpSmLookup\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookup.AllowFilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FieldSort {
                get {
                    return ((short)(this[this.tablestpSmLookup.FieldSortColumn]));
                }
                set {
                    this[this.tablestpSmLookup.FieldSortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldNameNull() {
                return this.IsNull(this.tablestpSmLookup.FieldNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldNameNull() {
                this[this.tablestpSmLookup.FieldNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablestpSmLookup.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tablestpSmLookup.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataTypeNull() {
                return this.IsNull(this.tablestpSmLookup.DataTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataTypeNull() {
                this[this.tablestpSmLookup.DataTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDataSizeNull() {
                return this.IsNull(this.tablestpSmLookup.DataSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDataSizeNull() {
                this[this.tablestpSmLookup.DataSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSearchedNull() {
                return this.IsNull(this.tablestpSmLookup.SearchedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSearchedNull() {
                this[this.tablestpSmLookup.SearchedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEnabledNull() {
                return this.IsNull(this.tablestpSmLookup.EnabledColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEnabledNull() {
                this[this.tablestpSmLookup.EnabledColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTableNameNull() {
                return this.IsNull(this.tablestpSmLookup.TableNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTableNameNull() {
                this[this.tablestpSmLookup.TableNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTableNameCSNull() {
                return this.IsNull(this.tablestpSmLookup.TableNameCSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTableNameCSNull() {
                this[this.tablestpSmLookup.TableNameCSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderByNull() {
                return this.IsNull(this.tablestpSmLookup.OrderByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderByNull() {
                this[this.tablestpSmLookup.OrderByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWhereNull() {
                return this.IsNull(this.tablestpSmLookup.WhereColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWhereNull() {
                this[this.tablestpSmLookup.WhereColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldMaskNull() {
                return this.IsNull(this.tablestpSmLookup.FieldMaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldMaskNull() {
                this[this.tablestpSmLookup.FieldMaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFieldsNull() {
                return this.IsNull(this.tablestpSmLookup.FieldsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFieldsNull() {
                this[this.tablestpSmLookup.FieldsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowListNull() {
                return this.IsNull(this.tablestpSmLookup.RowListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowListNull() {
                this[this.tablestpSmLookup.RowListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllowFilterNull() {
                return this.IsNull(this.tablestpSmLookup.AllowFilterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllowFilterNull() {
                this[this.tablestpSmLookup.AllowFilterColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class stpSmLookupHeaderRow : global::System.Data.DataRow {
            
            private stpSmLookupHeaderDataTable tablestpSmLookupHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal stpSmLookupHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablestpSmLookupHeader = ((stpSmLookupHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrchID {
                get {
                    return ((string)(this[this.tablestpSmLookupHeader.SrchIDColumn]));
                }
                set {
                    this[this.tablestpSmLookupHeader.SrchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descr {
                get {
                    try {
                        return ((string)(this[this.tablestpSmLookupHeader.DescrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descr\' in table \'stpSmLookupHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablestpSmLookupHeader.DescrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescrNull() {
                return this.IsNull(this.tablestpSmLookupHeader.DescrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescrNull() {
                this[this.tablestpSmLookupHeader.DescrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblInPRPReturnsHistRow : global::System.Data.DataRow {
            
            private tblInPRPReturnsHistDataTable tabletblInPRPReturnsHist;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsHistRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblInPRPReturnsHist = ((tblInPRPReturnsHistDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnAuthNum {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.ReturnAuthNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturnAuthNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustID {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.CustIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CustIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustName {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.CustNameColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CustNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Contact {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.ContactColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.PhoneColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.Address1Column]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.CityColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Region {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.RegionColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.RegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.ZipColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InvoiceNum {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.InvoiceNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.InvoiceNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackingListNum {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.PackingListNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PackingListNum\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.PackingListNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReplOrder {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.ReplOrderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReplOrder\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReplOrderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Memo {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.MemoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Memo\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.MemoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CompletedYn {
                get {
                    try {
                        return ((bool)(this[this.tabletblInPRPReturnsHist.CompletedYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompletedYn\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CompletedYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreationDate {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.CreationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CreationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WrkStnID {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.WrkStnIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.WrkStnIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserID {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsHist.UserIDColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransId {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.TransIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransId\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.TransIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EntryNum {
                get {
                    return ((short)(this[this.tabletblInPRPReturnsHist.EntryNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsHist.EntryNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturningItemID {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.ReturningItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningItemID\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturningItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReturningQty {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsHist.ReturningQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningQty\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturningQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturningCode {
                get {
                    try {
                        return ((short)(this[this.tabletblInPRPReturnsHist.ReturningCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningCode\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturningCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExplanationText {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.ExplanationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExplanationText\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ExplanationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestockingFeeYn {
                get {
                    try {
                        return ((bool)(this[this.tabletblInPRPReturnsHist.RestockingFeeYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestockingFeeYn\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.RestockingFeeYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnedPartId {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.ReturnedPartIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedPartId\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturnedPartIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturnedCode {
                get {
                    try {
                        return ((short)(this[this.tabletblInPRPReturnsHist.ReturnedCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedCode\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturnedCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReturnedQty {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsHist.ReturnedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedQty\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReturnedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedDate {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.ReceivedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedDate\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReceivedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedBy {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.ReceivedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedBy\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReceivedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsHist.TotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPrice\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.TotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DeterminationCode {
                get {
                    try {
                        return ((short)(this[this.tabletblInPRPReturnsHist.DeterminationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeterminationCode\' in table \'tblInPRPReturnsHist\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.DeterminationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsHist.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SubTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsHist.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RestockingFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsHist.RestockingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestockingFee\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.RestockingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rep1Id {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsHist.Rep1IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rep1Id\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.Rep1IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreationDate1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblInPRPReturnsHist.CreationDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreationDate1\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.CreationDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceivedDate1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblInPRPReturnsHist.ReceivedDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedDate1\' in table \'tblInPRPReturnsHist\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsHist.ReceivedDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabletblInPRPReturnsHist.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tabletblInPRPReturnsHist.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tabletblInPRPReturnsHist.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPackingListNumNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.PackingListNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPackingListNumNull() {
                this[this.tabletblInPRPReturnsHist.PackingListNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReplOrderNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReplOrderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReplOrderNull() {
                this[this.tabletblInPRPReturnsHist.ReplOrderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMemoNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.MemoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMemoNull() {
                this[this.tabletblInPRPReturnsHist.MemoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompletedYnNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.CompletedYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompletedYnNull() {
                this[this.tabletblInPRPReturnsHist.CompletedYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDateNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.CreationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDateNull() {
                this[this.tabletblInPRPReturnsHist.CreationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransIdNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.TransIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransIdNull() {
                this[this.tabletblInPRPReturnsHist.TransIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningItemIDNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReturningItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningItemIDNull() {
                this[this.tabletblInPRPReturnsHist.ReturningItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningQtyNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReturningQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningQtyNull() {
                this[this.tabletblInPRPReturnsHist.ReturningQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningCodeNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReturningCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningCodeNull() {
                this[this.tabletblInPRPReturnsHist.ReturningCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExplanationTextNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ExplanationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExplanationTextNull() {
                this[this.tabletblInPRPReturnsHist.ExplanationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestockingFeeYnNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.RestockingFeeYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestockingFeeYnNull() {
                this[this.tabletblInPRPReturnsHist.RestockingFeeYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedPartIdNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReturnedPartIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedPartIdNull() {
                this[this.tabletblInPRPReturnsHist.ReturnedPartIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedCodeNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReturnedCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedCodeNull() {
                this[this.tabletblInPRPReturnsHist.ReturnedCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedQtyNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReturnedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedQtyNull() {
                this[this.tabletblInPRPReturnsHist.ReturnedQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedDateNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReceivedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedDateNull() {
                this[this.tabletblInPRPReturnsHist.ReceivedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedByNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReceivedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedByNull() {
                this[this.tabletblInPRPReturnsHist.ReceivedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPriceNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.TotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPriceNull() {
                this[this.tabletblInPRPReturnsHist.TotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeterminationCodeNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.DeterminationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeterminationCodeNull() {
                this[this.tabletblInPRPReturnsHist.DeterminationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tabletblInPRPReturnsHist.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tabletblInPRPReturnsHist.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestockingFeeNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.RestockingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestockingFeeNull() {
                this[this.tabletblInPRPReturnsHist.RestockingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRep1IdNull() {
                return this.IsNull(this.tabletblInPRPReturnsHist.Rep1IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRep1IdNull() {
                this[this.tabletblInPRPReturnsHist.Rep1IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreationDate1Null() {
                return this.IsNull(this.tabletblInPRPReturnsHist.CreationDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreationDate1Null() {
                this[this.tabletblInPRPReturnsHist.CreationDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedDate1Null() {
                return this.IsNull(this.tabletblInPRPReturnsHist.ReceivedDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedDate1Null() {
                this[this.tabletblInPRPReturnsHist.ReceivedDate1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblInPRPReturnsDetailRow : global::System.Data.DataRow {
            
            private tblInPRPReturnsDetailDataTable tabletblInPRPReturnsDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblInPRPReturnsDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblInPRPReturnsDetail = ((tblInPRPReturnsDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short EntryNum {
                get {
                    return ((short)(this[this.tabletblInPRPReturnsDetail.EntryNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.EntryNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturningItemID {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsDetail.ReturningItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningItemID\' in table \'tblInPRPReturnsDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturningItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReturningQty {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsDetail.ReturningQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningQty\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturningQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturningCode {
                get {
                    try {
                        return ((short)(this[this.tabletblInPRPReturnsDetail.ReturningCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturningCode\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturningCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExplanationText {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsDetail.ExplanationTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExplanationText\' in table \'tblInPRPReturnsDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ExplanationTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool RestockingFeeYn {
                get {
                    try {
                        return ((bool)(this[this.tabletblInPRPReturnsDetail.RestockingFeeYnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestockingFeeYn\' in table \'tblInPRPReturnsDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.RestockingFeeYnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnedPartId {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsDetail.ReturnedPartIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedPartId\' in table \'tblInPRPReturnsDetail\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturnedPartIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturnedCode {
                get {
                    try {
                        return ((short)(this[this.tabletblInPRPReturnsDetail.ReturnedCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedCode\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturnedCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReturnedQty {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsDetail.ReturnedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnedQty\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturnedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceivedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblInPRPReturnsDetail.ReceivedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedDate\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReceivedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceivedBy {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsDetail.ReceivedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivedBy\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReceivedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal UnitPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsDetail.UnitPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPrice\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsDetail.TotalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPrice\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.TotalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DeterminationCode {
                get {
                    try {
                        return ((short)(this[this.tabletblInPRPReturnsDetail.DeterminationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeterminationCode\' in table \'tblInPRPReturnsDetail\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.DeterminationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SubTotal {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsDetail.SubTotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubTotal\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.SubTotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RestockingFee {
                get {
                    try {
                        return ((decimal)(this[this.tabletblInPRPReturnsDetail.RestockingFeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RestockingFee\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.RestockingFeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Solution {
                get {
                    try {
                        return ((string)(this[this.tabletblInPRPReturnsDetail.SolutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Solution\' in table \'tblInPRPReturnsDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.SolutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnAuthNum {
                get {
                    return ((string)(this[this.tabletblInPRPReturnsDetail.ReturnAuthNumColumn]));
                }
                set {
                    this[this.tabletblInPRPReturnsDetail.ReturnAuthNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningItemIDNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReturningItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningItemIDNull() {
                this[this.tabletblInPRPReturnsDetail.ReturningItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningQtyNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReturningQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningQtyNull() {
                this[this.tabletblInPRPReturnsDetail.ReturningQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturningCodeNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReturningCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturningCodeNull() {
                this[this.tabletblInPRPReturnsDetail.ReturningCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExplanationTextNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ExplanationTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExplanationTextNull() {
                this[this.tabletblInPRPReturnsDetail.ExplanationTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestockingFeeYnNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.RestockingFeeYnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestockingFeeYnNull() {
                this[this.tabletblInPRPReturnsDetail.RestockingFeeYnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedPartIdNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReturnedPartIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedPartIdNull() {
                this[this.tabletblInPRPReturnsDetail.ReturnedPartIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedCodeNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReturnedCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedCodeNull() {
                this[this.tabletblInPRPReturnsDetail.ReturnedCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnedQtyNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReturnedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnedQtyNull() {
                this[this.tabletblInPRPReturnsDetail.ReturnedQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedDateNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReceivedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedDateNull() {
                this[this.tabletblInPRPReturnsDetail.ReceivedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivedByNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.ReceivedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivedByNull() {
                this[this.tabletblInPRPReturnsDetail.ReceivedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnitPriceNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.UnitPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnitPriceNull() {
                this[this.tabletblInPRPReturnsDetail.UnitPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPriceNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.TotalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPriceNull() {
                this[this.tabletblInPRPReturnsDetail.TotalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeterminationCodeNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.DeterminationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeterminationCodeNull() {
                this[this.tabletblInPRPReturnsDetail.DeterminationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubTotalNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.SubTotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubTotalNull() {
                this[this.tabletblInPRPReturnsDetail.SubTotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRestockingFeeNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.RestockingFeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRestockingFeeNull() {
                this[this.tabletblInPRPReturnsDetail.RestockingFeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSolutionNull() {
                return this.IsNull(this.tabletblInPRPReturnsDetail.SolutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSolutionNull() {
                this[this.tabletblInPRPReturnsDetail.SolutionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lkpArCustRowChangeEvent : global::System.EventArgs {
            
            private lkpArCustRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustRowChangeEvent(lkpArCustRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArCustRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class qryArPRPHistoryRowChangeEvent : global::System.EventArgs {
            
            private qryArPRPHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public qryArPRPHistoryRowChangeEvent(qryArPRPHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public qryArPRPHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lkpArHistHeaderRowChangeEvent : global::System.EventArgs {
            
            private lkpArHistHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArHistHeaderRowChangeEvent(lkpArHistHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpArHistHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblInPRPReturnsCodesRowChangeEvent : global::System.EventArgs {
            
            private tblInPRPReturnsCodesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesRowChangeEvent(tblInPRPReturnsCodesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsCodesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblInPRPReturnsHeaderRowChangeEvent : global::System.EventArgs {
            
            private tblInPRPReturnsHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderRowChangeEvent(tblInPRPReturnsHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lkpSmCompIDRowChangeEvent : global::System.EventArgs {
            
            private lkpSmCompIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDRowChangeEvent(lkpSmCompIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpSmCompIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lkpInItemRowChangeEvent : global::System.EventArgs {
            
            private lkpInItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemRowChangeEvent(lkpInItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblInPRPReturnsDetCdRowChangeEvent : global::System.EventArgs {
            
            private tblInPRPReturnsDetCdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdRowChangeEvent(tblInPRPReturnsDetCdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetCdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lkpInPRPReturnsDetailRowChangeEvent : global::System.EventArgs {
            
            private lkpInPRPReturnsDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailRowChangeEvent(lkpInPRPReturnsDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class lkpInPRPReturnsHeaderRowChangeEvent : global::System.EventArgs {
            
            private lkpInPRPReturnsHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderRowChangeEvent(lkpInPRPReturnsHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public lkpInPRPReturnsHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stpSmLookupRowChangeEvent : global::System.EventArgs {
            
            private stpSmLookupRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupRowChangeEvent(stpSmLookupRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class stpSmLookupHeaderRowChangeEvent : global::System.EventArgs {
            
            private stpSmLookupHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderRowChangeEvent(stpSmLookupHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public stpSmLookupHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblInPRPReturnsHistRowChangeEvent : global::System.EventArgs {
            
            private tblInPRPReturnsHistRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistRowChangeEvent(tblInPRPReturnsHistRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsHistRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblInPRPReturnsDetailRowChangeEvent : global::System.EventArgs {
            
            private tblInPRPReturnsDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailRowChangeEvent(tblInPRPReturnsDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblInPRPReturnsDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Traverse_Returns_Addon.PRPDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lkpArCustTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lkpArCustTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lkpArCust";
            tableMapping.ColumnMappings.Add("CustId", "CustId");
            tableMapping.ColumnMappings.Add("CustName", "CustName");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Addr1", "Addr1");
            tableMapping.ColumnMappings.Add("Addr2", "Addr2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("PostalCode", "PostalCode");
            tableMapping.ColumnMappings.Add("ShipZone", "ShipZone");
            tableMapping.ColumnMappings.Add("IntlPrefix", "IntlPrefix");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("Attn", "Attn");
            tableMapping.ColumnMappings.Add("ClassId", "ClassId");
            tableMapping.ColumnMappings.Add("SalesRepId1", "SalesRepId1");
            tableMapping.ColumnMappings.Add("SalesRepId2", "SalesRepId2");
            tableMapping.ColumnMappings.Add("Rep1PctInvc", "Rep1PctInvc");
            tableMapping.ColumnMappings.Add("Rep2PctInvc", "Rep2PctInvc");
            tableMapping.ColumnMappings.Add("TermsCode", "TermsCode");
            tableMapping.ColumnMappings.Add("PmtMethod", "PmtMethod");
            tableMapping.ColumnMappings.Add("CcNum", "CcNum");
            tableMapping.ColumnMappings.Add("CcName", "CcName");
            tableMapping.ColumnMappings.Add("CcExpire", "CcExpire");
            tableMapping.ColumnMappings.Add("GroupCode", "GroupCode");
            tableMapping.ColumnMappings.Add("StmtInvcCode", "StmtInvcCode");
            tableMapping.ColumnMappings.Add("AcctType", "AcctType");
            tableMapping.ColumnMappings.Add("PriceCode", "PriceCode");
            tableMapping.ColumnMappings.Add("DistCode", "DistCode");
            tableMapping.ColumnMappings.Add("CalcFinch", "CalcFinch");
            tableMapping.ColumnMappings.Add("CreditLimit", "CreditLimit");
            tableMapping.ColumnMappings.Add("CreditHold", "CreditHold");
            tableMapping.ColumnMappings.Add("PartialShip", "PartialShip");
            tableMapping.ColumnMappings.Add("AutoCreditHold", "AutoCreditHold");
            tableMapping.ColumnMappings.Add("TaxLocId", "TaxLocId");
            tableMapping.ColumnMappings.Add("Taxable", "Taxable");
            tableMapping.ColumnMappings.Add("TaxExemptId", "TaxExemptId");
            tableMapping.ColumnMappings.Add("CurrencyId", "CurrencyId");
            tableMapping.ColumnMappings.Add("TerrId", "TerrId");
            tableMapping.ColumnMappings.Add("CcCompYn", "CcCompYn");
            tableMapping.ColumnMappings.Add("CustLevel", "CustLevel");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Internet", "Internet");
            tableMapping.ColumnMappings.Add("NewFinch", "NewFinch");
            tableMapping.ColumnMappings.Add("UnpaidFinch", "UnpaidFinch");
            tableMapping.ColumnMappings.Add("CurAmtDue", "CurAmtDue");
            tableMapping.ColumnMappings.Add("CurAmtDueFgn", "CurAmtDueFgn");
            tableMapping.ColumnMappings.Add("BalAge1", "BalAge1");
            tableMapping.ColumnMappings.Add("BalAge2", "BalAge2");
            tableMapping.ColumnMappings.Add("BalAge3", "BalAge3");
            tableMapping.ColumnMappings.Add("BalAge4", "BalAge4");
            tableMapping.ColumnMappings.Add("UnapplCredit", "UnapplCredit");
            tableMapping.ColumnMappings.Add("FirstSaleDate", "FirstSaleDate");
            tableMapping.ColumnMappings.Add("LastSaleDate", "LastSaleDate");
            tableMapping.ColumnMappings.Add("LastSaleAmt", "LastSaleAmt");
            tableMapping.ColumnMappings.Add("LastSaleInvc", "LastSaleInvc");
            tableMapping.ColumnMappings.Add("LastPayDate", "LastPayDate");
            tableMapping.ColumnMappings.Add("LastPayAmt", "LastPayAmt");
            tableMapping.ColumnMappings.Add("LastPayCheckNum", "LastPayCheckNum");
            tableMapping.ColumnMappings.Add("HighBal", "HighBal");
            tableMapping.ColumnMappings.Add("CreditStatus", "CreditStatus");
            tableMapping.ColumnMappings.Add("WebDisplInQtyYn", "WebDisplInQtyYn");
            tableMapping.ColumnMappings.Add("ts", "ts");
            tableMapping.ColumnMappings.Add("AllowCharge", "AllowCharge");
            tableMapping.ColumnMappings.Add("VCode", "VCode");
            tableMapping.ColumnMappings.Add("EmailStmntYn", "EmailStmntYn");
            tableMapping.ColumnMappings.Add("FaxStmntYn", "FaxStmntYn");
            tableMapping.ColumnMappings.Add("UsrFld1", "UsrFld1");
            tableMapping.ColumnMappings.Add("UsrFld2", "UsrFld2");
            tableMapping.ColumnMappings.Add("UsrFld3", "UsrFld3");
            tableMapping.ColumnMappings.Add("UsrFld4", "UsrFld4");
            tableMapping.ColumnMappings.Add("UsrFld5", "UsrFld5");
            tableMapping.ColumnMappings.Add("UsrFld6", "UsrFld6");
            tableMapping.ColumnMappings.Add("UsrFld7", "UsrFld7");
            tableMapping.ColumnMappings.Add("UsrFld8", "UsrFld8");
            tableMapping.ColumnMappings.Add("UsrFld9", "UsrFld9");
            tableMapping.ColumnMappings.Add("UsrFld10", "UsrFld10");
            tableMapping.ColumnMappings.Add("UsrFld11", "UsrFld11");
            tableMapping.ColumnMappings.Add("UsrFld12", "UsrFld12");
            tableMapping.ColumnMappings.Add("UsrFld13", "UsrFld13");
            tableMapping.ColumnMappings.Add("UsrFld14", "UsrFld14");
            tableMapping.ColumnMappings.Add("UsrFld15", "UsrFld15");
            tableMapping.ColumnMappings.Add("UsrFld16", "UsrFld16");
            tableMapping.ColumnMappings.Add("UsrFld17", "UsrFld17");
            tableMapping.ColumnMappings.Add("UsrFld18", "UsrFld18");
            tableMapping.ColumnMappings.Add("UsrFld19", "UsrFld19");
            tableMapping.ColumnMappings.Add("UsrFld20", "UsrFld20");
            tableMapping.ColumnMappings.Add("SchoolYn", "SchoolYn");
            tableMapping.ColumnMappings.Add("InactiveYn", "InactiveYn");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CustId, CustName, Contact, Addr1, Addr2, City, Region, Country, PostalCode, ShipZone, IntlPrefix, Phone, Fax, Attn, ClassId, SalesRepId1, SalesRepId2, Rep1PctInvc, Rep2PctInvc, TermsCode, PmtMethod, CcNum, CcName, CcExpire, GroupCode, StmtInvcCode, AcctType, PriceCode, DistCode, CalcFinch, CreditLimit, CreditHold, PartialShip, AutoCreditHold, TaxLocId, Taxable, TaxExemptId, CurrencyId, TerrId, CcCompYn, CustLevel, Email, Internet, NewFinch, UnpaidFinch, CurAmtDue, CurAmtDueFgn, BalAge1, BalAge2, BalAge3, BalAge4, UnapplCredit, FirstSaleDate, LastSaleDate, LastSaleAmt, LastSaleInvc, LastPayDate, LastPayAmt, LastPayCheckNum, HighBal, CreditStatus, WebDisplInQtyYn, ts, AllowCharge, VCode, EmailStmntYn, FaxStmntYn, UsrFld1, UsrFld2, UsrFld3, UsrFld4, UsrFld5, UsrFld6, UsrFld7, UsrFld8, UsrFld9, UsrFld10, UsrFld11, UsrFld12, UsrFld13, UsrFld14, UsrFld15, UsrFld16, UsrFld17, UsrFld18, UsrFld19, UsrFld20, SchoolYn, InactiveYn, Mobile FROM dbo.lkpArCust WHERE InactiveYn = '0' ORDER BY CustId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.lkpArCustDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.lkpArCustDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.lkpArCustDataTable dataTable = new PRPDataSet1.lkpArCustDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class qryArPRPHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public qryArPRPHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "qryArPRPHistory";
            tableMapping.ColumnMappings.Add("PostRun", "PostRun");
            tableMapping.ColumnMappings.Add("TransId", "TransId");
            tableMapping.ColumnMappings.Add("TransType", "TransType");
            tableMapping.ColumnMappings.Add("BatchId", "BatchId");
            tableMapping.ColumnMappings.Add("CustId", "CustId");
            tableMapping.ColumnMappings.Add("ShipToID", "ShipToID");
            tableMapping.ColumnMappings.Add("ShipToName", "ShipToName");
            tableMapping.ColumnMappings.Add("ShipToAddr1", "ShipToAddr1");
            tableMapping.ColumnMappings.Add("ShipToAddr2", "ShipToAddr2");
            tableMapping.ColumnMappings.Add("ShipToCity", "ShipToCity");
            tableMapping.ColumnMappings.Add("ShipToRegion", "ShipToRegion");
            tableMapping.ColumnMappings.Add("ShipToCountry", "ShipToCountry");
            tableMapping.ColumnMappings.Add("ShipToPostalCode", "ShipToPostalCode");
            tableMapping.ColumnMappings.Add("ShipVia", "ShipVia");
            tableMapping.ColumnMappings.Add("TermsCode", "TermsCode");
            tableMapping.ColumnMappings.Add("TaxableYN", "TaxableYN");
            tableMapping.ColumnMappings.Add("InvcNum", "InvcNum");
            tableMapping.ColumnMappings.Add("CredMemNum", "CredMemNum");
            tableMapping.ColumnMappings.Add("PackNum", "PackNum");
            tableMapping.ColumnMappings.Add("WhseId", "WhseId");
            tableMapping.ColumnMappings.Add("OrderDate", "OrderDate");
            tableMapping.ColumnMappings.Add("ShipNum", "ShipNum");
            tableMapping.ColumnMappings.Add("ShipDate", "ShipDate");
            tableMapping.ColumnMappings.Add("InvcDate", "InvcDate");
            tableMapping.ColumnMappings.Add("Rep1Id", "Rep1Id");
            tableMapping.ColumnMappings.Add("Rep1Pct", "Rep1Pct");
            tableMapping.ColumnMappings.Add("Rep2Id", "Rep2Id");
            tableMapping.ColumnMappings.Add("Rep2Pct", "Rep2Pct");
            tableMapping.ColumnMappings.Add("TaxOnFreight", "TaxOnFreight");
            tableMapping.ColumnMappings.Add("TaxClassFreight", "TaxClassFreight");
            tableMapping.ColumnMappings.Add("TaxClassMisc", "TaxClassMisc");
            tableMapping.ColumnMappings.Add("PostDate", "PostDate");
            tableMapping.ColumnMappings.Add("FiscalYear", "FiscalYear");
            tableMapping.ColumnMappings.Add("GLPeriod", "GLPeriod");
            tableMapping.ColumnMappings.Add("TaxGrpID", "TaxGrpID");
            tableMapping.ColumnMappings.Add("TaxSubtotal", "TaxSubtotal");
            tableMapping.ColumnMappings.Add("NonTaxSubtotal", "NonTaxSubtotal");
            tableMapping.ColumnMappings.Add("SalesTax", "SalesTax");
            tableMapping.ColumnMappings.Add("Freight", "Freight");
            tableMapping.ColumnMappings.Add("Misc", "Misc");
            tableMapping.ColumnMappings.Add("TotCost", "TotCost");
            tableMapping.ColumnMappings.Add("TotPmtAmt", "TotPmtAmt");
            tableMapping.ColumnMappings.Add("TaxSubtotalFgn", "TaxSubtotalFgn");
            tableMapping.ColumnMappings.Add("NonTaxSubtotalFgn", "NonTaxSubtotalFgn");
            tableMapping.ColumnMappings.Add("SalesTaxFgn", "SalesTaxFgn");
            tableMapping.ColumnMappings.Add("FreightFgn", "FreightFgn");
            tableMapping.ColumnMappings.Add("MiscFgn", "MiscFgn");
            tableMapping.ColumnMappings.Add("TotCostFgn", "TotCostFgn");
            tableMapping.ColumnMappings.Add("TotPmtAmtFgn", "TotPmtAmtFgn");
            tableMapping.ColumnMappings.Add("PrintStatus", "PrintStatus");
            tableMapping.ColumnMappings.Add("CustPONum", "CustPONum");
            tableMapping.ColumnMappings.Add("DistCode", "DistCode");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("ExchRate", "ExchRate");
            tableMapping.ColumnMappings.Add("DiscDueDate", "DiscDueDate");
            tableMapping.ColumnMappings.Add("NetDueDate", "NetDueDate");
            tableMapping.ColumnMappings.Add("DiscAmt", "DiscAmt");
            tableMapping.ColumnMappings.Add("DiscAmtFgn", "DiscAmtFgn");
            tableMapping.ColumnMappings.Add("SumHistPeriod", "SumHistPeriod");
            tableMapping.ColumnMappings.Add("TaxAmtAdj", "TaxAmtAdj");
            tableMapping.ColumnMappings.Add("TaxAmtAdjFgn", "TaxAmtAdjFgn");
            tableMapping.ColumnMappings.Add("TaxAdj", "TaxAdj");
            tableMapping.ColumnMappings.Add("TaxLocAdj", "TaxLocAdj");
            tableMapping.ColumnMappings.Add("TaxClassAdj", "TaxClassAdj");
            tableMapping.ColumnMappings.Add("CustLevel", "CustLevel");
            tableMapping.ColumnMappings.Add("PODate", "PODate");
            tableMapping.ColumnMappings.Add("ReqShipDate", "ReqShipDate");
            tableMapping.ColumnMappings.Add("PickNum", "PickNum");
            tableMapping.ColumnMappings.Add("Source", "Source");
            tableMapping.ColumnMappings.Add("BillingPeriodFrom", "BillingPeriodFrom");
            tableMapping.ColumnMappings.Add("PMTransType", "PMTransType");
            tableMapping.ColumnMappings.Add("ProjItem", "ProjItem");
            tableMapping.ColumnMappings.Add("BillingPeriodThru", "BillingPeriodThru");
            tableMapping.ColumnMappings.Add("BillingFormat", "BillingFormat");
            tableMapping.ColumnMappings.Add("PickedBy", "PickedBy");
            tableMapping.ColumnMappings.Add("EnteredBy", "EnteredBy");
            tableMapping.ColumnMappings.Add("PrntListPrice", "PrntListPrice");
            tableMapping.ColumnMappings.Add("ReceivedBy", "ReceivedBy");
            tableMapping.ColumnMappings.Add("PrintTime", "PrintTime");
            tableMapping.ColumnMappings.Add("CustomsPercent", "CustomsPercent");
            tableMapping.ColumnMappings.Add("Pieces", "Pieces");
            tableMapping.ColumnMappings.Add("Uom", "Uom");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("DropShipment", "DropShipment");
            tableMapping.ColumnMappings.Add("CODOption", "CODOption");
            tableMapping.ColumnMappings.Add("CODType", "CODType");
            tableMapping.ColumnMappings.Add("UPSProcessed", "UPSProcessed");
            tableMapping.ColumnMappings.Add("ShipWeight", "ShipWeight");
            tableMapping.ColumnMappings.Add("CustType", "CustType");
            tableMapping.ColumnMappings.Add("PostRun1", "PostRun1");
            tableMapping.ColumnMappings.Add("TransID1", "TransID1");
            tableMapping.ColumnMappings.Add("EntryNum", "EntryNum");
            tableMapping.ColumnMappings.Add("ItemJob", "ItemJob");
            tableMapping.ColumnMappings.Add("WhseId1", "WhseId1");
            tableMapping.ColumnMappings.Add("PartId", "PartId");
            tableMapping.ColumnMappings.Add("JobId", "JobId");
            tableMapping.ColumnMappings.Add("PhaseId", "PhaseId");
            tableMapping.ColumnMappings.Add("JobCompleteYN", "JobCompleteYN");
            tableMapping.ColumnMappings.Add("PartType", "PartType");
            tableMapping.ColumnMappings.Add("Desc", "Desc");
            tableMapping.ColumnMappings.Add("AddnlDesc", "AddnlDesc");
            tableMapping.ColumnMappings.Add("CatId", "CatId");
            tableMapping.ColumnMappings.Add("TaxClass", "TaxClass");
            tableMapping.ColumnMappings.Add("AcctCode", "AcctCode");
            tableMapping.ColumnMappings.Add("GLAcctSales", "GLAcctSales");
            tableMapping.ColumnMappings.Add("GLAcctCOGS", "GLAcctCOGS");
            tableMapping.ColumnMappings.Add("GLAcctInv", "GLAcctInv");
            tableMapping.ColumnMappings.Add("QtyOrdSell", "QtyOrdSell");
            tableMapping.ColumnMappings.Add("UnitsSell", "UnitsSell");
            tableMapping.ColumnMappings.Add("UnitsBase", "UnitsBase");
            tableMapping.ColumnMappings.Add("QtyShipSell", "QtyShipSell");
            tableMapping.ColumnMappings.Add("QtyShipBase", "QtyShipBase");
            tableMapping.ColumnMappings.Add("QtyBackordSell", "QtyBackordSell");
            tableMapping.ColumnMappings.Add("PriceID", "PriceID");
            tableMapping.ColumnMappings.Add("UnitPriceSell", "UnitPriceSell");
            tableMapping.ColumnMappings.Add("UnitPriceSellFgn", "UnitPriceSellFgn");
            tableMapping.ColumnMappings.Add("UnitCostSell", "UnitCostSell");
            tableMapping.ColumnMappings.Add("UnitCostSellFgn", "UnitCostSellFgn");
            tableMapping.ColumnMappings.Add("PriceExt", "PriceExt");
            tableMapping.ColumnMappings.Add("PriceExtFgn", "PriceExtFgn");
            tableMapping.ColumnMappings.Add("CostExtFgn", "CostExtFgn");
            tableMapping.ColumnMappings.Add("CostExt", "CostExt");
            tableMapping.ColumnMappings.Add("PromoID", "PromoID");
            tableMapping.ColumnMappings.Add("ActShipDate", "ActShipDate");
            tableMapping.ColumnMappings.Add("EffectiveRate", "EffectiveRate");
            tableMapping.ColumnMappings.Add("OrigOrderQty", "OrigOrderQty");
            tableMapping.ColumnMappings.Add("BinNum", "BinNum");
            tableMapping.ColumnMappings.Add("ConversionFactor", "ConversionFactor");
            tableMapping.ColumnMappings.Add("LottedYN", "LottedYN");
            tableMapping.ColumnMappings.Add("InItemYN", "InItemYN");
            tableMapping.ColumnMappings.Add("HistSeqNum", "HistSeqNum");
            tableMapping.ColumnMappings.Add("ExtCost", "ExtCost");
            tableMapping.ColumnMappings.Add("ExtFinalInc", "ExtFinalInc");
            tableMapping.ColumnMappings.Add("ExtOrigInc", "ExtOrigInc");
            tableMapping.ColumnMappings.Add("TransHistId", "TransHistId");
            tableMapping.ColumnMappings.Add("TaskId", "TaskId");
            tableMapping.ColumnMappings.Add("PhaseName", "PhaseName");
            tableMapping.ColumnMappings.Add("ProjName", "ProjName");
            tableMapping.ColumnMappings.Add("ExtFinalIncFgn", "ExtFinalIncFgn");
            tableMapping.ColumnMappings.Add("TaskName", "TaskName");
            tableMapping.ColumnMappings.Add("Kit", "Kit");
            tableMapping.ColumnMappings.Add("ReqShipDate1", "ReqShipDate1");
            tableMapping.ColumnMappings.Add("CommAmt", "CommAmt");
            tableMapping.ColumnMappings.Add("CommPaidDate", "CommPaidDate");
            tableMapping.ColumnMappings.Add("DiscPerc", "DiscPerc");
            tableMapping.ColumnMappings.Add("TariffCode", "TariffCode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.qryArPRPHistory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustId", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvcNum", global::System.Data.SqlDbType.VarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.qryArPRPHistoryDataTable dataTable, string CustId, string InvcNum) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustId == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(CustId));
            }
            if ((InvcNum == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(InvcNum));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.qryArPRPHistoryDataTable GetData(string CustId, string InvcNum) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustId == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(CustId));
            }
            if ((InvcNum == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(InvcNum));
            }
            PRPDataSet1.qryArPRPHistoryDataTable dataTable = new PRPDataSet1.qryArPRPHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lkpArHistHeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lkpArHistHeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lkpArHistHeader";
            tableMapping.ColumnMappings.Add("InvcNum", "InvcNum");
            tableMapping.ColumnMappings.Add("TransId", "TransId");
            tableMapping.ColumnMappings.Add("Rep1Id", "Rep1Id");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        InvcNum, TransId, Rep1Id\r\nFROM            dbo.lkpArHistHeader\r\nWHER" +
                "E        (CustId = @CustID) AND (InvcDate > DATEADD(day, -180, GETDATE()))\r\nORDE" +
                "R BY TransId DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustID", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, "CustId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillBy(PRPDataSet1.lkpArHistHeaderDataTable dataTable, string CustID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustID == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CustID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.lkpArHistHeaderDataTable GetDataBy(string CustID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((CustID == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(CustID));
            }
            PRPDataSet1.lkpArHistHeaderDataTable dataTable = new PRPDataSet1.lkpArHistHeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblInPRPReturnsCodesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblInPRPReturnsCodesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblInPRPReturnsCodes";
            tableMapping.ColumnMappings.Add("CodeID", "CodeID");
            tableMapping.ColumnMappings.Add("ReturnCodes", "ReturnCodes");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblInPRPReturnsCodes] WHERE (([CodeID] = @Original_CodeID) AND" +
                " ([ReturnCodes] = @Original_ReturnCodes))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodeID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnCodes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnCodes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tblInPRPReturnsCodes] ([CodeID], [ReturnCodes]) VALUES (@CodeI" +
                "D, @ReturnCodes);\r\nSELECT CodeID, ReturnCodes FROM dbo.tblInPRPReturnsCodes WHER" +
                "E (CodeID = @CodeID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnCodes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnCodes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblInPRPReturnsCodes] SET [CodeID] = @CodeID, [ReturnCodes] = @Retu" +
                "rnCodes WHERE (([CodeID] = @Original_CodeID) AND ([ReturnCodes] = @Original_Retu" +
                "rnCodes));\r\nSELECT CodeID, ReturnCodes FROM dbo.tblInPRPReturnsCodes WHERE (Code" +
                "ID = @CodeID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CodeID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnCodes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnCodes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CodeID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CodeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnCodes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnCodes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CodeID, ReturnCodes FROM dbo.tblInPRPReturnsCodes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.tblInPRPReturnsCodesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.tblInPRPReturnsCodesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.tblInPRPReturnsCodesDataTable dataTable = new PRPDataSet1.tblInPRPReturnsCodesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1.tblInPRPReturnsCodesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "tblInPRPReturnsCodes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(short Original_CodeID, string Original_ReturnCodes) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((short)(Original_CodeID));
            if ((Original_ReturnCodes == null)) {
                throw new global::System.ArgumentNullException("Original_ReturnCodes");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ReturnCodes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short CodeID, string ReturnCodes) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(CodeID));
            if ((ReturnCodes == null)) {
                throw new global::System.ArgumentNullException("ReturnCodes");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ReturnCodes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(short CodeID, string ReturnCodes, short Original_CodeID, string Original_ReturnCodes) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((short)(CodeID));
            if ((ReturnCodes == null)) {
                throw new global::System.ArgumentNullException("ReturnCodes");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ReturnCodes));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(Original_CodeID));
            if ((Original_ReturnCodes == null)) {
                throw new global::System.ArgumentNullException("Original_ReturnCodes");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_ReturnCodes));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ReturnCodes, short Original_CodeID, string Original_ReturnCodes) {
            return this.Update(Original_CodeID, ReturnCodes, Original_CodeID, Original_ReturnCodes);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblInPRPReturnsHeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblInPRPReturnsHeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblInPRPReturnsHeader";
            tableMapping.ColumnMappings.Add("CustID", "CustID");
            tableMapping.ColumnMappings.Add("CustName", "CustName");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("InvoiceNum", "InvoiceNum");
            tableMapping.ColumnMappings.Add("PackingListNum", "PackingListNum");
            tableMapping.ColumnMappings.Add("ReplOrder", "ReplOrder");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("CompletedYn", "CompletedYn");
            tableMapping.ColumnMappings.Add("WrkStnID", "WrkStnID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("TransId", "TransId");
            tableMapping.ColumnMappings.Add("Rep1Id", "Rep1Id");
            tableMapping.ColumnMappings.Add("ReturnAuthNum", "ReturnAuthNum");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [tblInPRPReturnsHeader] WHERE (([ReturnAuthNum] = @Original_ReturnAuthNum) AND ([CustID] = @Original_CustID) AND ([CustName] = @Original_CustName) AND ([Contact] = @Original_Contact) AND ([Phone] = @Original_Phone) AND ([Address1] = @Original_Address1) AND ((@IsNull_Address2 = 1 AND [Address2] IS NULL) OR ([Address2] = @Original_Address2)) AND ([City] = @Original_City) AND ([Region] = @Original_Region) AND ([Zip] = @Original_Zip) AND ([InvoiceNum] = @Original_InvoiceNum) AND ((@IsNull_PackingListNum = 1 AND [PackingListNum] IS NULL) OR ([PackingListNum] = @Original_PackingListNum)) AND ((@IsNull_ReplOrder = 1 AND [ReplOrder] IS NULL) OR ([ReplOrder] = @Original_ReplOrder)) AND ((@IsNull_Memo = 1 AND [Memo] IS NULL) OR ([Memo] = @Original_Memo)) AND ((@IsNull_CompletedYn = 1 AND [CompletedYn] IS NULL) OR ([CompletedYn] = @Original_CompletedYn)) AND ([WrkStnID] = @Original_WrkStnID) AND ([UserID] = @Original_UserID) AND ((@IsNull_TransId = 1 AND [TransId] IS NULL) OR ([TransId] = @Original_TransId)) AND ((@IsNull_Rep1Id = 1 AND [Rep1Id] IS NULL) OR ([Rep1Id] = @Original_Rep1Id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Address2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingListNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingListNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReplOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReplOrder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Memo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompletedYn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompletedYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WrkStnID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WrkStnID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rep1Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rep1Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rep1Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rep1Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblInPRPReturnsHeader] ([ReturnAuthNum], [CustID], [CustName], [Contact], [Phone], [Address1], [Address2], [City], [Region], [Zip], [InvoiceNum], [PackingListNum], [ReplOrder], [Memo], [CompletedYn], [WrkStnID], [UserID], [TransId], [Rep1Id]) VALUES (@ReturnAuthNum, @CustID, @CustName, @Contact, @Phone, @Address1, @Address2, @City, @Region, @Zip, @InvoiceNum, @PackingListNum, @ReplOrder, @Memo, @CompletedYn, @WrkStnID, @UserID, @TransId, @Rep1Id);
SELECT ReturnAuthNum, CustID, CustName, Contact, Phone, Address1, Address2, City, Region, Zip, InvoiceNum, PackingListNum, ReplOrder, Memo, CompletedYn, WrkStnID, UserID, TransId, Rep1Id FROM tblInPRPReturnsHeader WHERE (ReturnAuthNum = @ReturnAuthNum) ORDER BY CAST(ReturnAuthNum AS int) DESC";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingListNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReplOrder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompletedYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WrkStnID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WrkStnID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rep1Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rep1Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblInPRPReturnsHeader] SET [ReturnAuthNum] = @ReturnAuthNum, [CustID] = @" +
                "CustID, [CustName] = @CustName, [Contact] = @Contact, [Phone] = @Phone, [Address" +
                "1] = @Address1, [Address2] = @Address2, [City] = @City, [Region] = @Region, [Zip" +
                "] = @Zip, [InvoiceNum] = @InvoiceNum, [PackingListNum] = @PackingListNum, [ReplO" +
                "rder] = @ReplOrder, [Memo] = @Memo, [CompletedYn] = @CompletedYn, [WrkStnID] = @" +
                "WrkStnID, [UserID] = @UserID, [TransId] = @TransId, [Rep1Id] = @Rep1Id WHERE (([" +
                "ReturnAuthNum] = @Original_ReturnAuthNum) AND ([CustID] = @Original_CustID) AND " +
                "([CustName] = @Original_CustName) AND ([Contact] = @Original_Contact) AND ([Phon" +
                "e] = @Original_Phone) AND ([Address1] = @Original_Address1) AND ((@IsNull_Addres" +
                "s2 = 1 AND [Address2] IS NULL) OR ([Address2] = @Original_Address2)) AND ([City]" +
                " = @Original_City) AND ([Region] = @Original_Region) AND ([Zip] = @Original_Zip)" +
                " AND ([InvoiceNum] = @Original_InvoiceNum) AND ((@IsNull_PackingListNum = 1 AND " +
                "[PackingListNum] IS NULL) OR ([PackingListNum] = @Original_PackingListNum)) AND " +
                "((@IsNull_ReplOrder = 1 AND [ReplOrder] IS NULL) OR ([ReplOrder] = @Original_Rep" +
                "lOrder)) AND ((@IsNull_Memo = 1 AND [Memo] IS NULL) OR ([Memo] = @Original_Memo)" +
                ") AND ((@IsNull_CompletedYn = 1 AND [CompletedYn] IS NULL) OR ([CompletedYn] = @" +
                "Original_CompletedYn)) AND ([WrkStnID] = @Original_WrkStnID) AND ([UserID] = @Or" +
                "iginal_UserID) AND ((@IsNull_TransId = 1 AND [TransId] IS NULL) OR ([TransId] = " +
                "@Original_TransId)) AND ((@IsNull_Rep1Id = 1 AND [Rep1Id] IS NULL) OR ([Rep1Id] " +
                "= @Original_Rep1Id)));\r\nSELECT ReturnAuthNum, CustID, CustName, Contact, Phone, " +
                "Address1, Address2, City, Region, Zip, InvoiceNum, PackingListNum, ReplOrder, Me" +
                "mo, CompletedYn, WrkStnID, UserID, TransId, Rep1Id FROM tblInPRPReturnsHeader WH" +
                "ERE (ReturnAuthNum = @ReturnAuthNum) ORDER BY CAST(ReturnAuthNum AS int) DESC";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PackingListNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReplOrder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplOrder", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompletedYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WrkStnID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WrkStnID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TransId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rep1Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rep1Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contact", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contact", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Address2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Address2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_City", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "City", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Region", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Region", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PackingListNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListNum", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PackingListNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PackingListNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReplOrder", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplOrder", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReplOrder", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReplOrder", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Memo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Memo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Memo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompletedYn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompletedYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WrkStnID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WrkStnID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TransId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TransId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TransId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rep1Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rep1Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rep1Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rep1Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ReturnAuthNum, CustID, CustName, Contact, Phone, Address1, Address2, City," +
                " Region, Zip, InvoiceNum, PackingListNum, ReplOrder, Memo, CompletedYn, WrkStnID" +
                ", UserID, TransId, Rep1Id FROM tblInPRPReturnsHeader ORDER BY CAST(ReturnAuthNum" +
                " AS int) DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT Address1, Address2, City, CompletedYn, Contact, CustID, CustName, InvoiceN" +
                "um, Memo, PackingListNum, Phone, Region, Rep1Id, ReplOrder, ReturnAuthNum, Trans" +
                "Id, UserID, WrkStnID, Zip FROM tblInPRPReturnsHeader WHERE (CompletedYn = @Compl" +
                "etedYn)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompletedYn", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "CompletedYn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Memo\r\nFROM            tblInPRPReturnsHeader\r\nWHERE        (ReturnAu" +
                "thNum = @ReturnAuthNum)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.tblInPRPReturnsHeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.tblInPRPReturnsHeaderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.tblInPRPReturnsHeaderDataTable dataTable = new PRPDataSet1.tblInPRPReturnsHeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(PRPDataSet1.tblInPRPReturnsHeaderDataTable dataTable, global::System.Nullable<bool> CompletedYn) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CompletedYn.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(CompletedYn.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PRPDataSet1.tblInPRPReturnsHeaderDataTable GetDataBy(global::System.Nullable<bool> CompletedYn) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((CompletedYn.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(CompletedYn.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            PRPDataSet1.tblInPRPReturnsHeaderDataTable dataTable = new PRPDataSet1.tblInPRPReturnsHeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1.tblInPRPReturnsHeaderDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "tblInPRPReturnsHeader");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string FillMemo(string ReturnAuthNum) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[2];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                command.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lkpSmCompIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lkpSmCompIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lkpSmCompID";
            tableMapping.ColumnMappings.Add("CompID", "CompID");
            tableMapping.ColumnMappings.Add("WhseID", "WhseID");
            tableMapping.ColumnMappings.Add("PrecUCost", "PrecUCost");
            tableMapping.ColumnMappings.Add("PrecUPrice", "PrecUPrice");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        CompID, WhseID, PrecUCost, PrecUPrice\r\nFROM            dbo.lkpSmCom" +
                "pID\r\nWHERE        (CompID = \'PRP\')";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.lkpSmCompIDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.lkpSmCompIDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.lkpSmCompIDDataTable dataTable = new PRPDataSet1.lkpSmCompIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lkpInItemTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lkpInItemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lkpInItem";
            tableMapping.ColumnMappings.Add("ItemId", "ItemId");
            tableMapping.ColumnMappings.Add("Descr", "Descr");
            tableMapping.ColumnMappings.Add("PriceId", "PriceId");
            tableMapping.ColumnMappings.Add("UomDflt", "UomDflt");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ItemId, Descr, PriceId, UomDflt FROM dbo.lkpInItem";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.lkpInItemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.lkpInItemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.lkpInItemDataTable dataTable = new PRPDataSet1.lkpInItemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblInPRPReturnsDetCdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblInPRPReturnsDetCdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblInPRPReturnsDetCd";
            tableMapping.ColumnMappings.Add("DetID", "DetID");
            tableMapping.ColumnMappings.Add("DetDescr", "DetDescr");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[tblInPRPReturnsDetCd] ([DetID], [DetDescr]) VALUES (@DetID, @D" +
                "etDescr)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DetID", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DetID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DetDescr", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DetDescr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT DetID, DetDescr FROM dbo.tblInPRPReturnsDetCd";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.tblInPRPReturnsDetCdDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.tblInPRPReturnsDetCdDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.tblInPRPReturnsDetCdDataTable dataTable = new PRPDataSet1.tblInPRPReturnsDetCdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1.tblInPRPReturnsDetCdDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "tblInPRPReturnsDetCd");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(short DetID, string DetDescr) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((short)(DetID));
            if ((DetDescr == null)) {
                throw new global::System.ArgumentNullException("DetDescr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(DetDescr));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lkpInPRPReturnsDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lkpInPRPReturnsDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lkpInPRPReturnsDetail";
            tableMapping.ColumnMappings.Add("ReturnAuthNum", "ReturnAuthNum");
            tableMapping.ColumnMappings.Add("EntryNum", "EntryNum");
            tableMapping.ColumnMappings.Add("ReturningItemID", "ReturningItemID");
            tableMapping.ColumnMappings.Add("ReturningQty", "ReturningQty");
            tableMapping.ColumnMappings.Add("ReturningCode", "ReturningCode");
            tableMapping.ColumnMappings.Add("ExplanationText", "ExplanationText");
            tableMapping.ColumnMappings.Add("RestockingFeeYn", "RestockingFeeYn");
            tableMapping.ColumnMappings.Add("ReturnedPartId", "ReturnedPartId");
            tableMapping.ColumnMappings.Add("ReturnedCode", "ReturnedCode");
            tableMapping.ColumnMappings.Add("ReturnedQty", "ReturnedQty");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("TotalPrice", "TotalPrice");
            tableMapping.ColumnMappings.Add("DeterminationCode", "DeterminationCode");
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal");
            tableMapping.ColumnMappings.Add("RestockingFee", "RestockingFee");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ReturnAuthNum, EntryNum, ReturningItemID, ReturningQty, ReturningCode, ExplanationText, RestockingFeeYn, ReturnedPartId, ReturnedCode, ReturnedQty, UnitPrice, TotalPrice, DeterminationCode, SubTotal, RestockingFee, TotalCredit, Credit, CheckNum, CreditAppliedToCCYn, SalesRep, ReceivedBy, ReceivedDate FROM dbo.lkpInPRPReturnsDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.lkpInPRPReturnsDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.lkpInPRPReturnsDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.lkpInPRPReturnsDetailDataTable dataTable = new PRPDataSet1.lkpInPRPReturnsDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class lkpInPRPReturnsHeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public lkpInPRPReturnsHeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "lkpInPRPReturnsHeader";
            tableMapping.ColumnMappings.Add("ReturnAuthNum", "ReturnAuthNum");
            tableMapping.ColumnMappings.Add("CustID", "CustID");
            tableMapping.ColumnMappings.Add("CustName", "CustName");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("InvoiceNum", "InvoiceNum");
            tableMapping.ColumnMappings.Add("PackingListNum", "PackingListNum");
            tableMapping.ColumnMappings.Add("ReplOrder", "ReplOrder");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("CompletedYn", "CompletedYn");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate");
            tableMapping.ColumnMappings.Add("WrkStnID", "WrkStnID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("TransId", "TransId");
            tableMapping.ColumnMappings.Add("Rep1Id", "Rep1Id");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ReturnAuthNum, CustID, CustName, Contact, Phone, Address1, Address2, City," +
                " Region, Country, Zip, InvoiceNum, PackingListNum, ReplOrder, Memo, CompletedYn," +
                " CreationDate, WrkStnID, UserID, Rep1Id, TransId FROM dbo.lkpInPRPReturnsHeader";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.lkpInPRPReturnsHeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.lkpInPRPReturnsHeaderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.lkpInPRPReturnsHeaderDataTable dataTable = new PRPDataSet1.lkpInPRPReturnsHeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class stpSmLookupTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public stpSmLookupTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "stpSmLookup";
            tableMapping.ColumnMappings.Add("SrchID", "SrchID");
            tableMapping.ColumnMappings.Add("FieldNo", "FieldNo");
            tableMapping.ColumnMappings.Add("FieldName", "FieldName");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("DataType", "DataType");
            tableMapping.ColumnMappings.Add("DataSize", "DataSize");
            tableMapping.ColumnMappings.Add("Searched", "Searched");
            tableMapping.ColumnMappings.Add("Enabled", "Enabled");
            tableMapping.ColumnMappings.Add("TableName", "TableName");
            tableMapping.ColumnMappings.Add("TableNameCS", "TableNameCS");
            tableMapping.ColumnMappings.Add("OrderBy", "OrderBy");
            tableMapping.ColumnMappings.Add("Where", "Where");
            tableMapping.ColumnMappings.Add("FieldMask", "FieldMask");
            tableMapping.ColumnMappings.Add("Fields", "Fields");
            tableMapping.ColumnMappings.Add("RowList", "RowList");
            tableMapping.ColumnMappings.Add("AllowFilter", "AllowFilter");
            tableMapping.ColumnMappings.Add("FieldSort", "FieldSort");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SrchID, FieldNo, FieldName, Description, DataType, DataSize, Searched, Ena" +
                "bled, TableName, TableNameCS, OrderBy, [Where], FieldMask, Fields, RowList, Allo" +
                "wFilter, FieldSort FROM dbo.stpSmLookup";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        SrchID, FieldNo, FieldName, Description, DataType, DataSize, Searched, Enabled, TableName, TableNameCS, OrderBy, [Where], FieldMask, Fields, RowList, 
                         AllowFilter, FieldSort
FROM            dbo.stpSmLookup
WHERE        (SrchID = 'frmInPRPReturns')";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.stpSmLookupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.stpSmLookupDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.stpSmLookupDataTable dataTable = new PRPDataSet1.stpSmLookupDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(PRPDataSet1.stpSmLookupDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class stpSmLookupHeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public stpSmLookupHeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "stpSmLookupHeader";
            tableMapping.ColumnMappings.Add("SrchID", "SrchID");
            tableMapping.ColumnMappings.Add("Descr", "Descr");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SrchID, Descr FROM dbo.stpSmLookupHeader";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.stpSmLookupHeaderDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.stpSmLookupHeaderDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.stpSmLookupHeaderDataTable dataTable = new PRPDataSet1.stpSmLookupHeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblInPRPReturnsHistTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblInPRPReturnsHistTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblInPRPReturnsHist";
            tableMapping.ColumnMappings.Add("ReturnAuthNum", "ReturnAuthNum");
            tableMapping.ColumnMappings.Add("CustID", "CustID");
            tableMapping.ColumnMappings.Add("CustName", "CustName");
            tableMapping.ColumnMappings.Add("Contact", "Contact");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Address1", "Address1");
            tableMapping.ColumnMappings.Add("Address2", "Address2");
            tableMapping.ColumnMappings.Add("City", "City");
            tableMapping.ColumnMappings.Add("Region", "Region");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("InvoiceNum", "InvoiceNum");
            tableMapping.ColumnMappings.Add("PackingListNum", "PackingListNum");
            tableMapping.ColumnMappings.Add("ReplOrder", "ReplOrder");
            tableMapping.ColumnMappings.Add("Memo", "Memo");
            tableMapping.ColumnMappings.Add("CompletedYn", "CompletedYn");
            tableMapping.ColumnMappings.Add("WrkStnID", "WrkStnID");
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("TransId", "TransId");
            tableMapping.ColumnMappings.Add("EntryNum", "EntryNum");
            tableMapping.ColumnMappings.Add("ReturningItemID", "ReturningItemID");
            tableMapping.ColumnMappings.Add("ReturningQty", "ReturningQty");
            tableMapping.ColumnMappings.Add("ReturningCode", "ReturningCode");
            tableMapping.ColumnMappings.Add("ExplanationText", "ExplanationText");
            tableMapping.ColumnMappings.Add("RestockingFeeYn", "RestockingFeeYn");
            tableMapping.ColumnMappings.Add("ReturnedPartId", "ReturnedPartId");
            tableMapping.ColumnMappings.Add("ReturnedCode", "ReturnedCode");
            tableMapping.ColumnMappings.Add("ReturnedQty", "ReturnedQty");
            tableMapping.ColumnMappings.Add("ReceivedBy", "ReceivedBy");
            tableMapping.ColumnMappings.Add("TotalPrice", "TotalPrice");
            tableMapping.ColumnMappings.Add("DeterminationCode", "DeterminationCode");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal");
            tableMapping.ColumnMappings.Add("RestockingFee", "RestockingFee");
            tableMapping.ColumnMappings.Add("Rep1Id", "Rep1Id");
            tableMapping.ColumnMappings.Add("CreationDate", "CreationDate1");
            tableMapping.ColumnMappings.Add("ReceivedDate", "ReceivedDate1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        tblInPRPReturnsHeader.ReturnAuthNum, tblInPRPReturnsHeader.CustID, " +
                "tblInPRPReturnsHeader.CustName, tblInPRPReturnsHeader.Contact, \r\n               " +
                "          tblInPRPReturnsHeader.Phone, tblInPRPReturnsHeader.Address1, tblInPRPR" +
                "eturnsHeader.Address2, tblInPRPReturnsHeader.City, tblInPRPReturnsHeader.Region," +
                " \r\n                         tblInPRPReturnsHeader.Country, tblInPRPReturnsHeader" +
                ".Zip, tblInPRPReturnsHeader.InvoiceNum, tblInPRPReturnsHeader.PackingListNum, \r\n" +
                "                         tblInPRPReturnsHeader.ReplOrder, tblInPRPReturnsHeader." +
                "Memo, tblInPRPReturnsHeader.CompletedYn, tblInPRPReturnsHeader.CreationDate, \r\n " +
                "                        tblInPRPReturnsHeader.WrkStnID, tblInPRPReturnsHeader.Us" +
                "erID, tblInPRPReturnsHeader.TransId, tblInPRPReturnsDetail.EntryNum, \r\n         " +
                "                tblInPRPReturnsDetail.ReturningItemID, tblInPRPReturnsDetail.Ret" +
                "urningQty, tblInPRPReturnsDetail.ReturningCode, tblInPRPReturnsDetail.Explanatio" +
                "nText, \r\n                         tblInPRPReturnsDetail.RestockingFeeYn, tblInPR" +
                "PReturnsDetail.ReturnedPartId, tblInPRPReturnsDetail.ReturnedCode, tblInPRPRetur" +
                "nsDetail.ReturnedQty, \r\n                         tblInPRPReturnsDetail.ReceivedD" +
                "ate, tblInPRPReturnsDetail.ReceivedBy, tblInPRPReturnsDetail.UnitPrice, tblInPRP" +
                "ReturnsDetail.TotalPrice, \r\n                         tblInPRPReturnsDetail.Deter" +
                "minationCode, tblInPRPReturnsDetail.SubTotal, tblInPRPReturnsDetail.RestockingFe" +
                "e, tblInPRPReturnsHeader.Rep1Id\r\nFROM            tblInPRPReturnsHeader INNER JOI" +
                "N\r\n                         tblInPRPReturnsDetail ON tblInPRPReturnsHeader.Retur" +
                "nAuthNum = tblInPRPReturnsDetail.ReturnAuthNum\r\nWHERE        (tblInPRPReturnsHea" +
                "der.ReturnAuthNum = @ReturnAuthNum)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.tblInPRPReturnsHistDataTable dataTable, string ReturnAuthNum) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.tblInPRPReturnsHistDataTable GetData(string ReturnAuthNum) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            PRPDataSet1.tblInPRPReturnsHistDataTable dataTable = new PRPDataSet1.tblInPRPReturnsHistDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblInPRPReturnsDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblInPRPReturnsDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblInPRPReturnsDetail";
            tableMapping.ColumnMappings.Add("EntryNum", "EntryNum");
            tableMapping.ColumnMappings.Add("ReturningItemID", "ReturningItemID");
            tableMapping.ColumnMappings.Add("ReturningQty", "ReturningQty");
            tableMapping.ColumnMappings.Add("ReturningCode", "ReturningCode");
            tableMapping.ColumnMappings.Add("ExplanationText", "ExplanationText");
            tableMapping.ColumnMappings.Add("RestockingFeeYn", "RestockingFeeYn");
            tableMapping.ColumnMappings.Add("ReturnedPartId", "ReturnedPartId");
            tableMapping.ColumnMappings.Add("ReturnedCode", "ReturnedCode");
            tableMapping.ColumnMappings.Add("ReturnedQty", "ReturnedQty");
            tableMapping.ColumnMappings.Add("ReceivedBy", "ReceivedBy");
            tableMapping.ColumnMappings.Add("UnitPrice", "UnitPrice");
            tableMapping.ColumnMappings.Add("TotalPrice", "TotalPrice");
            tableMapping.ColumnMappings.Add("DeterminationCode", "DeterminationCode");
            tableMapping.ColumnMappings.Add("SubTotal", "SubTotal");
            tableMapping.ColumnMappings.Add("RestockingFee", "RestockingFee");
            tableMapping.ColumnMappings.Add("Solution", "Solution");
            tableMapping.ColumnMappings.Add("ReturnAuthNum", "ReturnAuthNum");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [tblInPRPReturnsDetail] WHERE (([ReturnAuthNum] = @Original_ReturnAut" +
                "hNum) AND ([EntryNum] = @Original_EntryNum) AND ((@IsNull_ReturningItemID = 1 AN" +
                "D [ReturningItemID] IS NULL) OR ([ReturningItemID] = @Original_ReturningItemID))" +
                " AND ((@IsNull_ReturningQty = 1 AND [ReturningQty] IS NULL) OR ([ReturningQty] =" +
                " @Original_ReturningQty)) AND ((@IsNull_ReturningCode = 1 AND [ReturningCode] IS" +
                " NULL) OR ([ReturningCode] = @Original_ReturningCode)) AND ((@IsNull_Explanation" +
                "Text = 1 AND [ExplanationText] IS NULL) OR ([ExplanationText] = @Original_Explan" +
                "ationText)) AND ((@IsNull_RestockingFeeYn = 1 AND [RestockingFeeYn] IS NULL) OR " +
                "([RestockingFeeYn] = @Original_RestockingFeeYn)) AND ((@IsNull_ReturnedPartId = " +
                "1 AND [ReturnedPartId] IS NULL) OR ([ReturnedPartId] = @Original_ReturnedPartId)" +
                ") AND ((@IsNull_ReturnedCode = 1 AND [ReturnedCode] IS NULL) OR ([ReturnedCode] " +
                "= @Original_ReturnedCode)) AND ((@IsNull_ReturnedQty = 1 AND [ReturnedQty] IS NU" +
                "LL) OR ([ReturnedQty] = @Original_ReturnedQty)) AND ((@IsNull_ReceivedBy = 1 AND" +
                " [ReceivedBy] IS NULL) OR ([ReceivedBy] = @Original_ReceivedBy)) AND ((@IsNull_U" +
                "nitPrice = 1 AND [UnitPrice] IS NULL) OR ([UnitPrice] = @Original_UnitPrice)) AN" +
                "D ((@IsNull_TotalPrice = 1 AND [TotalPrice] IS NULL) OR ([TotalPrice] = @Origina" +
                "l_TotalPrice)) AND ((@IsNull_DeterminationCode = 1 AND [DeterminationCode] IS NU" +
                "LL) OR ([DeterminationCode] = @Original_DeterminationCode)) AND ((@IsNull_SubTot" +
                "al = 1 AND [SubTotal] IS NULL) OR ([SubTotal] = @Original_SubTotal)) AND ((@IsNu" +
                "ll_RestockingFee = 1 AND [RestockingFee] IS NULL) OR ([RestockingFee] = @Origina" +
                "l_RestockingFee)) AND ((@IsNull_Solution = 1 AND [Solution] IS NULL) OR ([Soluti" +
                "on] = @Original_Solution)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturningItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningItemID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturningItemID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturningQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningQty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturningQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturningQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturningCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturningCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExplanationText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplanationText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExplanationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplanationText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestockingFeeYn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFeeYn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestockingFeeYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFeeYn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturnedPartId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedPartId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnedPartId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedPartId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturnedCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnedCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturnedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedQty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnedQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturnedQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnitPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "TotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeterminationCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeterminationCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeterminationCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeterminationCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "SubTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestockingFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestockingFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "RestockingFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Solution", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Solution", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Solution", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Solution", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [tblInPRPReturnsDetail] ([ReturnAuthNum], [EntryNum], [ReturningItemID], [ReturningQty], [ReturningCode], [ExplanationText], [RestockingFeeYn], [ReturnedPartId], [ReturnedCode], [ReturnedQty], [ReceivedBy], [UnitPrice], [TotalPrice], [DeterminationCode], [SubTotal], [RestockingFee], [Solution]) VALUES (@ReturnAuthNum, @EntryNum, @ReturningItemID, @ReturningQty, @ReturningCode, @ExplanationText, @RestockingFeeYn, @ReturnedPartId, @ReturnedCode, @ReturnedQty, @ReceivedBy, @UnitPrice, @TotalPrice, @DeterminationCode, @SubTotal, @RestockingFee, @Solution);
SELECT ReturnAuthNum, EntryNum, ReturningItemID, ReturningQty, ReturningCode, ExplanationText, RestockingFeeYn, ReturnedPartId, ReturnedCode, ReturnedQty, ReceivedBy, UnitPrice, TotalPrice, DeterminationCode, SubTotal, RestockingFee, Solution FROM tblInPRPReturnsDetail WHERE (EntryNum = @EntryNum) AND (ReturnAuthNum = @ReturnAuthNum)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturningItemID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturningQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturningQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturningCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExplanationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplanationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestockingFeeYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFeeYn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnedPartId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedPartId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnedCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnedQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturnedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "TotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeterminationCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeterminationCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "SubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestockingFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "RestockingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Solution", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Solution", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [tblInPRPReturnsDetail] SET [ReturnAuthNum] = @ReturnAuthNum, [EntryNum] =" +
                " @EntryNum, [ReturningItemID] = @ReturningItemID, [ReturningQty] = @ReturningQty" +
                ", [ReturningCode] = @ReturningCode, [ExplanationText] = @ExplanationText, [Resto" +
                "ckingFeeYn] = @RestockingFeeYn, [ReturnedPartId] = @ReturnedPartId, [ReturnedCod" +
                "e] = @ReturnedCode, [ReturnedQty] = @ReturnedQty, [ReceivedBy] = @ReceivedBy, [U" +
                "nitPrice] = @UnitPrice, [TotalPrice] = @TotalPrice, [DeterminationCode] = @Deter" +
                "minationCode, [SubTotal] = @SubTotal, [RestockingFee] = @RestockingFee, [Solutio" +
                "n] = @Solution WHERE (([ReturnAuthNum] = @Original_ReturnAuthNum) AND ([EntryNum" +
                "] = @Original_EntryNum) AND ((@IsNull_ReturningItemID = 1 AND [ReturningItemID] " +
                "IS NULL) OR ([ReturningItemID] = @Original_ReturningItemID)) AND ((@IsNull_Retur" +
                "ningQty = 1 AND [ReturningQty] IS NULL) OR ([ReturningQty] = @Original_Returning" +
                "Qty)) AND ((@IsNull_ReturningCode = 1 AND [ReturningCode] IS NULL) OR ([Returnin" +
                "gCode] = @Original_ReturningCode)) AND ((@IsNull_ExplanationText = 1 AND [Explan" +
                "ationText] IS NULL) OR ([ExplanationText] = @Original_ExplanationText)) AND ((@I" +
                "sNull_RestockingFeeYn = 1 AND [RestockingFeeYn] IS NULL) OR ([RestockingFeeYn] =" +
                " @Original_RestockingFeeYn)) AND ((@IsNull_ReturnedPartId = 1 AND [ReturnedPartI" +
                "d] IS NULL) OR ([ReturnedPartId] = @Original_ReturnedPartId)) AND ((@IsNull_Retu" +
                "rnedCode = 1 AND [ReturnedCode] IS NULL) OR ([ReturnedCode] = @Original_Returned" +
                "Code)) AND ((@IsNull_ReturnedQty = 1 AND [ReturnedQty] IS NULL) OR ([ReturnedQty" +
                "] = @Original_ReturnedQty)) AND ((@IsNull_ReceivedBy = 1 AND [ReceivedBy] IS NUL" +
                "L) OR ([ReceivedBy] = @Original_ReceivedBy)) AND ((@IsNull_UnitPrice = 1 AND [Un" +
                "itPrice] IS NULL) OR ([UnitPrice] = @Original_UnitPrice)) AND ((@IsNull_TotalPri" +
                "ce = 1 AND [TotalPrice] IS NULL) OR ([TotalPrice] = @Original_TotalPrice)) AND (" +
                "(@IsNull_DeterminationCode = 1 AND [DeterminationCode] IS NULL) OR ([Determinati" +
                "onCode] = @Original_DeterminationCode)) AND ((@IsNull_SubTotal = 1 AND [SubTotal" +
                "] IS NULL) OR ([SubTotal] = @Original_SubTotal)) AND ((@IsNull_RestockingFee = 1" +
                " AND [RestockingFee] IS NULL) OR ([RestockingFee] = @Original_RestockingFee)) AN" +
                "D ((@IsNull_Solution = 1 AND [Solution] IS NULL) OR ([Solution] = @Original_Solu" +
                "tion)));\r\nSELECT ReturnAuthNum, EntryNum, ReturningItemID, ReturningQty, Returni" +
                "ngCode, ExplanationText, RestockingFeeYn, ReturnedPartId, ReturnedCode, Returned" +
                "Qty, ReceivedBy, UnitPrice, TotalPrice, DeterminationCode, SubTotal, RestockingF" +
                "ee, Solution FROM tblInPRPReturnsDetail WHERE (EntryNum = @EntryNum) AND (Return" +
                "AuthNum = @ReturnAuthNum)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EntryNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturningItemID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningItemID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturningQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturningQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturningCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExplanationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplanationText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestockingFeeYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFeeYn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnedPartId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedPartId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnedCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnedQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturnedQty", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "UnitPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "TotalPrice", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeterminationCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeterminationCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "SubTotal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RestockingFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "RestockingFee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Solution", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Solution", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EntryNum", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EntryNum", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturningItemID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningItemID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturningItemID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningItemID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturningQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningQty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturningQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturningQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturningCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturningCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturningCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ExplanationText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplanationText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExplanationText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExplanationText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestockingFeeYn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFeeYn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestockingFeeYn", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFeeYn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturnedPartId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedPartId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnedPartId", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedPartId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturnedCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnedCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReturnedQty", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnedQty", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReturnedQty", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "ReturnedQty", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ReceivedBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ReceivedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ReceivedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UnitPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnitPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UnitPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "UnitPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TotalPrice", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TotalPrice", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalPrice", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "TotalPrice", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeterminationCode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeterminationCode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeterminationCode", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeterminationCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SubTotal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubTotal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubTotal", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "SubTotal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RestockingFee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RestockingFee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RestockingFee", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 20, 10, "RestockingFee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Solution", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Solution", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Solution", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Solution", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Traverse_Returns_Addon.Properties.Settings.Default.PRPConnStr;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT       ReturnAuthNum, EntryNum, ReturningItemID, ReturningQty, ReturningCode, ExplanationText, RestockingFeeYn, ReturnedPartId, 
                         ReturnedCode, ReturnedQty, ReceivedBy, UnitPrice, TotalPrice, DeterminationCode, SubTotal, RestockingFee, Solution
FROM            tblInPRPReturnsDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        COUNT(EntryNum) AS EntryCount\r\nFROM            tblInPRPReturnsDetai" +
                "l\r\nWHERE        (ReturnAuthNum = @ReturnAuthNum)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT DeterminationCode, EntryNum, ExplanationText, ReceivedBy, RestockingFee, RestockingFeeYn, ReturnAuthNum, ReturnedCode, ReturnedPartId, ReturnedQty, ReturningCode, ReturningItemID, ReturningQty, Solution, SubTotal, TotalPrice, UnitPrice FROM tblInPRPReturnsDetail WHERE (ReturnAuthNum = @ReturnAuthNum)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        SUM(TotalPrice) AS Expr1\r\nFROM            tblInPRPReturnsDetail\r\nWH" +
                "ERE        (ReturnAuthNum = @ReturnAuthNum)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReturnAuthNum", global::System.Data.SqlDbType.VarChar, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ReturnAuthNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(PRPDataSet1.tblInPRPReturnsDetailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual PRPDataSet1.tblInPRPReturnsDetailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            PRPDataSet1.tblInPRPReturnsDetailDataTable dataTable = new PRPDataSet1.tblInPRPReturnsDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(PRPDataSet1.tblInPRPReturnsDetailDataTable dataTable, string ReturnAuthNum) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual PRPDataSet1.tblInPRPReturnsDetailDataTable GetDataBy1(string ReturnAuthNum) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            PRPDataSet1.tblInPRPReturnsDetailDataTable dataTable = new PRPDataSet1.tblInPRPReturnsDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1.tblInPRPReturnsDetailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(PRPDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "tblInPRPReturnsDetail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_ReturnAuthNum, 
                    short Original_EntryNum, 
                    string Original_ReturningItemID, 
                    global::System.Nullable<decimal> Original_ReturningQty, 
                    global::System.Nullable<short> Original_ReturningCode, 
                    string Original_ExplanationText, 
                    global::System.Nullable<bool> Original_RestockingFeeYn, 
                    string Original_ReturnedPartId, 
                    global::System.Nullable<short> Original_ReturnedCode, 
                    global::System.Nullable<decimal> Original_ReturnedQty, 
                    string Original_ReceivedBy, 
                    global::System.Nullable<decimal> Original_UnitPrice, 
                    global::System.Nullable<decimal> Original_TotalPrice, 
                    global::System.Nullable<short> Original_DeterminationCode, 
                    global::System.Nullable<decimal> Original_SubTotal, 
                    global::System.Nullable<decimal> Original_RestockingFee, 
                    string Original_Solution) {
            if ((Original_ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("Original_ReturnAuthNum");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ReturnAuthNum));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((short)(Original_EntryNum));
            if ((Original_ReturningItemID == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ReturningItemID));
            }
            if ((Original_ReturningQty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_ReturningQty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ReturningCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((short)(Original_ReturningCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ExplanationText == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_ExplanationText));
            }
            if ((Original_RestockingFeeYn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_RestockingFeeYn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ReturnedPartId == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ReturnedPartId));
            }
            if ((Original_ReturnedCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((short)(Original_ReturnedCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_ReturnedQty.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_ReturnedQty.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedBy == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_ReceivedBy));
            }
            if ((Original_UnitPrice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_UnitPrice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalPrice.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_TotalPrice.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_DeterminationCode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((short)(Original_DeterminationCode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_SubTotal.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_SubTotal.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_RestockingFee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_RestockingFee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Solution == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_Solution));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ReturnAuthNum, 
                    short EntryNum, 
                    string ReturningItemID, 
                    global::System.Nullable<decimal> ReturningQty, 
                    global::System.Nullable<short> ReturningCode, 
                    string ExplanationText, 
                    global::System.Nullable<bool> RestockingFeeYn, 
                    string ReturnedPartId, 
                    global::System.Nullable<short> ReturnedCode, 
                    global::System.Nullable<decimal> ReturnedQty, 
                    string ReceivedBy, 
                    global::System.Nullable<decimal> UnitPrice, 
                    global::System.Nullable<decimal> TotalPrice, 
                    global::System.Nullable<short> DeterminationCode, 
                    global::System.Nullable<decimal> SubTotal, 
                    global::System.Nullable<decimal> RestockingFee, 
                    string Solution) {
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((short)(EntryNum));
            if ((ReturningItemID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ReturningItemID));
            }
            if ((ReturningQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(ReturningQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ReturningCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((short)(ReturningCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ExplanationText == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ExplanationText));
            }
            if ((RestockingFeeYn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(RestockingFeeYn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ReturnedPartId == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ReturnedPartId));
            }
            if ((ReturnedCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((short)(ReturnedCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ReturnedQty.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ReturnedQty.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ReceivedBy == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ReceivedBy));
            }
            if ((UnitPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(UnitPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TotalPrice.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(TotalPrice.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DeterminationCode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((short)(DeterminationCode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SubTotal.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(SubTotal.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RestockingFee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(RestockingFee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Solution == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(Solution));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ReturnAuthNum, 
                    short EntryNum, 
                    string ReturningItemID, 
                    global::System.Nullable<decimal> ReturningQty, 
                    global::System.Nullable<short> ReturningCode, 
                    string ExplanationText, 
                    global::System.Nullable<bool> RestockingFeeYn, 
                    string ReturnedPartId, 
                    global::System.Nullable<short> ReturnedCode, 
                    global::System.Nullable<decimal> ReturnedQty, 
                    string ReceivedBy, 
                    global::System.Nullable<decimal> UnitPrice, 
                    global::System.Nullable<decimal> TotalPrice, 
                    global::System.Nullable<short> DeterminationCode, 
                    global::System.Nullable<decimal> SubTotal, 
                    global::System.Nullable<decimal> RestockingFee, 
                    string Solution, 
                    string Original_ReturnAuthNum, 
                    short Original_EntryNum, 
                    string Original_ReturningItemID, 
                    global::System.Nullable<decimal> Original_ReturningQty, 
                    global::System.Nullable<short> Original_ReturningCode, 
                    string Original_ExplanationText, 
                    global::System.Nullable<bool> Original_RestockingFeeYn, 
                    string Original_ReturnedPartId, 
                    global::System.Nullable<short> Original_ReturnedCode, 
                    global::System.Nullable<decimal> Original_ReturnedQty, 
                    string Original_ReceivedBy, 
                    global::System.Nullable<decimal> Original_UnitPrice, 
                    global::System.Nullable<decimal> Original_TotalPrice, 
                    global::System.Nullable<short> Original_DeterminationCode, 
                    global::System.Nullable<decimal> Original_SubTotal, 
                    global::System.Nullable<decimal> Original_RestockingFee, 
                    string Original_Solution) {
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((short)(EntryNum));
            if ((ReturningItemID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ReturningItemID));
            }
            if ((ReturningQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(ReturningQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ReturningCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(ReturningCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ExplanationText == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ExplanationText));
            }
            if ((RestockingFeeYn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(RestockingFeeYn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ReturnedPartId == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ReturnedPartId));
            }
            if ((ReturnedCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(ReturnedCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ReturnedQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(ReturnedQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ReceivedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ReceivedBy));
            }
            if ((UnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(UnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TotalPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(TotalPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DeterminationCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((short)(DeterminationCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(SubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((RestockingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(RestockingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Solution == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Solution));
            }
            if ((Original_ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("Original_ReturnAuthNum");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ReturnAuthNum));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(Original_EntryNum));
            if ((Original_ReturningItemID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ReturningItemID));
            }
            if ((Original_ReturningQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_ReturningQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ReturningCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((short)(Original_ReturningCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_ExplanationText == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_ExplanationText));
            }
            if ((Original_RestockingFeeYn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(Original_RestockingFeeYn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_ReturnedPartId == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_ReturnedPartId));
            }
            if ((Original_ReturnedCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((short)(Original_ReturnedCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_ReturnedQty.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_ReturnedQty.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_ReceivedBy == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_ReceivedBy));
            }
            if ((Original_UnitPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_UnitPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_TotalPrice.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_TotalPrice.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_DeterminationCode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((short)(Original_DeterminationCode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SubTotal.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_SubTotal.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_RestockingFee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_RestockingFee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Solution == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Solution));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ReturningItemID, 
                    global::System.Nullable<decimal> ReturningQty, 
                    global::System.Nullable<short> ReturningCode, 
                    string ExplanationText, 
                    global::System.Nullable<bool> RestockingFeeYn, 
                    string ReturnedPartId, 
                    global::System.Nullable<short> ReturnedCode, 
                    global::System.Nullable<decimal> ReturnedQty, 
                    string ReceivedBy, 
                    global::System.Nullable<decimal> UnitPrice, 
                    global::System.Nullable<decimal> TotalPrice, 
                    global::System.Nullable<short> DeterminationCode, 
                    global::System.Nullable<decimal> SubTotal, 
                    global::System.Nullable<decimal> RestockingFee, 
                    string Solution, 
                    string Original_ReturnAuthNum, 
                    short Original_EntryNum, 
                    string Original_ReturningItemID, 
                    global::System.Nullable<decimal> Original_ReturningQty, 
                    global::System.Nullable<short> Original_ReturningCode, 
                    string Original_ExplanationText, 
                    global::System.Nullable<bool> Original_RestockingFeeYn, 
                    string Original_ReturnedPartId, 
                    global::System.Nullable<short> Original_ReturnedCode, 
                    global::System.Nullable<decimal> Original_ReturnedQty, 
                    string Original_ReceivedBy, 
                    global::System.Nullable<decimal> Original_UnitPrice, 
                    global::System.Nullable<decimal> Original_TotalPrice, 
                    global::System.Nullable<short> Original_DeterminationCode, 
                    global::System.Nullable<decimal> Original_SubTotal, 
                    global::System.Nullable<decimal> Original_RestockingFee, 
                    string Original_Solution) {
            return this.Update(Original_ReturnAuthNum, Original_EntryNum, ReturningItemID, ReturningQty, ReturningCode, ExplanationText, RestockingFeeYn, ReturnedPartId, ReturnedCode, ReturnedQty, ReceivedBy, UnitPrice, TotalPrice, DeterminationCode, SubTotal, RestockingFee, Solution, Original_ReturnAuthNum, Original_EntryNum, Original_ReturningItemID, Original_ReturningQty, Original_ReturningCode, Original_ExplanationText, Original_RestockingFeeYn, Original_ReturnedPartId, Original_ReturnedCode, Original_ReturnedQty, Original_ReceivedBy, Original_UnitPrice, Original_TotalPrice, Original_DeterminationCode, Original_SubTotal, Original_RestockingFee, Original_Solution);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object CountEntryNumbers(string ReturnAuthNum) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                command.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<decimal> SubTotal(string ReturnAuthNum) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[3];
            if ((ReturnAuthNum == null)) {
                throw new global::System.ArgumentNullException("ReturnAuthNum");
            }
            else {
                command.Parameters[0].Value = ((string)(ReturnAuthNum));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<decimal>();
            }
            else {
                return new global::System.Nullable<decimal>(((decimal)(returnValue)));
            }
        }
    }
}

#pragma warning restore 1591